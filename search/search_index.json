{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u6765\u5230 HPC101 \u8d85\u7b97\u77ed\u5b66\u671f \u672c\u7f51\u7ad9\u63cf\u8ff0\u4e86\u8bfe\u7a0b\u4e2d\u6240\u6709\u5b9e\u9a8c\uff0c\u5982\u6709\u7591\u95ee\u8bf7\u53ca\u65f6\u8054\u7cfb\u5404\u4f4d\u52a9\u6559","title":"\u6b22\u8fce\u6765\u5230 HPC101 \u8d85\u7b97\u77ed\u5b66\u671f"},{"location":"#hpc101","text":"\u672c\u7f51\u7ad9\u63cf\u8ff0\u4e86\u8bfe\u7a0b\u4e2d\u6240\u6709\u5b9e\u9a8c\uff0c\u5982\u6709\u7591\u95ee\u8bf7\u53ca\u65f6\u8054\u7cfb\u5404\u4f4d\u52a9\u6559","title":"\u6b22\u8fce\u6765\u5230 HPC101 \u8d85\u7b97\u77ed\u5b66\u671f"},{"location":"Lab1-MiniCluster/","text":"\u5b9e\u9a8c\u4e00\uff1a\u7b80\u5355\u96c6\u7fa4\u642d\u5efa 1 \u5b9e\u9a8c\u7b80\u4ecb \u672c\u6b21\u5b9e\u9a8c\u8981\u6c42\u4f7f\u7528\u56db\u53f0\u865a\u62df\u673a\u642d\u5efa\u4e00\u4e2a\u7b80\u6613\u7684\u96c6\u7fa4\uff0c\u5e76\u5bf9\u8be5\u96c6\u7fa4\u8fdb\u884c\u6027\u80fd\u6d4b\u8bd5\uff0c\u6700\u540e\u63d0\u4ea4\u6d4b\u8bd5\u7ed3\u679c\u548c\u5b9e\u9a8c\u62a5\u544a\u3002 \u96c6\u7fa4\u642d\u5efa\u7684\u4efb\u52a1\u5305\u62ec\u521b\u5efa\u865a\u62df\u673a\u3001\u5b89\u88c5 Linux \u53d1\u884c\u7248\u3001\u914d\u7f6e\u7f51\u7edc\u548c ssh \u901a\u4fe1\u3002 \u6027\u80fd\u6d4b\u8bd5\u901a\u8fc7\u4f7f\u7528 OpenMPI \u5c06 HPL \u6d4b\u8bd5\u7a0b\u5e8f\u5206\u914d\u5230\u56db\u4e2a\u865a\u62df\u673a\u8282\u70b9\u4e0a\u6267\u884c\u3002\u56e0\u6b64\uff0c\u9700\u8981\u4e0b\u8f7d\u5e76\u7f16\u8bd1 OpenMPI\u3001BLAS \u548c HPL \u7684\u6e90\u4ee3\u7801\uff0c\u5176\u4e2d OpenMPI\u3001BLAS\u662f HPL \u7684\u4f9d\u8d56\u9879\u3002 2 \u5b9e\u9a8c\u73af\u5883 \u4e00\u53f0\u8ba1\u7b97\u673a\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4efb\u610f Hypervisor (\u672c\u624b\u518c\u4e3a Virtual Box) \u865a\u62df\u673a * 4 3 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd 3.1 \u8ba1\u7b97\u673a\u96c6\u7fa4 \u8ba1\u7b97\u673a\u96c6\u7fa4 \u662f\u8fde\u63a5\u5728\u4e00\u8d77\u3001\u534f\u540c\u5de5\u4f5c\u7684\u4e00\u7ec4\u8ba1\u7b97\u673a\uff0c\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e2a\u8ba1\u7b97\u673a\u90fd\u662f\u4e00\u4e2a\u8282\u70b9\u3002\u5728\u96c6\u7fa4\u4e2d\uff0c\u7531\u8f6f\u4ef6\u5c06\u4e0d\u540c\u7684\u8ba1\u7b97\u4efb\u52a1\uff08task\uff09\u5206\u914d\uff08schedule\uff09\u5230\u76f8\u5e94\u7684\u4e00\u4e2a\u6216\u4e00\u7fa4\u8282\u70b9\uff08node\uff09\u4e0a\u3002\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u9700\u8981\u4f7f\u7528 OpenMPI \u5c06 HPL \u7a0b\u5e8f\u4f5c\u4e3a task \u5206\u914d\u5230\u96c6\u7fa4\u4e2d\u7684\u56db\u4e2a\u8282\u70b9\u4e0a\u3002 3.1.1 \u865a\u62df\u673a \u865a\u62df\u673a\u4e3a\u8fd0\u884c\u5728\u5176\u4e2d\u7684guest\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e94\u7528\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6a21\u62df\u7684\u786c\u4ef6\u73af\u5883\uff0c\u548c\u771f\u5b9e\u7684\u786c\u4ef6\u4fdd\u6301\u4e00\u6837\u7684\u63a5\u53e3\u548c\u8868\u73b0\uff0c\u540c\u65f6\u4e5f\u5982\u771f\u5b9e\u7684\u786c\u4ef6\u4e00\u6837\u4e3a\u5176\u4e2d\u7684\u64cd\u4f5c\u7cfb\u7edf\u548c\u7a0b\u5e8f\u63d0\u4f9b\u4fdd\u62a4\u673a\u5236\u3001\u7ba1\u7406\u63a5\u53e3\u548c\u8d44\u6e90\u9650\u5236\u3002\u4e00\u4e2a\u7b80\u6613\u7684\u975e\u865a\u62df\u673a\u548c\u865a\u62df\u673a\u7ed3\u6784\u7684\u5bf9\u6bd4\u5982\u4e0b\u56fe\uff08\u6765\u6e90\uff1aAbraham Silberschatz, Peter Baer Galvin, Greg Gagn, Operating System Concepts , 10th edition, Chapter 18) \u4e00\u79cd\u5e38\u89c1\u7684\u865a\u62df\u673a\u673a\u5236\u5b9e\u73b0\u65b9\u5f0f\u4fbf\u662f\u901a\u8fc7 hypervisor\uff08\u53c8\u79f0VMM: Virtual Machnie Manager\uff09\u6765\u4e3a guest \u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u6a21\u62df\u786c\u4ef6\u73af\u5883\uff0c\u8fd9\u4e5f\u4e3a\u5728\u4e00\u53f0\u7269\u7406\u673a\u4e0a\u8fd0\u884c\u591a\u4e2a\u865a\u62df\u673a\u63d0\u4f9b\u4e86\u53ef\u80fd\u3002 \u672c\u624b\u518c\u4e2d\u4f7f\u7528 Virtural Box \u4f5c\u4e3a hypervisor \u8fdb\u884c\u793a\u8303\u548c\u8bf4\u660e\u3002 3.1.2 Linux\u53d1\u884c\u7248 Linux \u53d1\u884c\u7248\uff08\u4e5f\u88ab\u53eb\u505a GNU/Linux \u53d1\u884c\u7248\uff09\uff0c\u4e3a\u4e00\u822c\u7528\u6237\u9884\u5148\u96c6\u6210\u597d\u7684 Linux \u64cd\u4f5c\u7cfb\u7edf\u53ca\u5404\u79cd\u5e94\u7528 \u8f6f\u4ef6\u3002\u4e00\u822c\u7528\u6237\u4e0d\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\uff0c\u5728\u76f4\u63a5\u5b89\u88c5\u4e4b\u540e\uff0c\u53ea\u9700\u8981\u5c0f\u5e45\u5ea6\u66f4\u6539\u8bbe\u7f6e\u5c31\u53ef\u4ee5\u4f7f\u7528\uff0c\u901a\u5e38\u4ee5\u8f6f\u4ef6\u5305\u7ba1\u7406\u7cfb\u7edf\u6765\u8fdb\u884c\u5e94\u7528\u8f6f\u4ef6\u7684\u7ba1\u7406\u3002Linux \u53d1\u884c\u7248\u901a\u5e38\u5305\u542b\u4e86\u5305\u62ec\u684c\u9762\u73af\u5883\u3001\u529e\u516c\u5305\u3001\u5a92\u4f53\u64ad\u653e\u5668\u3001\u6570\u636e\u5e93\u7b49\u5e94\u7528\u8f6f\u4ef6\u3002\u8fd9\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u901a\u5e38\u7531 Linux \u5185\u6838\u3001\u4ee5\u53ca\u6765\u81ea GNU \u8ba1\u5212\u7684\u5927\u91cf\u7684\u51fd\u6570\u5e93\uff0c\u548c\u57fa\u4e8e X Window \u7684\u56fe\u5f62\u754c\u9762\u3002\u73b0\u5728\u6709\u8d85\u8fc7 300 \u4e2a Linux\u53d1\u884c\u7248\u3002\u5927\u90e8\u5206\u90fd\u6b63\u5904\u4e8e\u6d3b\u8dc3\u7684\u5f00\u53d1\u4e2d\uff0c\u4e0d\u65ad\u5730\u6539\u8fdb\u3002\u7531\u4e8e\u5927\u591a\u6570\u8f6f\u4ef6\u5305\u662f\u81ea\u7531\u8f6f\u4ef6\u548c\u5f00\u6e90\u8f6f\u4ef6\uff0c\u6240\u4ee5 Linux \u53d1\u884c\u7248\u7684\u5f62\u5f0f\u591a\u79cd\u591a\u6837\u2014\u2014\u4ece\u529f\u80fd\u9f50\u5168\u7684\u684c\u9762\u7cfb\u7edf\u4ee5\u53ca\u670d\u52a1\u5668\u7cfb\u7edf\u5230\u5c0f\u578b\u7cfb\u7edf (\u4f8b\u5982\u4e00\u4e9b\u5d4c\u5165\u5f0f\u8bbe\u5907)\u3002\u9664\u4e86\u4e00\u4e9b\u5b9a\u5236\u8f6f\u4ef6 (\u5982\u5b89\u88c5\u548c\u914d\u7f6e\u5de5\u5177)\uff0c\u53d1\u884c\u7248\u901a\u5e38\u53ea\u662f\u5c06\u7279\u5b9a\u7684\u5e94\u7528\u8f6f\u4ef6\u5b89\u88c5\u5728\u4e00\u5806\u51fd\u6570\u5e93\u548c\u5185\u6838\u4e0a\uff0c\u4ee5\u6ee1\u8db3\u7279\u5b9a\u7528\u6237\u7684\u9700\u6c42\u3002 \u8fd9\u4e9b\u53d1\u884c\u7248\u53ef\u4ee5\u5206\u4e3a\u5546\u4e1a\u53d1\u884c\u7248\uff0c\u6bd4\u5982 Ubuntu\uff08Canonical \u516c\u53f8\uff09\u3001Fedora\uff08Red Hat\uff09\u3001openSUSE \uff08Novell\uff09\u548c Mandriva Linux\uff1b\u548c\u793e\u533a\u53d1\u884c\u7248\uff0c\u5b83\u4eec\u7531\u81ea\u7531\u8f6f\u4ef6\u793e\u533a\u63d0\u4f9b\u652f\u6301\uff0c\u5982 Debian \u548c Gentoo\uff1b\u4e5f\u6709\u53d1\u884c\u7248\u65e2\u4e0d\u662f\u5546\u4e1a\u53d1\u884c\u7248\u4e5f\u4e0d\u662f\u793e\u533a\u53d1\u884c\u7248\uff0c\u5982 Slackware\u3002 3.2 HPL HPL\u662f\u4e00\u4e2a\u53ef\u4ee5\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u89e3\u7a20\u5bc6\u7ebf\u6027\u7cfb\u7edf\u7684\u8f6f\u4ef6\u5305\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u88ab\u7528\u6765\u505a\u9ad8\u6027\u80fd\u8ba1\u7b97Linpack\u6d4b\u8bd5\uff08High Performance Computing Linpack Benchmark\uff09\u3002 \u5173\u4e8eHPL\u7684\u8be6\u7ec6\u4ecb\u7ecd\u53ef\u53c2\u8003 https://www.netlib.org/benchmark/hpl/ The HPL software package requires the availibility on your system of an implementation of the Message Passing Interface MPI (1.1 compliant). An implementation of either the Basic Linear Algebra Subprograms BLAS or the Vector Signal Image Processing Library VSIPL is also needed. Machine-specific as well as generic implementations of MPI , the BLAS and VSIPL are available for a large variety of systems. HPL \u9700\u8981\u7cfb\u7edf\u4e2d\u6709 MPI \u5b9e\u73b0\u548c BLAS \u5b9e\u73b0\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u5b89\u88c5 HPL \u524d\u5728\u865a\u62df\u673a\u4e2d\u5b89\u88c5 OpenMPI \u548c BLAS\u3002 OpenMPI \u662f\u4e00\u4e2a\u5f00\u6e90\u7684 Message Passing Interface \u5b9e\u73b0\uff0c\u7531\u4e00\u4e9b\u79d1\u7814\u673a\u6784\u548c\u4f01\u4e1a\u4e00\u8d77\u5f00\u53d1\u548c\u7ef4\u62a4\u3002MPI \u662f\u4e00\u5957\u6807\u51c6\u5316\u3001\u53ef\u79fb\u690d\u7684\u6d88\u606f\u4f20\u9012\u6807\u51c6\uff0c\u5b83\u88ab\u8bbe\u8ba1\u7528\u4e8e\u652f\u6301\u5e76\u884c\u8ba1\u7b97\u7cfb\u7edf\u7684\u67b6\u6784\uff0c\u4f7f\u5f97\u5f00\u53d1\u8005\u80fd\u591f\u65b9\u4fbf\u5730\u5f00\u53d1\u53ef\u79fb\u690d\u7684\u6d88\u606f\u4f20\u9012\u7a0b\u5e8f\u3002\u540c\u65f6\uff0cMPI \u7f16\u7a0b\u80fd\u529b\u5728\u9ad8\u6027\u80fd\u8ba1\u7b97\u7684\u5b9e\u8df5\u4e0e\u5b66\u4e60\u4e2d\u4e5f\u662f\u975e\u5e38\u57fa\u7840\u7684\u6280\u80fd\u3002 BLAS \u662f Basic Linear Algebra Subprograms \u7684\u7f29\u5199\uff0c\u672c\u624b\u518c\u53ea\u8981\u6c42\u5c06\u5176\u4f5c\u4e3a HPL \u7684\u4f9d\u8d56\u9879\u4e0b\u8f7d\u5b89\u88c5\u5373\u53ef\uff0c\u65e0\u9700\u8fc7\u591a\u4e86\u89e3\u3002 4 \u5b9e\u9a8c\u6b65\u9aa4 4.1 \u4e0b\u8f7d Hypervisor \u548c Linux \u5149\u76d8\u6620\u50cf\u6587\u4ef6 4.1.1 Hypervisor \u5728\u521b\u5efa\u865a\u62df\u673a\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u5148\u51c6\u5907\u597d Hypervisor\uff0c\u5728\u672c\u624b\u518c\u4e2d\uff0c\u6211\u4eec\u4ee5 Virtual Box \u4e3a\u4f8b\uff0c\u5176\u4ed6\u7684 Hypervisor \u8bf7\u81ea\u884c\u53c2\u9605\u76f8\u5173\u6750\u6599\uff1a Virtual Box \u5b98\u7f51\u4e0b\u8f7d \uff1a \u6ce8\u610f \u4e0d\u8981\u9009\u9519\u5bbf\u4e3b\u673a\u5e73\u53f0 \uff01 Docker \u7531\u4e8e\u672c\u6b21\u5b9e\u9a8c\u5e0c\u671b\u5927\u5bb6\u4ece\u88f8\u673a\u624b\u5de5\u5b8c\u6210\u5b8c\u6574\u7684\u96c6\u7fa4\u914d\u7f6e\uff0c\u5305\u62ec\u7f51\u7edc\u548c\u7cfb\u7edf\u8f6f\u4ef6\u73af\u5883\u7b49\uff0c\u56e0\u6b64\u672c\u6b21\u5b9e\u9a8c\u4e0d\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 Docker\uff0c\u5982\u679c\u5b66\u6709\u4f59\u529b\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528 Docker \u590d\u73b0\u672c\u6b21\u5b9e\u9a8c\uff0c\u4f5c\u4e3a\u52a0\u5206\u9879\uff08\u865a\u62df\u673a\u4e3a\u5fc5\u505a\uff09\u3002 4.1.2 Linux \u5149\u76d8\u6620\u50cf\u6587\u4ef6 \u672c\u624b\u518c\u6240\u4f7f\u7528\u7684\u8303\u4f8b\u53d1\u884c\u7248\u662f Debian 11\uff0c\u540c\u5b66\u53ef\u6839\u636e\u81ea\u5df1\u7684\u559c\u597d\u548c\u7ecf\u9a8c\u6311\u9009\u9002\u5408\u7684\u53d1\u884c\u7248\u3002 Debian \u4e0b\u8f7d\u70b9\uff08\u5982\u679c\u7f51\u901f\u95ee\u9898\u53ef\u8bbf\u95ee\u56fd\u5185\u955c\u50cf\uff09\uff1a ZJU Mirror Tuna Mirror Official Mirror \u82b1\u82b1\u7eff\u7eff\u7684\u6620\u50cf\uff0c\u8be5\u600e\u4e48\u9009\u62e9\u597d\u5462\uff1f\u56fe\u4e2d\u5e26\u6709 mate \u5b57\u773c\u7684\u6620\u50cf\u4ee3\u8868\u9644\u6709 mate \u684c\u9762\uff0c\u4e3a\u4e86\u6700\u7cbe\u7b80\u5b89\u88c5\uff0c\u672c\u624b\u518c\u91c7 standard \u7248\u672c\uff08\u4e0d\u542b\u684c\u9762\uff09\u3002 \u4e0d\u63a8\u8350\u4f7f\u7528\u7684\u5149\u76d8\u6620\u50cf \u4ece\u4e92\u8054\u7f51\u4e0b\u8f7d (\u5173\u952e\u5b57\uff1aInstall via Internet / netinstall) \u6b64\u7c7b\u955c\u50cf\u662f\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u8bbf\u95ee\u4e92\u8054\u7f51\u4e0b\u8f7d\u9700\u8981\u7684\u5305\uff0c\u7531\u4e8e\u865a\u62df\u673a\u53ef\u80fd\u65e0\u6cd5\u8bbf\u95ee\u4e92\u8054\u7f51\uff0c\u90e8\u5206\u955c\u50cf\u867d\u7136\u4f53\u79ef\u5c0f\u4f46\u7f3a\u5c11\u5f88\u591a\u91cd\u8981\u7684\u547d\u4ee4\uff0c\u56e0\u6b64\u4e0d\u8981\u6311\u9009\u6b64\u7c7b\u955c\u50cf\u3002 \u5e26\u6709\u684c\u9762\u73af\u5883\u7684\u5149\u76d8\u6620\u50cf (\u5173\u952e\u5b57\uff1aDesktop / \u4ee5\u53ca\u540e\u9762\u5e26\u6709 gnome, kde, lxde \u7b49\u8bcd\u7684\u6620\u50cf) \u5982\u679c\u8ba1\u7b97\u673a\u4e0a\u7684\u78c1\u76d8\u7a7a\u95f4\u8f83\u4e0d\u5145\u8db3\uff0c\u5efa\u8bae\u4e0d\u8981\u4e0b\u8f7d\u5e26\u6709\u684c\u9762\u73af\u5883\u7684\u5149\u76d8\u6620\u50cf\uff0c\u5982\u679c\u4f60\u504f\u597d\u684c\u9762\u4e14\u7a7a\u95f4\u8db3\u591f\u53ef\u4ee5\u5ffd\u7565\u3002 \u4f60\u4e0d\u719f\u6089\u7684\u5149\u76d8\u6620\u50cf / \u6ca1\u6709\u56fe\u5f62\u754c\u9762(GUI)\u5b89\u88c5\u7a0b\u5e8f\u7684\u5149\u76d8\u6620\u50cf Linux \u53d1\u884c\u7248\u76f8\u5f53\u591a\uff0c\u4e0d\u719f\u6089\u6216\u6ca1\u4f7f\u7528\u8fc7 Linux \u7684\u540c\u5b66\u5efa\u8bae\u53c2\u8003\u672c\u624b\u518c\uff0c\u76f8\u4fe1\u81ea\u5df1\u5df2\u7ecf\u6709\u4e00\u5b9a\u57fa\u7840\u7684\u540c\u5b66\u53ef\u4ee5\u5ffd\u7565\u3002 4.2 \u642d\u5efa\u96c6\u7fa4\u5e76\u5b89\u88c5\u76f8\u5173\u7a0b\u5e8f 4.2.1 \u521b\u5efa\u865a\u62df\u673a \u51c6\u5907\u597d Hypervisor \u8ddf \u5149\u76d8\u6620\u50cf\u540e\uff0c\u5c31\u53ef\u4ee5\u7740\u624b\u5b89\u88c5\u4e00\u4e2a\u865a\u62df\u673a\u4e86\uff0c\u8bf7\u53c2\u8003 Virtual Box \u624b\u518c\u548c\u76f8\u5173\u6559\u7a0b\u3002 \u9009\u62e9\u53d1\u884c\u7248\u3001\u5185\u5b58\u3001\u78c1\u76d8\u7a7a\u95f4 \u9009\u62e9\u81ea\u5df1\u8981\u5b89\u88c5\u7684\u53d1\u884c\u7248\uff08\u5982\u679c\u6ca1\u6709\u76f4\u63a5\u9009 Linux \u5373\u53ef\uff09\uff0c\u5185\u5b58\u548c\u78c1\u76d8\u7a7a\u95f4\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5206\u914d\u3002 \u63d2\u5165\u53d1\u884c\u7248\u6620\u50cf\u6587\u4ef6\u548c\u914d\u7f6e\u7f51\u7edc \u9009\u53d6\u521a\u4e0b\u8f7d\u7684\u6620\u50cf\u6587\u4ef6\u3002 \u7f51\u7edc\u5bf9\u865a\u62df\u673a\u6765\u8bf4\u5341\u5206\u590d\u6742\uff0c\u5982\u679c\u4f60\u4e0d\u719f\u6089\u76f8\u5173\u7684\u540d\u8bcd\uff0c\u5728\u4e00\u53f0\u865a\u62df\u673a\u7684\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u9ed8\u8ba4\u7684 NAT \u5373\u53ef\u3002\u9009\u62e9 NAT \u7684\u53e6\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u56e0\u4e3a\u624b\u518c\u9700\u8981\u8282\u70b9\u95f4\u5f7c\u6b64\u4e92\u8fde\uff0c\u56e0\u6b64\u4f7f\u7528 NAT Network \u7684\u540c\u65f6\uff0c\u6240\u6709\u8282\u70b9\u4e5f\u53ef\u8bbf\u95ee\u4e92\u8054\u7f51\u3002 \u4e0d\u9700\u8981\u4e92\u8054\u7f51\u6216\u8005\u4f7f\u7528\u6709\u7ebf\u7f51\u7684\u540c\u5b66\u4e5f\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 Bridged \u6216 Internal Network\uff0c\u5177\u4f53\u8bf7\u53c2\u8003\u624b\u518c\u4e0a\u7684\u8bf4\u660e\uff1a Virtual Networking \u3002 \u5c0f\u8d34\u58eb - \u5982\u679c\u4f60\u7684\u865a\u62df\u673a\u65e0\u6cd5\u8fde\u4e0a\u7f51\uff0c\u53ef\u80fd\u662f\u5bbf\u4e3b\u673a\u7684\u95ee\u9898\uff0c\u8bf7 \u6392\u67e5\u5bbf\u4e3b\u673a\u7684\u7f51\u7edc\u72b6\u51b5 \u3002 - \u7531\u4e8e\u5b66\u6821\u7684\u7f51\u7edc\u60c5\u51b5\uff0c\u5728\u5b66\u6821\u4e2d\u4f7f\u7528\u865a\u62df\u673a\u7684\u540c\u5b66\u8fd8\u662f \u4ee5 NAT Network \u4e3a\u4e3b \u8f83\u65b9\u4fbf\u3002 \u8fdb\u5165\u56fe\u5f62\u5b89\u88c5\u7a0b\u5e8f \u5728\u542f\u52a8\u865a\u62df\u673a\u540e\uff0c\u4e0d\u8981\u76f4\u63a5\u8fdb\u5165 Live CD\uff0c\u76f4\u63a5\u8fdb\u5165\u5b89\u88c5\u7a0b\u5e8f\uff0c\u7167\u7740\u5f15\u5bfc\u8d70\u5373\u53ef\u3002 \u5b89\u88c5\u5b8c\u6210\u5e76\u91cd\u542f \u5728\u521a\u521a\u63d2\u5165\u6620\u50cf\u6587\u4ef6\u7684\u5730\u65b9\u53d6\u6d88\u9009\u53d6\u6620\u50cf\u6587\u4ef6\uff0c\u5426\u5219\u4e0b\u6b21\u91cd\u542f\u65f6\u8fd8\u4f1a\u8fdb\u5165 Live CD\u3002 4.2.2 \u4e0b\u8f7d\u5e76\u5b89\u88c5 OpenMPI \u7531\u4e8e\u7cfb\u7edf\u4e2d\u7684\u5305\u901a\u5e38\u6bd4\u8f83\u65e7\uff0c\u56e0\u6b64\u6211\u4eec\u4ece OpenMPI \u7684\u5b98\u7f51\u4e2d\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u6e90\u7801\u81ea\u884c\u7f16\u8bd1\u5b89\u88c5\uff1a OpenMPI \u4e0b\u8f7d \u3002 \u5c0f\u8d34\u58eb - \u5728\u865a\u62df\u673a \u53ef\u8054\u7f51 \u7684\u73af\u5883\u4e0b\uff0c\u53ef\u76f4\u63a5\u4f7f\u7528 wget \u6216 curl \u6765\u4e0b\u8f7d\uff0c\u4f1a\u65b9\u4fbf\u8bb8\u591a\u3002 - \u5728\u7f16\u8bd1\u524d\uff0c\u5148\u4e86\u89e3 make \u548c autoconf \uff0c\u53ef\u4ee5\u51cf\u5c11\u4e0d\u5c11\u9664\u9519\u65f6\u95f4\u3002 \u4fee\u6539 PATH \u548c LD_LIBRARY_PATH \u8bf7\u5c06\u627e\u5230 OpenMPI \u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u76ee\u5f55\u52a0\u5165 PATH \u73af\u5883\u53d8\u91cf\uff0cOpenMPI \u5e93\u7684\u76ee\u5f55\u52a0\u5165 LD_LIBRARY_PATH \u73af\u5883\u53d8\u91cf\u3002 4.2.3 \u4e0b\u8f7d\u5e76\u5b89\u88c5 HPL \u4e0b\u8f7d\u5730\u5740\uff1a https://netlib.org/benchmark/hpl/software.html BLAS HPL \u7684\u4f9d\u8d56\u9664\u4e86\u4e00\u4e2a MPI \u5b9e\u73b0\uff08\u5728\u624b\u518c\u4e2d\u662f OpenMPI\uff09\u5916\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a BLAS \u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece netlib \u4e0b\u8f7d \u5176\u4e2d\u4e00\u4e2a\u5b9e\u73b0 \uff0c\u867d\u7136\u6ca1\u6709\u4f18\u5316\u8fc7\uff0c\u4f46\u62ff\u6765\u6d4b\u8bd5\u5df2\u7ecf\u8db3\u591f\u4e86\u3002 \u68c0\u67e5 gcc / gfortran \u73af\u5883 BLAS \u9700\u8981 gcc / gfortran \u6765\u7f16\u8bd1\uff0c\u8bf7\u52a1\u5fc5\u68c0\u67e5\u81ea\u5df1\u865a\u62df\u673a\u4e2d\u7f16\u8bd1\u5668\u662f\u5426\u5b58\u5728\u53ca\u5176\u7248\u672c\u3002 \u7f16\u8bd1 BLAS/CBLAS \u5148\u7f16\u8bd1 BLAS\uff0c\u518d\u53c2\u8003 README \u548c INSTALL \u4fee\u6539 CBLAS \u7684 Makefile \u5e76\u7f16\u8bd1 \uff08\u9700\u8981 BLAS \u7684\u94fe\u63a5\u6587\u4ef6\uff09\u3002 \u4fee\u6539 HPL Makefile \u89e3\u538b HPL \u538b\u7f29\u5305\u540e\uff0c\u5728\u6839\u76ee\u5f55\u7684 setup/ \u6587\u4ef6\u5939\u4e0b\u6709 Makefile \u76f8\u5173\u6587\u4ef6\u7684\u6a21\u677f(Make.xxx\uff0c\u540e\u7f00\u4ee3\u8868\u67b6\u6784)\uff0c\u590d\u5236\u5230\u6839\u76ee\u5f55\u5e76\u4fdd\u5b58\u3002 \u53c2\u8003 README \uff0c\u6839\u636e\u81ea\u5df1\u60c5\u51b5\u4fee\u6539\u4ee5\u4e0b\u53c2\u6570\uff1a # Make.test # arch ARCH = test ... # MPI MPdir = /path/to/your/mpi/ MPinc = -I $( MPdir ) /include64 MPlib = $( MPdir ) /libmpi.so # BLAS LAdir = /path/to/your/blas LAinc = LAlib = $( LAdir ) /lib ... # compiler CC = /path/to/your/mpicc LINKER = $( CC ) \u2003\u2003\u4fee\u6539\u5f53\u524d\u76ee\u5f55\u4e0b Make.top \u4e2d\u7684 arch \u53c2\u6570\uff0c\u9700\u4e0e Make.test \u4e2d\u7684\u4e00\u81f4\u3002 \u7f16\u8bd1 # \u66ff\u6362\u6210\u4f60\u81ea\u5df1\u7684\u540e\u7f00 make arch = test 4.2.4 \u514b\u9686\u8282\u70b9 \u5728 Virtual Box \u4e2d\uff0c\u514b\u9686\u5df2\u7ecf\u914d\u7f6e\u5b8c\u6210\u7684\u8282\u70b9\u6210\u4e3a\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u8282\u70b9\uff0c\u672c\u624b\u518c\u8303\u4f8b\u4e2d\u4ec5\u514b\u9686\u4e00\u4e2a\uff08\u96c6\u7fa4\u4e2d\u4e24\u4e2a\u8282\u70b9\uff09\uff0c\u53ef\u514b\u9686\u66f4\u591a\u3002 4.3 \u6d4b\u8bd5\u96c6\u7fa4 4.3.1 ping ping \u662f\u6d4b\u8bd5\u8282\u70b9\u7f51\u7edc\u8fde\u901a\u6027\u6700\u4e3a\u7b80\u5355\u7684\u65b9\u5f0f\uff0c\u5728\u8fdb\u884c\u5176\u4ed6\u6d4b\u8bd5\u524d\uff0c\u8bf7\u5148\u786e\u8ba4\u80fd ping \u901a\u6240\u6709\u8282\u70b9\u3002 4.3.2 \u914d\u7f6e ssh ssh \u662f\u76f8\u5f53\u5e38\u7528\u7684\uff0c\u5b9e\u73b0\u5b89\u5168\u8fdc\u7a0b\u8fde\u63a5\u7684\u65b9\u5f0f\uff0c\u5176\u539f\u7406\u548c\u4f7f\u7528\u3001\u914d\u7f6e\u65b9\u6cd5\u8bf7\u67e5\u9605\u76f8\u5173\u53c2\u8003\u8d44\u6599\uff1a Open SSH \u7f51\u7ad9 \u5982\u679c\u4f60\u6ca1\u6709 ssh \u5bc6\u94a5\uff0c\u53ef\u4ee5\u5728\u5176\u4e2d\u4e00\u4e2a\u8282\u70b9\u521b\u5efa\u4e00\u4e2a\uff1a ssh-keygen \u6211\u4eec\u9700\u8981\u5c06\u81ea\u5df1\u7684 ssh \u516c\u94a5\u590d\u5236\u4e00\u4efd\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\u4e0a\u7684 .ssh/authorized_keys \u4e2d\uff08\u53ef\u4ee5\u5229\u7528 ssh-copy-id \u547d\u4ee4\u6765\u62f7\u8d1d\u516c\u94a5\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 nc \u5c06\u516c\u94a5\u4f5c\u4e3a\u6587\u4ef6\u4f20\u8f93\uff09\u3002\u590d\u5236\u5b8c\u6210\u540e\uff0c\u6ce8\u610f\u68c0\u67e5 authorized_keys (600) \u548c .ssh/ (700) \u76ee\u5f55\u7684\u6743\u9650\uff0c\u5426\u5219\u65e0\u6cd5\u987a\u5229 ssh \u3002 ssh passphrase \u5982\u679c\u81ea\u5df1\u7684\u5bc6\u94a5\u6709 passphrase\uff0c\u90a3\u4e48\u8bf7\u4f7f\u7528 ssh-agent \u786e\u4fdd\u80fd\u6682\u65f6\u4e0d\u7528\u8f93\u5165 passphrase\uff0c\u4ee5\u514d\u4e4b\u540e\u5f71\u54cd mpirun \u6b63\u786e\u8fd0\u884c\u3002 4.3.3 mpirun \u5c3d\u7ba1\u5bf9 OpenMPI \u5341\u5206\u964c\u751f\uff0c\u6211\u4eec\u8fd8\u662f\u80fd\u5229\u7528\u5b83\u6765\u8dd1\u975e MPI \u7684\u7a0b\u5e8f\uff0c\u540c\u5b66\u53ef\u4ee5\u7f16\u5199\u7b80\u5355\u7684 Helloworld \u7a0b\u5e8f\u6765\u6d4b\u8bd5 OpenMPI\uff0c\u6216\u8005\u76f4\u63a5\u4f7f\u7528 Unix \u547d\u4ee4\u3002 OpenMPI hostfile \u4e24\u4e2a\u8282\u70b9\u90fd\u51c6\u5907\u597d\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8bd5\u8bd5 mpirun \u4e86\uff01\u6309\u7167\u5982\u4e0b\u683c\u5f0f\uff0c\u7f16\u5199 MPI \u7684 hostfile \u5e76\u4fdd\u5b58\uff1a localhost slots=1 10.0.2.5 slots=1 \u5176\u4e2d slots \u4ee3\u8868\u7684\u610f\u601d\u662f\u4e00\u4e2a\u8282\u70b9\u7684 CPU \u6709\u591a\u5c11\u6838\uff0c\u7531\u4e8e\u6211\u4eec\u521b\u5efa\u865a\u62df\u673a\u65f6\u4ec5\u5206\u914d\u4e00\u4e2a\u6838\uff0c\u56e0\u6b64\u8fd9\u91cc\u7684 slots \u4e0a\u9650\u4e3a 1 \uff0c\u540c\u5b66\u6839\u636e\u81ea\u5df1\u865a\u62df\u673a\u7684\u60c5\u51b5\uff0c\u4fee\u6539 slots \u7684\u503c\u3002 \u6d4b\u8bd5\u7a0b\u5e8f OpenMPI \u9700\u8981\u6d4b\u8bd5\u7a0b\u5e8f\u4e3a\u8282\u70b9\u6240\u5171\u6709\u6216\u5728\u8282\u70b9\u4e0a\u6709\u76f8\u540c\u8def\u5f84\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u7b2c\u4e8c\u4e2a\u8282\u70b9\u662f\u514b\u9686\u51fa\u6765\u7684\uff0c\u56e0\u6b64\u4e24\u4e2a\u8282\u70b9\u4e0a\u7684\u547d\u4ee4\u548c HPL \u7a0b\u5e8f\u90fd\u4f1a\u662f\u76f8\u540c\u8def\u5f84\uff0c \u6b64\u65f6\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5c31\u80fd\u770b\u5230\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7ebf\u4e86\u591a\u4e45\uff1a mpirun --hostfile myhostfile uptime \u8fd0\u884c HPL\uff1a mpirun --hostfile myhostfile ./xhpl 5 \u5b9e\u9a8c\u4efb\u52a1\u4e0e\u8981\u6c42 \u642d\u5efa\u56db\u4e2a\u8282\u70b9\u7684\u865a\u62df\u673a\u5e76\u8bb0\u5f55\u8fc7\u7a0b\uff0c\u8981\u6c42\u63d0\u4f9b\u5fc5\u8981\u7684\u622a\u56fe\u6216\u914d\u7f6e\u6587\u4ef6 \u4f7f\u7528 OpenMPI \u548c HPL \u6d4b\u8bd5\u96c6\u7fa4\u8868\u73b0\u5e76\u8bb0\u5f55\u7ed3\u679c","title":"Lab1-\u7b80\u5355\u96c6\u7fa4\u642d\u5efa"},{"location":"Lab1-MiniCluster/#_1","text":"","title":"\u5b9e\u9a8c\u4e00\uff1a\u7b80\u5355\u96c6\u7fa4\u642d\u5efa"},{"location":"Lab1-MiniCluster/#1","text":"\u672c\u6b21\u5b9e\u9a8c\u8981\u6c42\u4f7f\u7528\u56db\u53f0\u865a\u62df\u673a\u642d\u5efa\u4e00\u4e2a\u7b80\u6613\u7684\u96c6\u7fa4\uff0c\u5e76\u5bf9\u8be5\u96c6\u7fa4\u8fdb\u884c\u6027\u80fd\u6d4b\u8bd5\uff0c\u6700\u540e\u63d0\u4ea4\u6d4b\u8bd5\u7ed3\u679c\u548c\u5b9e\u9a8c\u62a5\u544a\u3002 \u96c6\u7fa4\u642d\u5efa\u7684\u4efb\u52a1\u5305\u62ec\u521b\u5efa\u865a\u62df\u673a\u3001\u5b89\u88c5 Linux \u53d1\u884c\u7248\u3001\u914d\u7f6e\u7f51\u7edc\u548c ssh \u901a\u4fe1\u3002 \u6027\u80fd\u6d4b\u8bd5\u901a\u8fc7\u4f7f\u7528 OpenMPI \u5c06 HPL \u6d4b\u8bd5\u7a0b\u5e8f\u5206\u914d\u5230\u56db\u4e2a\u865a\u62df\u673a\u8282\u70b9\u4e0a\u6267\u884c\u3002\u56e0\u6b64\uff0c\u9700\u8981\u4e0b\u8f7d\u5e76\u7f16\u8bd1 OpenMPI\u3001BLAS \u548c HPL \u7684\u6e90\u4ee3\u7801\uff0c\u5176\u4e2d OpenMPI\u3001BLAS\u662f HPL \u7684\u4f9d\u8d56\u9879\u3002","title":"1 \u5b9e\u9a8c\u7b80\u4ecb"},{"location":"Lab1-MiniCluster/#2","text":"\u4e00\u53f0\u8ba1\u7b97\u673a\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4efb\u610f Hypervisor (\u672c\u624b\u518c\u4e3a Virtual Box) \u865a\u62df\u673a * 4","title":"2 \u5b9e\u9a8c\u73af\u5883"},{"location":"Lab1-MiniCluster/#3","text":"","title":"3 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd"},{"location":"Lab1-MiniCluster/#31","text":"\u8ba1\u7b97\u673a\u96c6\u7fa4 \u662f\u8fde\u63a5\u5728\u4e00\u8d77\u3001\u534f\u540c\u5de5\u4f5c\u7684\u4e00\u7ec4\u8ba1\u7b97\u673a\uff0c\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e2a\u8ba1\u7b97\u673a\u90fd\u662f\u4e00\u4e2a\u8282\u70b9\u3002\u5728\u96c6\u7fa4\u4e2d\uff0c\u7531\u8f6f\u4ef6\u5c06\u4e0d\u540c\u7684\u8ba1\u7b97\u4efb\u52a1\uff08task\uff09\u5206\u914d\uff08schedule\uff09\u5230\u76f8\u5e94\u7684\u4e00\u4e2a\u6216\u4e00\u7fa4\u8282\u70b9\uff08node\uff09\u4e0a\u3002\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u9700\u8981\u4f7f\u7528 OpenMPI \u5c06 HPL \u7a0b\u5e8f\u4f5c\u4e3a task \u5206\u914d\u5230\u96c6\u7fa4\u4e2d\u7684\u56db\u4e2a\u8282\u70b9\u4e0a\u3002","title":"3.1 \u8ba1\u7b97\u673a\u96c6\u7fa4"},{"location":"Lab1-MiniCluster/#311","text":"\u865a\u62df\u673a\u4e3a\u8fd0\u884c\u5728\u5176\u4e2d\u7684guest\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e94\u7528\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6a21\u62df\u7684\u786c\u4ef6\u73af\u5883\uff0c\u548c\u771f\u5b9e\u7684\u786c\u4ef6\u4fdd\u6301\u4e00\u6837\u7684\u63a5\u53e3\u548c\u8868\u73b0\uff0c\u540c\u65f6\u4e5f\u5982\u771f\u5b9e\u7684\u786c\u4ef6\u4e00\u6837\u4e3a\u5176\u4e2d\u7684\u64cd\u4f5c\u7cfb\u7edf\u548c\u7a0b\u5e8f\u63d0\u4f9b\u4fdd\u62a4\u673a\u5236\u3001\u7ba1\u7406\u63a5\u53e3\u548c\u8d44\u6e90\u9650\u5236\u3002\u4e00\u4e2a\u7b80\u6613\u7684\u975e\u865a\u62df\u673a\u548c\u865a\u62df\u673a\u7ed3\u6784\u7684\u5bf9\u6bd4\u5982\u4e0b\u56fe\uff08\u6765\u6e90\uff1aAbraham Silberschatz, Peter Baer Galvin, Greg Gagn, Operating System Concepts , 10th edition, Chapter 18) \u4e00\u79cd\u5e38\u89c1\u7684\u865a\u62df\u673a\u673a\u5236\u5b9e\u73b0\u65b9\u5f0f\u4fbf\u662f\u901a\u8fc7 hypervisor\uff08\u53c8\u79f0VMM: Virtual Machnie Manager\uff09\u6765\u4e3a guest \u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u6a21\u62df\u786c\u4ef6\u73af\u5883\uff0c\u8fd9\u4e5f\u4e3a\u5728\u4e00\u53f0\u7269\u7406\u673a\u4e0a\u8fd0\u884c\u591a\u4e2a\u865a\u62df\u673a\u63d0\u4f9b\u4e86\u53ef\u80fd\u3002 \u672c\u624b\u518c\u4e2d\u4f7f\u7528 Virtural Box \u4f5c\u4e3a hypervisor \u8fdb\u884c\u793a\u8303\u548c\u8bf4\u660e\u3002","title":"3.1.1 \u865a\u62df\u673a"},{"location":"Lab1-MiniCluster/#312-linux","text":"Linux \u53d1\u884c\u7248\uff08\u4e5f\u88ab\u53eb\u505a GNU/Linux \u53d1\u884c\u7248\uff09\uff0c\u4e3a\u4e00\u822c\u7528\u6237\u9884\u5148\u96c6\u6210\u597d\u7684 Linux \u64cd\u4f5c\u7cfb\u7edf\u53ca\u5404\u79cd\u5e94\u7528 \u8f6f\u4ef6\u3002\u4e00\u822c\u7528\u6237\u4e0d\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\uff0c\u5728\u76f4\u63a5\u5b89\u88c5\u4e4b\u540e\uff0c\u53ea\u9700\u8981\u5c0f\u5e45\u5ea6\u66f4\u6539\u8bbe\u7f6e\u5c31\u53ef\u4ee5\u4f7f\u7528\uff0c\u901a\u5e38\u4ee5\u8f6f\u4ef6\u5305\u7ba1\u7406\u7cfb\u7edf\u6765\u8fdb\u884c\u5e94\u7528\u8f6f\u4ef6\u7684\u7ba1\u7406\u3002Linux \u53d1\u884c\u7248\u901a\u5e38\u5305\u542b\u4e86\u5305\u62ec\u684c\u9762\u73af\u5883\u3001\u529e\u516c\u5305\u3001\u5a92\u4f53\u64ad\u653e\u5668\u3001\u6570\u636e\u5e93\u7b49\u5e94\u7528\u8f6f\u4ef6\u3002\u8fd9\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u901a\u5e38\u7531 Linux \u5185\u6838\u3001\u4ee5\u53ca\u6765\u81ea GNU \u8ba1\u5212\u7684\u5927\u91cf\u7684\u51fd\u6570\u5e93\uff0c\u548c\u57fa\u4e8e X Window \u7684\u56fe\u5f62\u754c\u9762\u3002\u73b0\u5728\u6709\u8d85\u8fc7 300 \u4e2a Linux\u53d1\u884c\u7248\u3002\u5927\u90e8\u5206\u90fd\u6b63\u5904\u4e8e\u6d3b\u8dc3\u7684\u5f00\u53d1\u4e2d\uff0c\u4e0d\u65ad\u5730\u6539\u8fdb\u3002\u7531\u4e8e\u5927\u591a\u6570\u8f6f\u4ef6\u5305\u662f\u81ea\u7531\u8f6f\u4ef6\u548c\u5f00\u6e90\u8f6f\u4ef6\uff0c\u6240\u4ee5 Linux \u53d1\u884c\u7248\u7684\u5f62\u5f0f\u591a\u79cd\u591a\u6837\u2014\u2014\u4ece\u529f\u80fd\u9f50\u5168\u7684\u684c\u9762\u7cfb\u7edf\u4ee5\u53ca\u670d\u52a1\u5668\u7cfb\u7edf\u5230\u5c0f\u578b\u7cfb\u7edf (\u4f8b\u5982\u4e00\u4e9b\u5d4c\u5165\u5f0f\u8bbe\u5907)\u3002\u9664\u4e86\u4e00\u4e9b\u5b9a\u5236\u8f6f\u4ef6 (\u5982\u5b89\u88c5\u548c\u914d\u7f6e\u5de5\u5177)\uff0c\u53d1\u884c\u7248\u901a\u5e38\u53ea\u662f\u5c06\u7279\u5b9a\u7684\u5e94\u7528\u8f6f\u4ef6\u5b89\u88c5\u5728\u4e00\u5806\u51fd\u6570\u5e93\u548c\u5185\u6838\u4e0a\uff0c\u4ee5\u6ee1\u8db3\u7279\u5b9a\u7528\u6237\u7684\u9700\u6c42\u3002 \u8fd9\u4e9b\u53d1\u884c\u7248\u53ef\u4ee5\u5206\u4e3a\u5546\u4e1a\u53d1\u884c\u7248\uff0c\u6bd4\u5982 Ubuntu\uff08Canonical \u516c\u53f8\uff09\u3001Fedora\uff08Red Hat\uff09\u3001openSUSE \uff08Novell\uff09\u548c Mandriva Linux\uff1b\u548c\u793e\u533a\u53d1\u884c\u7248\uff0c\u5b83\u4eec\u7531\u81ea\u7531\u8f6f\u4ef6\u793e\u533a\u63d0\u4f9b\u652f\u6301\uff0c\u5982 Debian \u548c Gentoo\uff1b\u4e5f\u6709\u53d1\u884c\u7248\u65e2\u4e0d\u662f\u5546\u4e1a\u53d1\u884c\u7248\u4e5f\u4e0d\u662f\u793e\u533a\u53d1\u884c\u7248\uff0c\u5982 Slackware\u3002","title":"3.1.2 Linux\u53d1\u884c\u7248"},{"location":"Lab1-MiniCluster/#32-hpl","text":"HPL\u662f\u4e00\u4e2a\u53ef\u4ee5\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u89e3\u7a20\u5bc6\u7ebf\u6027\u7cfb\u7edf\u7684\u8f6f\u4ef6\u5305\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u88ab\u7528\u6765\u505a\u9ad8\u6027\u80fd\u8ba1\u7b97Linpack\u6d4b\u8bd5\uff08High Performance Computing Linpack Benchmark\uff09\u3002 \u5173\u4e8eHPL\u7684\u8be6\u7ec6\u4ecb\u7ecd\u53ef\u53c2\u8003 https://www.netlib.org/benchmark/hpl/ The HPL software package requires the availibility on your system of an implementation of the Message Passing Interface MPI (1.1 compliant). An implementation of either the Basic Linear Algebra Subprograms BLAS or the Vector Signal Image Processing Library VSIPL is also needed. Machine-specific as well as generic implementations of MPI , the BLAS and VSIPL are available for a large variety of systems. HPL \u9700\u8981\u7cfb\u7edf\u4e2d\u6709 MPI \u5b9e\u73b0\u548c BLAS \u5b9e\u73b0\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u5b89\u88c5 HPL \u524d\u5728\u865a\u62df\u673a\u4e2d\u5b89\u88c5 OpenMPI \u548c BLAS\u3002 OpenMPI \u662f\u4e00\u4e2a\u5f00\u6e90\u7684 Message Passing Interface \u5b9e\u73b0\uff0c\u7531\u4e00\u4e9b\u79d1\u7814\u673a\u6784\u548c\u4f01\u4e1a\u4e00\u8d77\u5f00\u53d1\u548c\u7ef4\u62a4\u3002MPI \u662f\u4e00\u5957\u6807\u51c6\u5316\u3001\u53ef\u79fb\u690d\u7684\u6d88\u606f\u4f20\u9012\u6807\u51c6\uff0c\u5b83\u88ab\u8bbe\u8ba1\u7528\u4e8e\u652f\u6301\u5e76\u884c\u8ba1\u7b97\u7cfb\u7edf\u7684\u67b6\u6784\uff0c\u4f7f\u5f97\u5f00\u53d1\u8005\u80fd\u591f\u65b9\u4fbf\u5730\u5f00\u53d1\u53ef\u79fb\u690d\u7684\u6d88\u606f\u4f20\u9012\u7a0b\u5e8f\u3002\u540c\u65f6\uff0cMPI \u7f16\u7a0b\u80fd\u529b\u5728\u9ad8\u6027\u80fd\u8ba1\u7b97\u7684\u5b9e\u8df5\u4e0e\u5b66\u4e60\u4e2d\u4e5f\u662f\u975e\u5e38\u57fa\u7840\u7684\u6280\u80fd\u3002 BLAS \u662f Basic Linear Algebra Subprograms \u7684\u7f29\u5199\uff0c\u672c\u624b\u518c\u53ea\u8981\u6c42\u5c06\u5176\u4f5c\u4e3a HPL \u7684\u4f9d\u8d56\u9879\u4e0b\u8f7d\u5b89\u88c5\u5373\u53ef\uff0c\u65e0\u9700\u8fc7\u591a\u4e86\u89e3\u3002","title":"3.2 HPL"},{"location":"Lab1-MiniCluster/#4","text":"","title":"4 \u5b9e\u9a8c\u6b65\u9aa4"},{"location":"Lab1-MiniCluster/#41-hypervisor-linux","text":"","title":"4.1 \u4e0b\u8f7d Hypervisor \u548c Linux \u5149\u76d8\u6620\u50cf\u6587\u4ef6"},{"location":"Lab1-MiniCluster/#411-hypervisor","text":"\u5728\u521b\u5efa\u865a\u62df\u673a\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u5148\u51c6\u5907\u597d Hypervisor\uff0c\u5728\u672c\u624b\u518c\u4e2d\uff0c\u6211\u4eec\u4ee5 Virtual Box \u4e3a\u4f8b\uff0c\u5176\u4ed6\u7684 Hypervisor \u8bf7\u81ea\u884c\u53c2\u9605\u76f8\u5173\u6750\u6599\uff1a Virtual Box \u5b98\u7f51\u4e0b\u8f7d \uff1a \u6ce8\u610f \u4e0d\u8981\u9009\u9519\u5bbf\u4e3b\u673a\u5e73\u53f0 \uff01 Docker \u7531\u4e8e\u672c\u6b21\u5b9e\u9a8c\u5e0c\u671b\u5927\u5bb6\u4ece\u88f8\u673a\u624b\u5de5\u5b8c\u6210\u5b8c\u6574\u7684\u96c6\u7fa4\u914d\u7f6e\uff0c\u5305\u62ec\u7f51\u7edc\u548c\u7cfb\u7edf\u8f6f\u4ef6\u73af\u5883\u7b49\uff0c\u56e0\u6b64\u672c\u6b21\u5b9e\u9a8c\u4e0d\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 Docker\uff0c\u5982\u679c\u5b66\u6709\u4f59\u529b\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528 Docker \u590d\u73b0\u672c\u6b21\u5b9e\u9a8c\uff0c\u4f5c\u4e3a\u52a0\u5206\u9879\uff08\u865a\u62df\u673a\u4e3a\u5fc5\u505a\uff09\u3002","title":"4.1.1 Hypervisor"},{"location":"Lab1-MiniCluster/#412-linux","text":"\u672c\u624b\u518c\u6240\u4f7f\u7528\u7684\u8303\u4f8b\u53d1\u884c\u7248\u662f Debian 11\uff0c\u540c\u5b66\u53ef\u6839\u636e\u81ea\u5df1\u7684\u559c\u597d\u548c\u7ecf\u9a8c\u6311\u9009\u9002\u5408\u7684\u53d1\u884c\u7248\u3002 Debian \u4e0b\u8f7d\u70b9\uff08\u5982\u679c\u7f51\u901f\u95ee\u9898\u53ef\u8bbf\u95ee\u56fd\u5185\u955c\u50cf\uff09\uff1a ZJU Mirror Tuna Mirror Official Mirror \u82b1\u82b1\u7eff\u7eff\u7684\u6620\u50cf\uff0c\u8be5\u600e\u4e48\u9009\u62e9\u597d\u5462\uff1f\u56fe\u4e2d\u5e26\u6709 mate \u5b57\u773c\u7684\u6620\u50cf\u4ee3\u8868\u9644\u6709 mate \u684c\u9762\uff0c\u4e3a\u4e86\u6700\u7cbe\u7b80\u5b89\u88c5\uff0c\u672c\u624b\u518c\u91c7 standard \u7248\u672c\uff08\u4e0d\u542b\u684c\u9762\uff09\u3002 \u4e0d\u63a8\u8350\u4f7f\u7528\u7684\u5149\u76d8\u6620\u50cf \u4ece\u4e92\u8054\u7f51\u4e0b\u8f7d (\u5173\u952e\u5b57\uff1aInstall via Internet / netinstall) \u6b64\u7c7b\u955c\u50cf\u662f\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u8bbf\u95ee\u4e92\u8054\u7f51\u4e0b\u8f7d\u9700\u8981\u7684\u5305\uff0c\u7531\u4e8e\u865a\u62df\u673a\u53ef\u80fd\u65e0\u6cd5\u8bbf\u95ee\u4e92\u8054\u7f51\uff0c\u90e8\u5206\u955c\u50cf\u867d\u7136\u4f53\u79ef\u5c0f\u4f46\u7f3a\u5c11\u5f88\u591a\u91cd\u8981\u7684\u547d\u4ee4\uff0c\u56e0\u6b64\u4e0d\u8981\u6311\u9009\u6b64\u7c7b\u955c\u50cf\u3002 \u5e26\u6709\u684c\u9762\u73af\u5883\u7684\u5149\u76d8\u6620\u50cf (\u5173\u952e\u5b57\uff1aDesktop / \u4ee5\u53ca\u540e\u9762\u5e26\u6709 gnome, kde, lxde \u7b49\u8bcd\u7684\u6620\u50cf) \u5982\u679c\u8ba1\u7b97\u673a\u4e0a\u7684\u78c1\u76d8\u7a7a\u95f4\u8f83\u4e0d\u5145\u8db3\uff0c\u5efa\u8bae\u4e0d\u8981\u4e0b\u8f7d\u5e26\u6709\u684c\u9762\u73af\u5883\u7684\u5149\u76d8\u6620\u50cf\uff0c\u5982\u679c\u4f60\u504f\u597d\u684c\u9762\u4e14\u7a7a\u95f4\u8db3\u591f\u53ef\u4ee5\u5ffd\u7565\u3002 \u4f60\u4e0d\u719f\u6089\u7684\u5149\u76d8\u6620\u50cf / \u6ca1\u6709\u56fe\u5f62\u754c\u9762(GUI)\u5b89\u88c5\u7a0b\u5e8f\u7684\u5149\u76d8\u6620\u50cf Linux \u53d1\u884c\u7248\u76f8\u5f53\u591a\uff0c\u4e0d\u719f\u6089\u6216\u6ca1\u4f7f\u7528\u8fc7 Linux \u7684\u540c\u5b66\u5efa\u8bae\u53c2\u8003\u672c\u624b\u518c\uff0c\u76f8\u4fe1\u81ea\u5df1\u5df2\u7ecf\u6709\u4e00\u5b9a\u57fa\u7840\u7684\u540c\u5b66\u53ef\u4ee5\u5ffd\u7565\u3002","title":"4.1.2 Linux \u5149\u76d8\u6620\u50cf\u6587\u4ef6"},{"location":"Lab1-MiniCluster/#42","text":"","title":"4.2 \u642d\u5efa\u96c6\u7fa4\u5e76\u5b89\u88c5\u76f8\u5173\u7a0b\u5e8f"},{"location":"Lab1-MiniCluster/#421","text":"\u51c6\u5907\u597d Hypervisor \u8ddf \u5149\u76d8\u6620\u50cf\u540e\uff0c\u5c31\u53ef\u4ee5\u7740\u624b\u5b89\u88c5\u4e00\u4e2a\u865a\u62df\u673a\u4e86\uff0c\u8bf7\u53c2\u8003 Virtual Box \u624b\u518c\u548c\u76f8\u5173\u6559\u7a0b\u3002 \u9009\u62e9\u53d1\u884c\u7248\u3001\u5185\u5b58\u3001\u78c1\u76d8\u7a7a\u95f4 \u9009\u62e9\u81ea\u5df1\u8981\u5b89\u88c5\u7684\u53d1\u884c\u7248\uff08\u5982\u679c\u6ca1\u6709\u76f4\u63a5\u9009 Linux \u5373\u53ef\uff09\uff0c\u5185\u5b58\u548c\u78c1\u76d8\u7a7a\u95f4\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5206\u914d\u3002 \u63d2\u5165\u53d1\u884c\u7248\u6620\u50cf\u6587\u4ef6\u548c\u914d\u7f6e\u7f51\u7edc \u9009\u53d6\u521a\u4e0b\u8f7d\u7684\u6620\u50cf\u6587\u4ef6\u3002 \u7f51\u7edc\u5bf9\u865a\u62df\u673a\u6765\u8bf4\u5341\u5206\u590d\u6742\uff0c\u5982\u679c\u4f60\u4e0d\u719f\u6089\u76f8\u5173\u7684\u540d\u8bcd\uff0c\u5728\u4e00\u53f0\u865a\u62df\u673a\u7684\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u9ed8\u8ba4\u7684 NAT \u5373\u53ef\u3002\u9009\u62e9 NAT \u7684\u53e6\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u56e0\u4e3a\u624b\u518c\u9700\u8981\u8282\u70b9\u95f4\u5f7c\u6b64\u4e92\u8fde\uff0c\u56e0\u6b64\u4f7f\u7528 NAT Network \u7684\u540c\u65f6\uff0c\u6240\u6709\u8282\u70b9\u4e5f\u53ef\u8bbf\u95ee\u4e92\u8054\u7f51\u3002 \u4e0d\u9700\u8981\u4e92\u8054\u7f51\u6216\u8005\u4f7f\u7528\u6709\u7ebf\u7f51\u7684\u540c\u5b66\u4e5f\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 Bridged \u6216 Internal Network\uff0c\u5177\u4f53\u8bf7\u53c2\u8003\u624b\u518c\u4e0a\u7684\u8bf4\u660e\uff1a Virtual Networking \u3002 \u5c0f\u8d34\u58eb - \u5982\u679c\u4f60\u7684\u865a\u62df\u673a\u65e0\u6cd5\u8fde\u4e0a\u7f51\uff0c\u53ef\u80fd\u662f\u5bbf\u4e3b\u673a\u7684\u95ee\u9898\uff0c\u8bf7 \u6392\u67e5\u5bbf\u4e3b\u673a\u7684\u7f51\u7edc\u72b6\u51b5 \u3002 - \u7531\u4e8e\u5b66\u6821\u7684\u7f51\u7edc\u60c5\u51b5\uff0c\u5728\u5b66\u6821\u4e2d\u4f7f\u7528\u865a\u62df\u673a\u7684\u540c\u5b66\u8fd8\u662f \u4ee5 NAT Network \u4e3a\u4e3b \u8f83\u65b9\u4fbf\u3002 \u8fdb\u5165\u56fe\u5f62\u5b89\u88c5\u7a0b\u5e8f \u5728\u542f\u52a8\u865a\u62df\u673a\u540e\uff0c\u4e0d\u8981\u76f4\u63a5\u8fdb\u5165 Live CD\uff0c\u76f4\u63a5\u8fdb\u5165\u5b89\u88c5\u7a0b\u5e8f\uff0c\u7167\u7740\u5f15\u5bfc\u8d70\u5373\u53ef\u3002 \u5b89\u88c5\u5b8c\u6210\u5e76\u91cd\u542f \u5728\u521a\u521a\u63d2\u5165\u6620\u50cf\u6587\u4ef6\u7684\u5730\u65b9\u53d6\u6d88\u9009\u53d6\u6620\u50cf\u6587\u4ef6\uff0c\u5426\u5219\u4e0b\u6b21\u91cd\u542f\u65f6\u8fd8\u4f1a\u8fdb\u5165 Live CD\u3002","title":"4.2.1 \u521b\u5efa\u865a\u62df\u673a"},{"location":"Lab1-MiniCluster/#422-openmpi","text":"\u7531\u4e8e\u7cfb\u7edf\u4e2d\u7684\u5305\u901a\u5e38\u6bd4\u8f83\u65e7\uff0c\u56e0\u6b64\u6211\u4eec\u4ece OpenMPI \u7684\u5b98\u7f51\u4e2d\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u6e90\u7801\u81ea\u884c\u7f16\u8bd1\u5b89\u88c5\uff1a OpenMPI \u4e0b\u8f7d \u3002 \u5c0f\u8d34\u58eb - \u5728\u865a\u62df\u673a \u53ef\u8054\u7f51 \u7684\u73af\u5883\u4e0b\uff0c\u53ef\u76f4\u63a5\u4f7f\u7528 wget \u6216 curl \u6765\u4e0b\u8f7d\uff0c\u4f1a\u65b9\u4fbf\u8bb8\u591a\u3002 - \u5728\u7f16\u8bd1\u524d\uff0c\u5148\u4e86\u89e3 make \u548c autoconf \uff0c\u53ef\u4ee5\u51cf\u5c11\u4e0d\u5c11\u9664\u9519\u65f6\u95f4\u3002 \u4fee\u6539 PATH \u548c LD_LIBRARY_PATH \u8bf7\u5c06\u627e\u5230 OpenMPI \u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u76ee\u5f55\u52a0\u5165 PATH \u73af\u5883\u53d8\u91cf\uff0cOpenMPI \u5e93\u7684\u76ee\u5f55\u52a0\u5165 LD_LIBRARY_PATH \u73af\u5883\u53d8\u91cf\u3002","title":"4.2.2 \u4e0b\u8f7d\u5e76\u5b89\u88c5 OpenMPI"},{"location":"Lab1-MiniCluster/#423-hpl","text":"\u4e0b\u8f7d\u5730\u5740\uff1a https://netlib.org/benchmark/hpl/software.html BLAS HPL \u7684\u4f9d\u8d56\u9664\u4e86\u4e00\u4e2a MPI \u5b9e\u73b0\uff08\u5728\u624b\u518c\u4e2d\u662f OpenMPI\uff09\u5916\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a BLAS \u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece netlib \u4e0b\u8f7d \u5176\u4e2d\u4e00\u4e2a\u5b9e\u73b0 \uff0c\u867d\u7136\u6ca1\u6709\u4f18\u5316\u8fc7\uff0c\u4f46\u62ff\u6765\u6d4b\u8bd5\u5df2\u7ecf\u8db3\u591f\u4e86\u3002 \u68c0\u67e5 gcc / gfortran \u73af\u5883 BLAS \u9700\u8981 gcc / gfortran \u6765\u7f16\u8bd1\uff0c\u8bf7\u52a1\u5fc5\u68c0\u67e5\u81ea\u5df1\u865a\u62df\u673a\u4e2d\u7f16\u8bd1\u5668\u662f\u5426\u5b58\u5728\u53ca\u5176\u7248\u672c\u3002 \u7f16\u8bd1 BLAS/CBLAS \u5148\u7f16\u8bd1 BLAS\uff0c\u518d\u53c2\u8003 README \u548c INSTALL \u4fee\u6539 CBLAS \u7684 Makefile \u5e76\u7f16\u8bd1 \uff08\u9700\u8981 BLAS \u7684\u94fe\u63a5\u6587\u4ef6\uff09\u3002 \u4fee\u6539 HPL Makefile \u89e3\u538b HPL \u538b\u7f29\u5305\u540e\uff0c\u5728\u6839\u76ee\u5f55\u7684 setup/ \u6587\u4ef6\u5939\u4e0b\u6709 Makefile \u76f8\u5173\u6587\u4ef6\u7684\u6a21\u677f(Make.xxx\uff0c\u540e\u7f00\u4ee3\u8868\u67b6\u6784)\uff0c\u590d\u5236\u5230\u6839\u76ee\u5f55\u5e76\u4fdd\u5b58\u3002 \u53c2\u8003 README \uff0c\u6839\u636e\u81ea\u5df1\u60c5\u51b5\u4fee\u6539\u4ee5\u4e0b\u53c2\u6570\uff1a # Make.test # arch ARCH = test ... # MPI MPdir = /path/to/your/mpi/ MPinc = -I $( MPdir ) /include64 MPlib = $( MPdir ) /libmpi.so # BLAS LAdir = /path/to/your/blas LAinc = LAlib = $( LAdir ) /lib ... # compiler CC = /path/to/your/mpicc LINKER = $( CC ) \u2003\u2003\u4fee\u6539\u5f53\u524d\u76ee\u5f55\u4e0b Make.top \u4e2d\u7684 arch \u53c2\u6570\uff0c\u9700\u4e0e Make.test \u4e2d\u7684\u4e00\u81f4\u3002 \u7f16\u8bd1 # \u66ff\u6362\u6210\u4f60\u81ea\u5df1\u7684\u540e\u7f00 make arch = test","title":"4.2.3 \u4e0b\u8f7d\u5e76\u5b89\u88c5 HPL"},{"location":"Lab1-MiniCluster/#424","text":"\u5728 Virtual Box \u4e2d\uff0c\u514b\u9686\u5df2\u7ecf\u914d\u7f6e\u5b8c\u6210\u7684\u8282\u70b9\u6210\u4e3a\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u8282\u70b9\uff0c\u672c\u624b\u518c\u8303\u4f8b\u4e2d\u4ec5\u514b\u9686\u4e00\u4e2a\uff08\u96c6\u7fa4\u4e2d\u4e24\u4e2a\u8282\u70b9\uff09\uff0c\u53ef\u514b\u9686\u66f4\u591a\u3002","title":"4.2.4 \u514b\u9686\u8282\u70b9"},{"location":"Lab1-MiniCluster/#43","text":"","title":"4.3 \u6d4b\u8bd5\u96c6\u7fa4"},{"location":"Lab1-MiniCluster/#431-ping","text":"ping \u662f\u6d4b\u8bd5\u8282\u70b9\u7f51\u7edc\u8fde\u901a\u6027\u6700\u4e3a\u7b80\u5355\u7684\u65b9\u5f0f\uff0c\u5728\u8fdb\u884c\u5176\u4ed6\u6d4b\u8bd5\u524d\uff0c\u8bf7\u5148\u786e\u8ba4\u80fd ping \u901a\u6240\u6709\u8282\u70b9\u3002","title":"4.3.1 ping"},{"location":"Lab1-MiniCluster/#432-ssh","text":"ssh \u662f\u76f8\u5f53\u5e38\u7528\u7684\uff0c\u5b9e\u73b0\u5b89\u5168\u8fdc\u7a0b\u8fde\u63a5\u7684\u65b9\u5f0f\uff0c\u5176\u539f\u7406\u548c\u4f7f\u7528\u3001\u914d\u7f6e\u65b9\u6cd5\u8bf7\u67e5\u9605\u76f8\u5173\u53c2\u8003\u8d44\u6599\uff1a Open SSH \u7f51\u7ad9 \u5982\u679c\u4f60\u6ca1\u6709 ssh \u5bc6\u94a5\uff0c\u53ef\u4ee5\u5728\u5176\u4e2d\u4e00\u4e2a\u8282\u70b9\u521b\u5efa\u4e00\u4e2a\uff1a ssh-keygen \u6211\u4eec\u9700\u8981\u5c06\u81ea\u5df1\u7684 ssh \u516c\u94a5\u590d\u5236\u4e00\u4efd\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\u4e0a\u7684 .ssh/authorized_keys \u4e2d\uff08\u53ef\u4ee5\u5229\u7528 ssh-copy-id \u547d\u4ee4\u6765\u62f7\u8d1d\u516c\u94a5\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 nc \u5c06\u516c\u94a5\u4f5c\u4e3a\u6587\u4ef6\u4f20\u8f93\uff09\u3002\u590d\u5236\u5b8c\u6210\u540e\uff0c\u6ce8\u610f\u68c0\u67e5 authorized_keys (600) \u548c .ssh/ (700) \u76ee\u5f55\u7684\u6743\u9650\uff0c\u5426\u5219\u65e0\u6cd5\u987a\u5229 ssh \u3002 ssh passphrase \u5982\u679c\u81ea\u5df1\u7684\u5bc6\u94a5\u6709 passphrase\uff0c\u90a3\u4e48\u8bf7\u4f7f\u7528 ssh-agent \u786e\u4fdd\u80fd\u6682\u65f6\u4e0d\u7528\u8f93\u5165 passphrase\uff0c\u4ee5\u514d\u4e4b\u540e\u5f71\u54cd mpirun \u6b63\u786e\u8fd0\u884c\u3002","title":"4.3.2 \u914d\u7f6e ssh"},{"location":"Lab1-MiniCluster/#433-mpirun","text":"\u5c3d\u7ba1\u5bf9 OpenMPI \u5341\u5206\u964c\u751f\uff0c\u6211\u4eec\u8fd8\u662f\u80fd\u5229\u7528\u5b83\u6765\u8dd1\u975e MPI \u7684\u7a0b\u5e8f\uff0c\u540c\u5b66\u53ef\u4ee5\u7f16\u5199\u7b80\u5355\u7684 Helloworld \u7a0b\u5e8f\u6765\u6d4b\u8bd5 OpenMPI\uff0c\u6216\u8005\u76f4\u63a5\u4f7f\u7528 Unix \u547d\u4ee4\u3002 OpenMPI hostfile \u4e24\u4e2a\u8282\u70b9\u90fd\u51c6\u5907\u597d\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8bd5\u8bd5 mpirun \u4e86\uff01\u6309\u7167\u5982\u4e0b\u683c\u5f0f\uff0c\u7f16\u5199 MPI \u7684 hostfile \u5e76\u4fdd\u5b58\uff1a localhost slots=1 10.0.2.5 slots=1 \u5176\u4e2d slots \u4ee3\u8868\u7684\u610f\u601d\u662f\u4e00\u4e2a\u8282\u70b9\u7684 CPU \u6709\u591a\u5c11\u6838\uff0c\u7531\u4e8e\u6211\u4eec\u521b\u5efa\u865a\u62df\u673a\u65f6\u4ec5\u5206\u914d\u4e00\u4e2a\u6838\uff0c\u56e0\u6b64\u8fd9\u91cc\u7684 slots \u4e0a\u9650\u4e3a 1 \uff0c\u540c\u5b66\u6839\u636e\u81ea\u5df1\u865a\u62df\u673a\u7684\u60c5\u51b5\uff0c\u4fee\u6539 slots \u7684\u503c\u3002 \u6d4b\u8bd5\u7a0b\u5e8f OpenMPI \u9700\u8981\u6d4b\u8bd5\u7a0b\u5e8f\u4e3a\u8282\u70b9\u6240\u5171\u6709\u6216\u5728\u8282\u70b9\u4e0a\u6709\u76f8\u540c\u8def\u5f84\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u7b2c\u4e8c\u4e2a\u8282\u70b9\u662f\u514b\u9686\u51fa\u6765\u7684\uff0c\u56e0\u6b64\u4e24\u4e2a\u8282\u70b9\u4e0a\u7684\u547d\u4ee4\u548c HPL \u7a0b\u5e8f\u90fd\u4f1a\u662f\u76f8\u540c\u8def\u5f84\uff0c \u6b64\u65f6\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5c31\u80fd\u770b\u5230\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7ebf\u4e86\u591a\u4e45\uff1a mpirun --hostfile myhostfile uptime \u8fd0\u884c HPL\uff1a mpirun --hostfile myhostfile ./xhpl","title":"4.3.3 mpirun"},{"location":"Lab1-MiniCluster/#5","text":"\u642d\u5efa\u56db\u4e2a\u8282\u70b9\u7684\u865a\u62df\u673a\u5e76\u8bb0\u5f55\u8fc7\u7a0b\uff0c\u8981\u6c42\u63d0\u4f9b\u5fc5\u8981\u7684\u622a\u56fe\u6216\u914d\u7f6e\u6587\u4ef6 \u4f7f\u7528 OpenMPI \u548c HPL \u6d4b\u8bd5\u96c6\u7fa4\u8868\u73b0\u5e76\u8bb0\u5f55\u7ed3\u679c","title":"5 \u5b9e\u9a8c\u4efb\u52a1\u4e0e\u8981\u6c42"},{"location":"Lab2-Vectors/","text":"\u5b9e\u9a8c\u4e8c\uff1a\u5411\u91cf\u5316\u8ba1\u7b97 1 \u5b9e\u9a8c\u7b80\u4ecb NumPy \u662f Python \u4e2d\u79d1\u5b66\u8ba1\u7b97\u7684\u57fa\u7840\u5305\u3002\u5b83\u662f\u4e00\u4e2a Python \u5e93\uff0c\u63d0\u4f9b\u591a\u7ef4\u6570\u7ec4\u5bf9\u8c61\uff0c\u5404\u79cd\u6d3e\u751f\u5bf9\u8c61\uff08\u5982\u63a9\u7801\u6570\u7ec4\u548c\u77e9\u9635\uff09\uff0c\u4ee5\u53ca\u7528\u4e8e\u6570\u7ec4\u5feb\u901f\u64cd\u4f5c\u7684\u5404\u79cd API\uff0c\u6709\u5305\u62ec\u6570\u5b66\u3001\u903b\u8f91\u3001\u5f62\u72b6\u64cd\u4f5c\u3001\u6392\u5e8f\u3001\u9009\u62e9\u3001\u8f93\u5165\u8f93\u51fa\u3001\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362\u3001\u57fa\u672c\u7ebf\u6027\u4ee3\u6570\uff0c\u57fa\u672c\u7edf\u8ba1\u8fd0\u7b97\u548c\u968f\u673a\u6a21\u62df\u7b49\u7b49\u3002 Numpy \u4ee3\u7801\u4e00\u822c\u91c7\u7528\u5411\u91cf\u5316\uff08\u77e2\u91cf\u5316\uff09\u63cf\u8ff0\uff0c\u8fd9\u4f7f\u5f97\u4ee3\u7801\u4e2d\u6ca1\u6709\u4efb\u4f55\u663e\u5f0f\u7684\u5faa\u73af\uff0c\u7d22\u5f15\u7b49\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u6709\u4ee5\u4e0b\u597d\u5904\uff1a \u5411\u91cf\u5316\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u66f4\u6613\u4e8e\u9605\u8bfb \u66f4\u5c11\u7684\u4ee3\u7801\u884c\u901a\u5e38\u610f\u5473\u7740\u66f4\u5c11\u7684\u9519\u8bef \u4ee3\u7801\u66f4\u63a5\u8fd1\u4e8e\u6807\u51c6\u7684\u6570\u5b66\u7b26\u53f7 \u53e6\u5916\uff0c\u5411\u91cf\u5316\u7684\u4ee3\u7801\u80fd\u591f\u89c4\u907f\u6389 Python \u4e2d\u7f13\u6162\u7684\u8fed\u4ee3\u5faa\u73af\uff0c\u88ab\u5e95\u5c42\u7684\u5b9e\u73b0\u66f4\u597d\u7684\u8c03\u5ea6\uff0c\u5982\u63a5\u5165 BLAS \u77e9\u9635\u8fd0\u7b97\u5e93\uff0c\u4ece\u800c\u5b9e\u73b0\u66f4\u9ad8\u7684\u6027\u80fd\u3002 \u53cc\u7ebf\u6027\u63d2\u503c\u662f\u8ba1\u7b97\u673a\u89c6\u89c9\u56fe\u50cf\u5904\u7406\u4e2d\u7684\u5e38\u7528\u7b97\u6cd5\uff0c\u5b83\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u4e5f\u53ef\u4ee5\u7528\u4e8e\u6750\u8d28\u8d34\u56fe\u7684\u91cd\u91c7\u6837\u3002 \u672c\u6b21\u5b9e\u9a8c\u6211\u4eec\u5c06\u501f\u52a9 NumPy \u5b9e\u73b0\u4e00\u4e2a\u652f\u6301\u6279\u91cf\u5904\u7406\u7684\u5411\u91cf\u5316\u7684\u53cc\u7ebf\u6027\u63d2\u503c\uff0c\u6765\u8ba9\u5927\u5bb6\u719f\u6089 NumPy \u7684\u5411\u91cf\u5316\u7f16\u7a0b\u6a21\u5f0f\u3002 2 \u5b9e\u9a8c\u73af\u5883 \u4efb\u4f55\u542b\u6709 Python3 \u548c NumPy \u7684\u73af\u5883 3 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd 3.1 NumPy API \u7531\u4e8e\u8bfe\u4e0a\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u8fd9\u90e8\u5206\u5185\u5bb9\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u5b9e\u9a8c\u624b\u518c\u4e2d\u7565\u53bb\u3002\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 NumPy \u7684 \u6587\u6863 \u3002 3.2 \u53cc\u7ebf\u6027\u63d2\u503c\u7b97\u6cd5 \u53cc\u7ebf\u6027\u63d2\u503c\u7684\u7b97\u6cd5\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff0c\u6982\u62ec\u6765\u8bf4\u5c31\u662f\u5148\u5728 \\(x\\) \u8f74\u4e0a\u8fdb\u884c\u4e00\u6b21\u63d2\u503c\uff0c\u518d\u5728 \\(y\\) \u8f74\u4e0a\u8fdb\u884c\u4e00\u6b21\u63d2\u503c\u3002 \u4ee5\u5728\u7070\u5ea6\u56fe\u4e0a\u8fdb\u884c\u63d2\u503c\u4e3a\u4f8b\uff0c\u6211\u4eec\u5df2\u77e5\u5916\u56f4\u7684\u56db\u4e2a\u70b9 \\((14, 20), (15, 20), (14, 21), (15, 21)\\) \u7070\u5ea6\u503c\u5206\u522b\u4e3a 91, 210, 162 \u548c 95\uff0c\u7136\u540e\u5e0c\u671b\u901a\u8fc7\u63d2\u503c\u5f97\u5230 \\((14.5, 20.2)\\) \u5904\u7684\u7070\u5ea6\u503c\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5148\u5728 \\(x\\) \u65b9\u5411\u4e0a\u901a\u8fc7\u7ebf\u6027\u63d2\u503c\u8ba1\u7b97\u51fa \\((14.5, 20), (14.5, 21)\\) \u4e24\u4e2a\u70b9\u7684\u7070\u5ea6\u503c 150.5, 128.5\uff0c\u7136\u540e\u518d\u4f7f\u7528\u8fd9\u4e24\u4e2a\u503c\u5728 \\(y\\) \u65b9\u5411\u4e0a\u518d\u6b21\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff0c\u5f97\u5230 \\((14.5, 20.2)\\) \u5750\u6807\u5904\u7684\u7070\u5ea6\u503c 146.1\u3002 \u6ce8\u610f\u8fd9\u91cc\u662f\u4e00\u4e2a\u5355\u901a\u9053\u7684\u4f8b\u5b50\uff0c\u5bf9\u4e8e\u5b9e\u9645\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5f80\u5f80\u6709\u5f88\u591a\u4e2a\u901a\u9053\uff0c\u5982\u5f69\u8272\u56fe\u7247\u62e5\u6709 RGB \u4e09\u4e2a\u901a\u9053\uff0c\u4e00\u4e9b\u56fe\u7247\u53ef\u80fd\u8fd8\u6709 \\(\\alpha\\) \u900f\u660e\u5ea6\u901a\u9053\uff0c\u6216\u662f\u6df1\u5ea6\u901a\u9053\u3002 \u5bf9\u4e8e\u591a\u901a\u9053\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a\u901a\u9053\u8fdb\u884c\u5206\u522b\u63d2\u503c\u3002 3.2.1 \u5f62\u5f0f\u5316\u5b9a\u4e49 \u5f62\u5f0f\u5316\u5b9a\u4e49\u6458\u81ea \u7ef4\u57fa\u767e\u79d1 \u5047\u5982\u6211\u4eec\u60f3\u5f97\u5230\u672a\u77e5\u51fd\u6570 \\(f\\) \u5728\u70b9 \\({\\displaystyle P=\\left(x,y\\right)}\\) \u7684\u503c\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u77e5\u51fd\u6570 \\(f\\) \u5728 \\({\\displaystyle Q_{11}=\\left(x_{1},y_{1}\\right)}\\) , \\({\\displaystyle Q_{12}=\\left(x_{1},y_{2}\\right)}\\) , \\({\\displaystyle Q_{21}=\\left(x_{2},y_{1}\\right)}\\) \u53ca \\({Q_{22}=\\left(x_{2},y_{2}\\right)}\\) \u56db\u4e2a\u70b9\u7684\u503c\u3002 \u9996\u5148\u5728 \\(x\\) \u65b9\u5411\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff0c\u5f97\u5230 $$ {\\displaystyle {\\begin{aligned}f(x,y_{1})&\\approx {\\frac {x_{2}-x}{x_{2}-x_{1}}}f(Q_{11})+{\\frac {x-x_{1}}{x_{2}-x_{1}}}f(Q_{21}),\\\\ f(x,y_{2})&\\approx {\\frac {x_{2}-x}{x_{2}-x_{1}}}f(Q_{12})+{\\frac {x-x_{1}}{x_{2}-x_{1}}}f(Q_{22}).\\end{aligned}}} $$ \u7136\u540e\u5728 \\(y\\) \u65b9\u5411\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff0c\u5f97\u5230 $$ {\\displaystyle {\\begin{aligned}f(x,y)&\\approx &&{\\frac {y_{2}-y}{y_{2}-y_{1}}}f(x,y_{1})+{\\frac {y-y_{1}}{y_{2}-y_{1}}}f(x,y_{2})\\\\ &=&&{\\frac {y_{2}-y}{y_{2}-y_{1}}}\\left({\\frac {x_{2}-x}{x_{2}-x_{1}}}f(Q_{11})+{\\frac {x-x_{1}}{x_{2}-x_{1}}}f(Q_{21})\\right)\\\\ &&&+{\\frac {y-y_{1}}{y_{2}-y_{1}}}\\left({\\frac {x_{2}-x}{x_{2}-x_{1}}}f(Q_{12})+{\\frac {x-x_{1}}{x_{2}-x_{1}}}f(Q_{22})\\right)\\\\ &=&&{\\frac {1}{(x_{2}-x_{1})(y_{2}-y_{1})}}{\\big (}f(Q_{11})(x_{2}-x)(y_{2}-y)+f(Q_{21})(x-x_{1})(y_{2}-y)\\\\ &&&+f(Q_{12})(x_{2}-x)(y-y_{1})+f(Q_{22})(x-x_{1})(y-y_{1}){\\big )}\\\\ &=&&{\\frac {1}{(x_{2}-x_{1})(y_{2}-y_{1})}}{\\begin{bmatrix}x_{2}-x&x-x_{1}\\end{bmatrix}}{\\begin{bmatrix}f(Q_{11})&f(Q_{12})\\\\ f(Q_{21})&f(Q_{22})\\end{bmatrix}}{\\begin{bmatrix}y_{2}-y\\\\ y-y_{1}\\end{bmatrix}}.\\end{aligned}}} $$ \u6ce8\u610f\u6b64\u5904\u5982\u679c\u5148\u5728 \\(y\\) \u65b9\u5411\u63d2\u503c\u3001\u518d\u5728 \\(x\\) \u65b9\u5411\u63d2\u503c\uff0c\u5176\u7ed3\u679c\u4e0e\u6309\u7167\u4e0a\u8ff0\u987a\u5e8f\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684\u3002 3.3 NHWC \u6570\u636e\u683c\u5f0f \u771f\u5b9e\u60c5\u51b5\u4e0b\u6211\u4eec\u5904\u7406\u7684\u6570\u636e\u90fd\u662f\u4ee5 batch \u4e3a\u5355\u4f4d\u7684\uff0c\u6309\u6279\u8fdb\u884c\u5904\u7406\u7684\u3002\u4ee5\u53cc\u7ebf\u6027\u63d2\u503c\u4e3a\u4f8b\uff0c\u6211\u4eec\u5f80\u5f80\u4f1a\u4e00\u6b21\u6027\u9001\u5165 \\(N\\) \u5f20\u5927\u5c0f\u4e3a \\(H \\times W\\) \u7684\u56fe\u7247\uff0c\u6bcf\u4e2a\u50cf\u7d20\u4e0a\u6709 \\(C\\) \u4e2a\u901a\u9053\uff0c\u7136\u540e\u4e00\u6b21\u6027\u8fd4\u56de\u8fd9 \\(N\\) \u5f20\u56fe\u7247\u5904\u7406\u597d\u7684\u7ed3\u679c\u3002\u6b64\u65f6\u6211\u4eec\u4e00\u6b21\u6027\u4f20\u5165\u7684\u6570\u636e\uff0c\u5c31\u662f\u76f4\u63a5\u6309\u987a\u5e8f\u5806\u53e0\u5728\u4e00\u8d77\u7684 NHWC \u683c\u5f0f\u7684\u6570\u7ec4\uff0c\u5b83\u5c06 batch \u4f5c\u4e3a\u4e86\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u800c\u540e\u4e09\u4e2a\u7ef4\u5ea6\u5206\u522b\u662f\u5355\u5f20\u56fe\u7247\u7684\u9ad8\u5ea6\u3001\u5bbd\u5ea6\u3001\u901a\u9053\u6570\u3002\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e00\u6570\u636e\u683c\u5f0f\u7406\u89e3\u4e3a c \u8bed\u8a00\u4e2d\u7684\u9ad8\u7ef4\u6570\u7ec4 image[N][H][W][C] \uff0c\u800c\u56e0\u4e3a c \u7684\u6570\u7ec4\u548c NumPy \u7684 ndarray \u4e00\u6837\u90fd\u662f\u5728\u5185\u5b58\u91cc\u8fde\u7eed\u6392\u653e\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e image[x1][x2][x3][x4] \uff0c\u5176\u5b9e\u5c31\u662f image[x1 * H * W * C + x2 * W * C + x3 * C + x4] \u5904\u7684\u5185\u5b58\u3002 \u53e6\u4e00\u4e2a\u5e38\u89c1\u7684\u6570\u636e\u683c\u5f0f\u662f NCHW\uff0c\u4e5f\u5c31\u662f\u5355\u5f20\u56fe\u7247\u5185\u901a\u9053\u5728\u524d\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u6211\u4eec\u6ca1\u6709\u9009\u7528\u3002 \u6570\u636e\u683c\u5f0f\u66f4\u591a\u662f\u5bf9\u6570\u636e\u7684\u5b58\u653e\u987a\u5e8f\u8fdb\u884c\u7ea6\u5b9a\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 np.transpose \u5c06\u4e0d\u540c\u7ef4\u5ea6\u8fdb\u884c\u8c03\u6362\u3002 4 \u5b9e\u9a8c\u6b65\u9aa4 4.1 \u63a5\u53e3\u5b9a\u4e49 1 2 3 4 5 6 def bilinear_interp ( a : np . ndarray , b : np . ndarray ) -> np . ndarray : \"\"\" - a is a ND array with shape [N, H1, W1, C] - b is a ND array with shape [N, H2, W2, 2] - return a ND array with shape [N, H2, W2, C] \"\"\" \u5176\u542b\u4e49\u662f\uff0c\u5bf9\u4e8e batch \u5185\u7684\u6bcf\u4e00\u5f20 \\(H1\\times W1\\) \u7684\u56fe a'\uff0cb' \u4e2d\u7ed9\u51fa\u4e86\u65b0\u7684 \\(H2\\times W2\\) \u7684\u56fe\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u6240\u60f3\u8981\u91c7\u6837\u7684 a' \u56fe\u4e2d\u5bf9\u5e94\u70b9\u7684\u5750\u6807\uff0c\u5e76\u5c06\u91c7\u6837\u7ed3\u679c\u8fd4\u56de\u3002 \u4e3a\u4e86\u7b80\u5316\u4efb\u52a1\uff0c\u6211\u4eec\u5047\u5b9a\u4f20\u5165\u7684\u91c7\u6837\u70b9\u4e0d\u4f1a\u51fa\u73b0\u5728 \\((H1 - 1, W1 - 1)\\) \uff0c\u5373\u56fe\u50cf\u7684\u53f3\u4e0b\u89d2\u3002 4.2 \u57fa\u51c6\u4ee3\u7801 \u4e0b\u9762\u7ed9\u51fa\u76f4\u63a5\u4f7f\u7528 for \u5faa\u73af\u8fed\u4ee3\u8ba1\u7b97\u7684\u53cc\u7ebf\u6027\u63d2\u503c\u7248\u672c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 def bilinear_interp_baseline ( a : np . ndarray , b : np . ndarray ) -> np . ndarray : \"\"\" This is the baseline implementation of bilinear interpolation without vectorization. - a is a ND array with shape [N, H1, W1, C], dtype = int64 - b is a ND array with shape [N, H2, W2, 2], dtype = float64 - return a ND array with shape [N, H2, W2, C], dtype = int64 \"\"\" # Get axis size from ndarray shape N , H1 , W1 , C = a . shape N1 , H2 , W2 , _ = b . shape assert N == N1 # Do iteration res = np . empty (( N , H2 , W2 , C ), dtype = int64 ) for n in range ( N ): for i in range ( H2 ): for j in range ( W2 ): x , y = b [ n , i , j ] x_idx , y_idx = int ( np . floor ( x )), int ( np . floor ( y )) _x , _y = x - x_idx , y - y_idx # For simplicity, we assume: # - all x are in [0, H1 - 1) # - all y are in [0, W1 - 1) res [ n , i , j ] = a [ n , x_idx , y_idx ] * ( 1 - _x ) * ( 1 - _y ) + \\ a [ n , x_idx + 1 , y_idx ] * _x * ( 1 - _y ) + \\ a [ n , x_idx , y_idx + 1 ] * ( 1 - _x ) * _y + \\ a [ n , x_idx + 1 , y_idx + 1 ] * _x * _y return res 4.3 \u5b8c\u6210\u5411\u91cf\u5316\u5b9e\u73b0 \u5728\u6211\u4eec\u7ed9\u51fa\u7684\u4ee3\u7801\u7684 bilinear_interp/vectorized.py \u4e2d\uff0c\u5b8c\u6210 bilinear_interp_vectorized \u51fd\u6570\u3002 4.4 \u68c0\u6d4b\u5b9e\u73b0\u6b63\u786e\u4e0e\u52a0\u901f\u6548\u679c \u8fd0\u884c main.py \uff0c\u67e5\u770b\u8f93\u51fa\uff0c\u4e00\u5207\u987a\u5229\u5c06\u770b\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a Generating Data... Executing Baseline Implementation... Finished in 139.50709176063538s Executing Vectorized Implementation... Finished in 4.717759132385254s [PASSED] Results are identical. Speed Up 29.570626190511327x \u5426\u5219\u5c06\u4f1a\u89e6\u53d1\u5f02\u5e38\uff1a Traceback (most recent call last): File \"Introduction-Labs-2021/lab2_vectors/main.py\", line 28, in <module> raise Exception('Results are different!') Exception: Results are different! \u5176\u4e2d\uff0c\u8017\u65f6\u4e0e\u52a0\u901f\u6bd4\u4e0e\u4f60\u7684\u5b9e\u73b0\u548c\u8bbe\u5907\u6709\u5173\uff08\u4e3b\u8981\u662f\u5b9e\u73b0\uff09\u3002\u8bf7\u5728\u62a5\u544a\u4e2d\u5c06\u4f60\u7684\u8fd0\u884c\u7ed3\u679c\u8d34\u51fa\u3002 5 \u5b9e\u9a8c\u521d\u59cb\u4ee3\u7801 \u8be6\u89c1 starter_code 6 \u5b9e\u9a8c\u4efb\u52a1\u4e0e\u8981\u6c42 \u5b8c\u6210\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u5411\u91cf\u5316\u7248\u672c \u6d4b\u8bd5\u5411\u91cf\u5316\u5b9e\u73b0\u7684\u6b63\u786e\u6027\u548c\u52a0\u901f\u6bd4 \u63d0\u4ea4\u4ee5\u4e0b\u5185\u5bb9\uff1a \u4ee3\u7801 \u7b80\u5355\u5b9e\u9a8c\u62a5\u544a\uff0c\u5305\u542b \u601d\u8def \u6b63\u786e\u6027\u4e0e\u52a0\u901f\u6bd4 \u53c2\u8003\u8d44\u6599 \u5173\u4e8e\u53cc\u7ebf\u6027\u63d2\u503c\uff1a https://en.wikipedia.org/wiki/Bilinear_interpolation NumPy \u6587\u6863\uff1a https://numpy.org/doc/stable/ \u4e00\u7bc7\u4e0d\u9519\u7684\u5165\u95e8\u6559\u7a0b\uff1a https://medium.com/better-programming/numpy-illustrated-the-visual-guide-to-numpy-3b1d4976de1d \u4e00\u7bc7\u7a0d\u5fae\u786c\u6838\u4e00\u70b9\u7684\u6559\u7a0b\uff1a https://www.labri.fr/perso/nrougier/from-python-to-numpy/ \u66f4\u591a\u7ec3\u4e60\uff1a https://github.com/rougier/numpy-100","title":"Lab2-\u5411\u91cf\u5316\u8ba1\u7b97"},{"location":"Lab2-Vectors/#_1","text":"","title":"\u5b9e\u9a8c\u4e8c\uff1a\u5411\u91cf\u5316\u8ba1\u7b97"},{"location":"Lab2-Vectors/#1","text":"NumPy \u662f Python \u4e2d\u79d1\u5b66\u8ba1\u7b97\u7684\u57fa\u7840\u5305\u3002\u5b83\u662f\u4e00\u4e2a Python \u5e93\uff0c\u63d0\u4f9b\u591a\u7ef4\u6570\u7ec4\u5bf9\u8c61\uff0c\u5404\u79cd\u6d3e\u751f\u5bf9\u8c61\uff08\u5982\u63a9\u7801\u6570\u7ec4\u548c\u77e9\u9635\uff09\uff0c\u4ee5\u53ca\u7528\u4e8e\u6570\u7ec4\u5feb\u901f\u64cd\u4f5c\u7684\u5404\u79cd API\uff0c\u6709\u5305\u62ec\u6570\u5b66\u3001\u903b\u8f91\u3001\u5f62\u72b6\u64cd\u4f5c\u3001\u6392\u5e8f\u3001\u9009\u62e9\u3001\u8f93\u5165\u8f93\u51fa\u3001\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362\u3001\u57fa\u672c\u7ebf\u6027\u4ee3\u6570\uff0c\u57fa\u672c\u7edf\u8ba1\u8fd0\u7b97\u548c\u968f\u673a\u6a21\u62df\u7b49\u7b49\u3002 Numpy \u4ee3\u7801\u4e00\u822c\u91c7\u7528\u5411\u91cf\u5316\uff08\u77e2\u91cf\u5316\uff09\u63cf\u8ff0\uff0c\u8fd9\u4f7f\u5f97\u4ee3\u7801\u4e2d\u6ca1\u6709\u4efb\u4f55\u663e\u5f0f\u7684\u5faa\u73af\uff0c\u7d22\u5f15\u7b49\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u6709\u4ee5\u4e0b\u597d\u5904\uff1a \u5411\u91cf\u5316\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u66f4\u6613\u4e8e\u9605\u8bfb \u66f4\u5c11\u7684\u4ee3\u7801\u884c\u901a\u5e38\u610f\u5473\u7740\u66f4\u5c11\u7684\u9519\u8bef \u4ee3\u7801\u66f4\u63a5\u8fd1\u4e8e\u6807\u51c6\u7684\u6570\u5b66\u7b26\u53f7 \u53e6\u5916\uff0c\u5411\u91cf\u5316\u7684\u4ee3\u7801\u80fd\u591f\u89c4\u907f\u6389 Python \u4e2d\u7f13\u6162\u7684\u8fed\u4ee3\u5faa\u73af\uff0c\u88ab\u5e95\u5c42\u7684\u5b9e\u73b0\u66f4\u597d\u7684\u8c03\u5ea6\uff0c\u5982\u63a5\u5165 BLAS \u77e9\u9635\u8fd0\u7b97\u5e93\uff0c\u4ece\u800c\u5b9e\u73b0\u66f4\u9ad8\u7684\u6027\u80fd\u3002 \u53cc\u7ebf\u6027\u63d2\u503c\u662f\u8ba1\u7b97\u673a\u89c6\u89c9\u56fe\u50cf\u5904\u7406\u4e2d\u7684\u5e38\u7528\u7b97\u6cd5\uff0c\u5b83\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u4e5f\u53ef\u4ee5\u7528\u4e8e\u6750\u8d28\u8d34\u56fe\u7684\u91cd\u91c7\u6837\u3002 \u672c\u6b21\u5b9e\u9a8c\u6211\u4eec\u5c06\u501f\u52a9 NumPy \u5b9e\u73b0\u4e00\u4e2a\u652f\u6301\u6279\u91cf\u5904\u7406\u7684\u5411\u91cf\u5316\u7684\u53cc\u7ebf\u6027\u63d2\u503c\uff0c\u6765\u8ba9\u5927\u5bb6\u719f\u6089 NumPy \u7684\u5411\u91cf\u5316\u7f16\u7a0b\u6a21\u5f0f\u3002","title":"1 \u5b9e\u9a8c\u7b80\u4ecb"},{"location":"Lab2-Vectors/#2","text":"\u4efb\u4f55\u542b\u6709 Python3 \u548c NumPy \u7684\u73af\u5883","title":"2 \u5b9e\u9a8c\u73af\u5883"},{"location":"Lab2-Vectors/#3","text":"","title":"3 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd"},{"location":"Lab2-Vectors/#31-numpy-api","text":"\u7531\u4e8e\u8bfe\u4e0a\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u8fd9\u90e8\u5206\u5185\u5bb9\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u5b9e\u9a8c\u624b\u518c\u4e2d\u7565\u53bb\u3002\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 NumPy \u7684 \u6587\u6863 \u3002","title":"3.1 NumPy API"},{"location":"Lab2-Vectors/#32","text":"\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u7b97\u6cd5\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff0c\u6982\u62ec\u6765\u8bf4\u5c31\u662f\u5148\u5728 \\(x\\) \u8f74\u4e0a\u8fdb\u884c\u4e00\u6b21\u63d2\u503c\uff0c\u518d\u5728 \\(y\\) \u8f74\u4e0a\u8fdb\u884c\u4e00\u6b21\u63d2\u503c\u3002 \u4ee5\u5728\u7070\u5ea6\u56fe\u4e0a\u8fdb\u884c\u63d2\u503c\u4e3a\u4f8b\uff0c\u6211\u4eec\u5df2\u77e5\u5916\u56f4\u7684\u56db\u4e2a\u70b9 \\((14, 20), (15, 20), (14, 21), (15, 21)\\) \u7070\u5ea6\u503c\u5206\u522b\u4e3a 91, 210, 162 \u548c 95\uff0c\u7136\u540e\u5e0c\u671b\u901a\u8fc7\u63d2\u503c\u5f97\u5230 \\((14.5, 20.2)\\) \u5904\u7684\u7070\u5ea6\u503c\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5148\u5728 \\(x\\) \u65b9\u5411\u4e0a\u901a\u8fc7\u7ebf\u6027\u63d2\u503c\u8ba1\u7b97\u51fa \\((14.5, 20), (14.5, 21)\\) \u4e24\u4e2a\u70b9\u7684\u7070\u5ea6\u503c 150.5, 128.5\uff0c\u7136\u540e\u518d\u4f7f\u7528\u8fd9\u4e24\u4e2a\u503c\u5728 \\(y\\) \u65b9\u5411\u4e0a\u518d\u6b21\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff0c\u5f97\u5230 \\((14.5, 20.2)\\) \u5750\u6807\u5904\u7684\u7070\u5ea6\u503c 146.1\u3002 \u6ce8\u610f\u8fd9\u91cc\u662f\u4e00\u4e2a\u5355\u901a\u9053\u7684\u4f8b\u5b50\uff0c\u5bf9\u4e8e\u5b9e\u9645\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5f80\u5f80\u6709\u5f88\u591a\u4e2a\u901a\u9053\uff0c\u5982\u5f69\u8272\u56fe\u7247\u62e5\u6709 RGB \u4e09\u4e2a\u901a\u9053\uff0c\u4e00\u4e9b\u56fe\u7247\u53ef\u80fd\u8fd8\u6709 \\(\\alpha\\) \u900f\u660e\u5ea6\u901a\u9053\uff0c\u6216\u662f\u6df1\u5ea6\u901a\u9053\u3002 \u5bf9\u4e8e\u591a\u901a\u9053\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a\u901a\u9053\u8fdb\u884c\u5206\u522b\u63d2\u503c\u3002","title":"3.2 \u53cc\u7ebf\u6027\u63d2\u503c\u7b97\u6cd5"},{"location":"Lab2-Vectors/#321","text":"\u5f62\u5f0f\u5316\u5b9a\u4e49\u6458\u81ea \u7ef4\u57fa\u767e\u79d1 \u5047\u5982\u6211\u4eec\u60f3\u5f97\u5230\u672a\u77e5\u51fd\u6570 \\(f\\) \u5728\u70b9 \\({\\displaystyle P=\\left(x,y\\right)}\\) \u7684\u503c\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u77e5\u51fd\u6570 \\(f\\) \u5728 \\({\\displaystyle Q_{11}=\\left(x_{1},y_{1}\\right)}\\) , \\({\\displaystyle Q_{12}=\\left(x_{1},y_{2}\\right)}\\) , \\({\\displaystyle Q_{21}=\\left(x_{2},y_{1}\\right)}\\) \u53ca \\({Q_{22}=\\left(x_{2},y_{2}\\right)}\\) \u56db\u4e2a\u70b9\u7684\u503c\u3002 \u9996\u5148\u5728 \\(x\\) \u65b9\u5411\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff0c\u5f97\u5230 $$ {\\displaystyle {\\begin{aligned}f(x,y_{1})&\\approx {\\frac {x_{2}-x}{x_{2}-x_{1}}}f(Q_{11})+{\\frac {x-x_{1}}{x_{2}-x_{1}}}f(Q_{21}),\\\\ f(x,y_{2})&\\approx {\\frac {x_{2}-x}{x_{2}-x_{1}}}f(Q_{12})+{\\frac {x-x_{1}}{x_{2}-x_{1}}}f(Q_{22}).\\end{aligned}}} $$ \u7136\u540e\u5728 \\(y\\) \u65b9\u5411\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff0c\u5f97\u5230 $$ {\\displaystyle {\\begin{aligned}f(x,y)&\\approx &&{\\frac {y_{2}-y}{y_{2}-y_{1}}}f(x,y_{1})+{\\frac {y-y_{1}}{y_{2}-y_{1}}}f(x,y_{2})\\\\ &=&&{\\frac {y_{2}-y}{y_{2}-y_{1}}}\\left({\\frac {x_{2}-x}{x_{2}-x_{1}}}f(Q_{11})+{\\frac {x-x_{1}}{x_{2}-x_{1}}}f(Q_{21})\\right)\\\\ &&&+{\\frac {y-y_{1}}{y_{2}-y_{1}}}\\left({\\frac {x_{2}-x}{x_{2}-x_{1}}}f(Q_{12})+{\\frac {x-x_{1}}{x_{2}-x_{1}}}f(Q_{22})\\right)\\\\ &=&&{\\frac {1}{(x_{2}-x_{1})(y_{2}-y_{1})}}{\\big (}f(Q_{11})(x_{2}-x)(y_{2}-y)+f(Q_{21})(x-x_{1})(y_{2}-y)\\\\ &&&+f(Q_{12})(x_{2}-x)(y-y_{1})+f(Q_{22})(x-x_{1})(y-y_{1}){\\big )}\\\\ &=&&{\\frac {1}{(x_{2}-x_{1})(y_{2}-y_{1})}}{\\begin{bmatrix}x_{2}-x&x-x_{1}\\end{bmatrix}}{\\begin{bmatrix}f(Q_{11})&f(Q_{12})\\\\ f(Q_{21})&f(Q_{22})\\end{bmatrix}}{\\begin{bmatrix}y_{2}-y\\\\ y-y_{1}\\end{bmatrix}}.\\end{aligned}}} $$ \u6ce8\u610f\u6b64\u5904\u5982\u679c\u5148\u5728 \\(y\\) \u65b9\u5411\u63d2\u503c\u3001\u518d\u5728 \\(x\\) \u65b9\u5411\u63d2\u503c\uff0c\u5176\u7ed3\u679c\u4e0e\u6309\u7167\u4e0a\u8ff0\u987a\u5e8f\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684\u3002","title":"3.2.1 \u5f62\u5f0f\u5316\u5b9a\u4e49"},{"location":"Lab2-Vectors/#33-nhwc","text":"\u771f\u5b9e\u60c5\u51b5\u4e0b\u6211\u4eec\u5904\u7406\u7684\u6570\u636e\u90fd\u662f\u4ee5 batch \u4e3a\u5355\u4f4d\u7684\uff0c\u6309\u6279\u8fdb\u884c\u5904\u7406\u7684\u3002\u4ee5\u53cc\u7ebf\u6027\u63d2\u503c\u4e3a\u4f8b\uff0c\u6211\u4eec\u5f80\u5f80\u4f1a\u4e00\u6b21\u6027\u9001\u5165 \\(N\\) \u5f20\u5927\u5c0f\u4e3a \\(H \\times W\\) \u7684\u56fe\u7247\uff0c\u6bcf\u4e2a\u50cf\u7d20\u4e0a\u6709 \\(C\\) \u4e2a\u901a\u9053\uff0c\u7136\u540e\u4e00\u6b21\u6027\u8fd4\u56de\u8fd9 \\(N\\) \u5f20\u56fe\u7247\u5904\u7406\u597d\u7684\u7ed3\u679c\u3002\u6b64\u65f6\u6211\u4eec\u4e00\u6b21\u6027\u4f20\u5165\u7684\u6570\u636e\uff0c\u5c31\u662f\u76f4\u63a5\u6309\u987a\u5e8f\u5806\u53e0\u5728\u4e00\u8d77\u7684 NHWC \u683c\u5f0f\u7684\u6570\u7ec4\uff0c\u5b83\u5c06 batch \u4f5c\u4e3a\u4e86\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u800c\u540e\u4e09\u4e2a\u7ef4\u5ea6\u5206\u522b\u662f\u5355\u5f20\u56fe\u7247\u7684\u9ad8\u5ea6\u3001\u5bbd\u5ea6\u3001\u901a\u9053\u6570\u3002\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e00\u6570\u636e\u683c\u5f0f\u7406\u89e3\u4e3a c \u8bed\u8a00\u4e2d\u7684\u9ad8\u7ef4\u6570\u7ec4 image[N][H][W][C] \uff0c\u800c\u56e0\u4e3a c \u7684\u6570\u7ec4\u548c NumPy \u7684 ndarray \u4e00\u6837\u90fd\u662f\u5728\u5185\u5b58\u91cc\u8fde\u7eed\u6392\u653e\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e image[x1][x2][x3][x4] \uff0c\u5176\u5b9e\u5c31\u662f image[x1 * H * W * C + x2 * W * C + x3 * C + x4] \u5904\u7684\u5185\u5b58\u3002 \u53e6\u4e00\u4e2a\u5e38\u89c1\u7684\u6570\u636e\u683c\u5f0f\u662f NCHW\uff0c\u4e5f\u5c31\u662f\u5355\u5f20\u56fe\u7247\u5185\u901a\u9053\u5728\u524d\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u6211\u4eec\u6ca1\u6709\u9009\u7528\u3002 \u6570\u636e\u683c\u5f0f\u66f4\u591a\u662f\u5bf9\u6570\u636e\u7684\u5b58\u653e\u987a\u5e8f\u8fdb\u884c\u7ea6\u5b9a\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 np.transpose \u5c06\u4e0d\u540c\u7ef4\u5ea6\u8fdb\u884c\u8c03\u6362\u3002","title":"3.3 NHWC \u6570\u636e\u683c\u5f0f"},{"location":"Lab2-Vectors/#4","text":"","title":"4 \u5b9e\u9a8c\u6b65\u9aa4"},{"location":"Lab2-Vectors/#41","text":"1 2 3 4 5 6 def bilinear_interp ( a : np . ndarray , b : np . ndarray ) -> np . ndarray : \"\"\" - a is a ND array with shape [N, H1, W1, C] - b is a ND array with shape [N, H2, W2, 2] - return a ND array with shape [N, H2, W2, C] \"\"\" \u5176\u542b\u4e49\u662f\uff0c\u5bf9\u4e8e batch \u5185\u7684\u6bcf\u4e00\u5f20 \\(H1\\times W1\\) \u7684\u56fe a'\uff0cb' \u4e2d\u7ed9\u51fa\u4e86\u65b0\u7684 \\(H2\\times W2\\) \u7684\u56fe\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u6240\u60f3\u8981\u91c7\u6837\u7684 a' \u56fe\u4e2d\u5bf9\u5e94\u70b9\u7684\u5750\u6807\uff0c\u5e76\u5c06\u91c7\u6837\u7ed3\u679c\u8fd4\u56de\u3002 \u4e3a\u4e86\u7b80\u5316\u4efb\u52a1\uff0c\u6211\u4eec\u5047\u5b9a\u4f20\u5165\u7684\u91c7\u6837\u70b9\u4e0d\u4f1a\u51fa\u73b0\u5728 \\((H1 - 1, W1 - 1)\\) \uff0c\u5373\u56fe\u50cf\u7684\u53f3\u4e0b\u89d2\u3002","title":"4.1 \u63a5\u53e3\u5b9a\u4e49"},{"location":"Lab2-Vectors/#42","text":"\u4e0b\u9762\u7ed9\u51fa\u76f4\u63a5\u4f7f\u7528 for \u5faa\u73af\u8fed\u4ee3\u8ba1\u7b97\u7684\u53cc\u7ebf\u6027\u63d2\u503c\u7248\u672c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 def bilinear_interp_baseline ( a : np . ndarray , b : np . ndarray ) -> np . ndarray : \"\"\" This is the baseline implementation of bilinear interpolation without vectorization. - a is a ND array with shape [N, H1, W1, C], dtype = int64 - b is a ND array with shape [N, H2, W2, 2], dtype = float64 - return a ND array with shape [N, H2, W2, C], dtype = int64 \"\"\" # Get axis size from ndarray shape N , H1 , W1 , C = a . shape N1 , H2 , W2 , _ = b . shape assert N == N1 # Do iteration res = np . empty (( N , H2 , W2 , C ), dtype = int64 ) for n in range ( N ): for i in range ( H2 ): for j in range ( W2 ): x , y = b [ n , i , j ] x_idx , y_idx = int ( np . floor ( x )), int ( np . floor ( y )) _x , _y = x - x_idx , y - y_idx # For simplicity, we assume: # - all x are in [0, H1 - 1) # - all y are in [0, W1 - 1) res [ n , i , j ] = a [ n , x_idx , y_idx ] * ( 1 - _x ) * ( 1 - _y ) + \\ a [ n , x_idx + 1 , y_idx ] * _x * ( 1 - _y ) + \\ a [ n , x_idx , y_idx + 1 ] * ( 1 - _x ) * _y + \\ a [ n , x_idx + 1 , y_idx + 1 ] * _x * _y return res","title":"4.2 \u57fa\u51c6\u4ee3\u7801"},{"location":"Lab2-Vectors/#43","text":"\u5728\u6211\u4eec\u7ed9\u51fa\u7684\u4ee3\u7801\u7684 bilinear_interp/vectorized.py \u4e2d\uff0c\u5b8c\u6210 bilinear_interp_vectorized \u51fd\u6570\u3002","title":"4.3 \u5b8c\u6210\u5411\u91cf\u5316\u5b9e\u73b0"},{"location":"Lab2-Vectors/#44","text":"\u8fd0\u884c main.py \uff0c\u67e5\u770b\u8f93\u51fa\uff0c\u4e00\u5207\u987a\u5229\u5c06\u770b\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a Generating Data... Executing Baseline Implementation... Finished in 139.50709176063538s Executing Vectorized Implementation... Finished in 4.717759132385254s [PASSED] Results are identical. Speed Up 29.570626190511327x \u5426\u5219\u5c06\u4f1a\u89e6\u53d1\u5f02\u5e38\uff1a Traceback (most recent call last): File \"Introduction-Labs-2021/lab2_vectors/main.py\", line 28, in <module> raise Exception('Results are different!') Exception: Results are different! \u5176\u4e2d\uff0c\u8017\u65f6\u4e0e\u52a0\u901f\u6bd4\u4e0e\u4f60\u7684\u5b9e\u73b0\u548c\u8bbe\u5907\u6709\u5173\uff08\u4e3b\u8981\u662f\u5b9e\u73b0\uff09\u3002\u8bf7\u5728\u62a5\u544a\u4e2d\u5c06\u4f60\u7684\u8fd0\u884c\u7ed3\u679c\u8d34\u51fa\u3002","title":"4.4 \u68c0\u6d4b\u5b9e\u73b0\u6b63\u786e\u4e0e\u52a0\u901f\u6548\u679c"},{"location":"Lab2-Vectors/#5","text":"\u8be6\u89c1 starter_code","title":"5 \u5b9e\u9a8c\u521d\u59cb\u4ee3\u7801"},{"location":"Lab2-Vectors/#6","text":"\u5b8c\u6210\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u5411\u91cf\u5316\u7248\u672c \u6d4b\u8bd5\u5411\u91cf\u5316\u5b9e\u73b0\u7684\u6b63\u786e\u6027\u548c\u52a0\u901f\u6bd4 \u63d0\u4ea4\u4ee5\u4e0b\u5185\u5bb9\uff1a \u4ee3\u7801 \u7b80\u5355\u5b9e\u9a8c\u62a5\u544a\uff0c\u5305\u542b \u601d\u8def \u6b63\u786e\u6027\u4e0e\u52a0\u901f\u6bd4","title":"6 \u5b9e\u9a8c\u4efb\u52a1\u4e0e\u8981\u6c42"},{"location":"Lab2-Vectors/#_2","text":"\u5173\u4e8e\u53cc\u7ebf\u6027\u63d2\u503c\uff1a https://en.wikipedia.org/wiki/Bilinear_interpolation NumPy \u6587\u6863\uff1a https://numpy.org/doc/stable/ \u4e00\u7bc7\u4e0d\u9519\u7684\u5165\u95e8\u6559\u7a0b\uff1a https://medium.com/better-programming/numpy-illustrated-the-visual-guide-to-numpy-3b1d4976de1d \u4e00\u7bc7\u7a0d\u5fae\u786c\u6838\u4e00\u70b9\u7684\u6559\u7a0b\uff1a https://www.labri.fr/perso/nrougier/from-python-to-numpy/ \u66f4\u591a\u7ec3\u4e60\uff1a https://github.com/rougier/numpy-100","title":"\u53c2\u8003\u8d44\u6599"},{"location":"Lab2.5-Vectors-Bonus/","text":"\u5b9e\u9a8c\u4e8c Bonus\uff1a\u624b\u5199 SIMD \u5411\u91cf\u5316 \u672c\u90e8\u5206\u9009\u505a\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u5c1d\u8bd5\u7740\u5b8c\u6210\u3002 Bonus \u90e8\u5206\u5b8c\u6210\u5373\u6709\u52a0\u5206\uff08\u5b8c\u6210 Bonus \u90e8\u5206\u5b9e\u9a8c\u8981\u6c42\uff0c\u4e14\u52a0\u901f\u6bd4\u5927\u4e8e 1\uff09\uff0c\u6211\u4eec\u5c06\u6839\u636e\u5b8c\u6210\u8d28\u91cf\u63d0\u4f9b 5-10 \u5206\u7684\u52a0\u5206\uff08\u4e0e Lab2 \u6743\u91cd\u76f8\u540c\uff09\u3002 1 \u5b9e\u9a8c\u73af\u5883 aistation \u5e73\u53f0 2 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6 \u73b0\u4ee3\u5904\u7406\u5668\u4e00\u822c\u90fd\u652f\u6301\u5411\u91cf\u5316\u6307\u4ee4\uff0cx86 \u67b6\u6784\u4e0b Intel \u548c AMD \u4e24\u5bb6\u7684\u5904\u7406\u5668\u90fd\u63d0\u4f9b\u4e86\u8bf8\u5982 SSE\uff0cAVX \u7b49 SIMD \u6307\u4ee4\u96c6\uff0c\u4e00\u6761\u6307\u4ee4\u53ef\u4ee5\u540c\u65f6\u64cd\u4f5c\u591a\u4e2a\u6570\u636e\u8fdb\u884c\u8fd0\u7b97\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u73b0\u4ee3\u5904\u7406\u5668\u7684\u6570\u636e\u541e\u5410\u91cf\u3002 \u73b0\u4ee3\u7f16\u8bd1\u5668\u5728\u9ad8\u4f18\u5316\u7b49\u7ea7\u4e0b\uff0c\u5177\u6709\u81ea\u52a8\u5411\u91cf\u5316\u7684\u529f\u80fd\uff0c\u5bf9\u4e8e\u7ed3\u6784\u6e05\u6670\uff0c\u5faa\u73af\u8fb9\u754c\u6e05\u6670\u7684\u7a0b\u5e8f\uff0c\u7f16\u8bd1\u5668\u7684\u81ea\u52a8\u5411\u91cf\u5316\u5df2\u7ecf\u53ef\u4ee5\u8fbe\u5230\u5f88\u4f18\u79c0\u7684\u7a0b\u5ea6\u4e86\u3002\u7136\u800c\uff0c\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u59cb\u7ec8\u662f\u4fdd\u5b88\u7684\uff0c\u5f88\u591a\u60c5\u51b5\u4e0b\u7f16\u8bd1\u5668\u65e0\u6cd5\u5b8c\u6210\u4f7f\u7528 SIMD \u6307\u4ee4\u8fdb\u884c\u5411\u91cf\u5316\u7684\u5de5\u4f5c\uff0c\u4e3a\u4e86\u8ffd\u6c42\u6027\u80fd\uff0c\u9ad8\u6027\u80fd\u8ba1\u7b97\u9886\u57df\u7ecf\u5e38\u9700\u8981\u624b\u5199 SIMD \u4ee3\u7801\u8fdb\u884c\u4ee3\u7801\u4f18\u5316\u3002 \u663e\u7136\u76f4\u63a5\u624b\u5199\u6c47\u7f16\u6307\u4ee4\u8fc7\u4e8e\u56f0\u96be\uff0c\u5728 C \u8bed\u8a00\u73af\u5883\u4e0b\uff0cIntel \u63d0\u4f9b\u4e86\u4e00\u6574\u5957\u5173\u4e8e SIMD \u6307\u4ee4\u7684\u51fd\u6570\u5c01\u88c5\u63a5\u53e3\u548c\u6307\u4ee4\u76f8\u5173\u884c\u4e3a\u7684\u53c2\u7167\u624b\u518c\uff0c\u53ef\u4ee5\u5728\u5b9e\u9a8c\u6587\u6863\u7684\u53c2\u8003\u8d44\u6599\u4e2d\u627e\u5230\u3002 \u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570 API \u9700\u8981 include \u5bf9\u5e94\u7684\u5934\u6587\u4ef6\uff0c\u4e0d\u540c SIMD \u6307\u4ee4\u96c6\u9700\u8981\u7684\u5934\u6587\u4ef6\u4e0d\u540c\uff0c\u5177\u4f53\u9700\u8981\u53c2\u8003 Intel \u76f8\u5173\u6587\u6863\u3002 #include <smmintrin.h> #include <emmintrin.h> #include <immintrin.h> \u53e6\u5916\u6df1\u5165\u5230\u8fd9\u4e2a\u7ea7\u522b\u7684\u4f18\u5316\u5df2\u7ecf\u5f00\u59cb\u9700\u8981\u8003\u8651\u5177\u4f53\u5904\u7406\u5668\u7684\u4f53\u7cfb\u7ed3\u6784\u7ec6\u8282\u4e86\uff0c\u5982\u67d0\u4e2a\u67b6\u6784\u4e0b\u67d0\u6761\u6307\u4ee4\u7684\u5b9e\u73b0\u5ef6\u65f6\u548c\u541e\u5410\u91cf\u662f\u591a\u5c11\uff0c\u5904\u7406\u5668\u63d0\u4f9b\u4e86\u591a\u5c11\u5411\u91cf\u5bc4\u5b58\u5668\uff0c\u8bbf\u5b58\u7684\u5bf9\u9f50\u7b49\u7b49\u3002\u8fd9\u79cd\u65f6\u5019\u7f16\u8bd1\u5668\u5177\u4f53\u4ea7\u751f\u7684\u6c47\u7f16\u4ee3\u7801\u80fd\u6bd4 C \u8bed\u8a00\u4ee3\u7801\u63d0\u4f9b\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u4f60\u80fd\u4e86\u89e3\u5230\u81ea\u5df1\u4f7f\u7528\u4e86\u591a\u5c11\u5bc4\u5b58\u5668\uff0c\u7f16\u8bd1\u5668\u662f\u5426\u751f\u6210\u4e86\u9884\u671f\u5916\u7684\u4ee3\u7801\u7b49\u7b49\u3002 \u53c2\u8003\u8d44\u6599\u4e2d\u63d0\u4f9b\u7684 godbolt \u662f\u4e00\u6b3e\u57fa\u4e8e web \u7684\u7814\u7a76\u4e0d\u540c\u7f16\u8bd1\u5668\u7f16\u8bd1\u4ea7\u751f\u6c47\u7f16\u4ee3\u7801\u7684\u5de5\u5177\uff0c\u5927\u5bb6\u5728\u8fdb\u884c\u672c\u5b9e\u9a8c\u7684\u65f6\u5019\u53ef\u4ee5\u5b66\u4e60\u4f7f\u7528\u3002 3 \u5b9e\u9a8c\u6b65\u9aa4 /* \u53ef\u4ee5\u4fee\u6539\u7684\u4ee3\u7801\u533a\u57df */ // ----------------------------------- for ( int i = 0 ; i < MAXN ; ++ i ) { c [ i ] += a [ i ] * b [ i ]; } // ----------------------------------- \u9700\u8981\u5b8c\u6210\u7684\u4efb\u52a1\u975e\u5e38\u7b80\u5355\uff0c\u5c06\u672c\u5faa\u73af\u4f7f\u7528\u624b\u5199 SIMD \u5411\u91cf\u5316\u7684\u65b9\u5f0f\u8fdb\u884c\u4f18\u5316\u3002\uff08\u56e0\u4e3a\u662f\u4f5c\u4e3a\u624b\u5199 SIMD \u5411\u91cf\u5316\u7684\u4f8b\u5b50\u8fdb\u884c\u4e86\u7b80\u5316\uff0c\u4e0d\u63a5\u53d7\u4efb\u4f55\u5176\u5b83\u7684\u4f18\u5316\u65b9\u5f0f\uff0c\u4f18\u5316\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u4fdd\u8bc1\u603b\u8ba1\u7b97\u91cf\u4e0d\u53d8\u4e14\u7ed3\u679c\u6b63\u786e\uff09 \u5728\u7f16\u8bd1\u65f6\u6dfb\u52a0\u4ee5\u4e0b\u9009\u9879\u53ef\u4ee5\u5141\u8bb8\u7f16\u8bd1\u5668\u751f\u6210\u4f7f\u7528 AVX2 \u548c FMA \u6307\u4ee4\u96c6\u7684\u4ee3\u7801\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u5176\u5b83\u4e0d\u5728\u7f16\u8bd1\u5668\u9ed8\u8ba4\u8303\u56f4\u5185\u7684\u6307\u4ee4\u96c6\uff0c\u7c7b\u4f3c\u7684\u7f16\u8bd1\u9009\u9879\u662f\u5fc5\u8981\u7684\u3002 -mavx2 -mfma \u53c2\u7167 Intel \u6587\u6863\u4f18\u5316\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u6d4b\u8bd5\u4f18\u5316\u524d\u548c\u4f18\u5316\u540e\u7684\u6027\u80fd\u5dee\u8ddd\uff0c\u6700\u540e\u5bf9\u6bd4\u524d\u540e\u7f16\u8bd1\u5668\u4ea7\u751f\u7684\u6c47\u7f16\u4ee3\u7801\u7684\u4e0d\u540c\u5373\u53ef\u5b8c\u6210 Bonus \u90e8\u5206\u7684\u5b9e\u9a8c\u3002 4 \u5b9e\u9a8c\u521d\u59cb\u4ee3\u7801 \u8be6\u89c1 add.cpp 5 \u5b9e\u9a8c\u4efb\u52a1\u4e0e\u8981\u6c42 \u5b8c\u6210\u4ee5\u4e0a\u7b80\u5355\u4ee3\u7801\u7684\u624b\u5199 SIMD \u5411\u91cf\u5316 \u6d4b\u8bd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027\u548c\u52a0\u901f\u6bd4 \u63d0\u4ea4\u4ee3\u7801\u548c\u7b80\u8981\u7684\u601d\u8def\uff0c\u5bf9\u6bd4\u57fa\u7840\u7248\u672c\u548c SIMD \u7248\u672c\u7f16\u8bd1\u5668\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801 \u53c2\u8003\u8d44\u6599 Intel\u00ae Intrinsics Guide\uff1a https://www.intel.com/content/www/us/en/docs/intrinsics-guide/index.html Compiler Explorer\uff1a https://godbolt.org/","title":"Lab2.5-Bonus \u624b\u5199 SIMD \u5411\u91cf\u5316"},{"location":"Lab2.5-Vectors-Bonus/#bonus-simd","text":"\u672c\u90e8\u5206\u9009\u505a\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u5c1d\u8bd5\u7740\u5b8c\u6210\u3002 Bonus \u90e8\u5206\u5b8c\u6210\u5373\u6709\u52a0\u5206\uff08\u5b8c\u6210 Bonus \u90e8\u5206\u5b9e\u9a8c\u8981\u6c42\uff0c\u4e14\u52a0\u901f\u6bd4\u5927\u4e8e 1\uff09\uff0c\u6211\u4eec\u5c06\u6839\u636e\u5b8c\u6210\u8d28\u91cf\u63d0\u4f9b 5-10 \u5206\u7684\u52a0\u5206\uff08\u4e0e Lab2 \u6743\u91cd\u76f8\u540c\uff09\u3002","title":"\u5b9e\u9a8c\u4e8c Bonus\uff1a\u624b\u5199 SIMD \u5411\u91cf\u5316"},{"location":"Lab2.5-Vectors-Bonus/#1","text":"aistation \u5e73\u53f0","title":"1 \u5b9e\u9a8c\u73af\u5883"},{"location":"Lab2.5-Vectors-Bonus/#2","text":"\u73b0\u4ee3\u5904\u7406\u5668\u4e00\u822c\u90fd\u652f\u6301\u5411\u91cf\u5316\u6307\u4ee4\uff0cx86 \u67b6\u6784\u4e0b Intel \u548c AMD \u4e24\u5bb6\u7684\u5904\u7406\u5668\u90fd\u63d0\u4f9b\u4e86\u8bf8\u5982 SSE\uff0cAVX \u7b49 SIMD \u6307\u4ee4\u96c6\uff0c\u4e00\u6761\u6307\u4ee4\u53ef\u4ee5\u540c\u65f6\u64cd\u4f5c\u591a\u4e2a\u6570\u636e\u8fdb\u884c\u8fd0\u7b97\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u73b0\u4ee3\u5904\u7406\u5668\u7684\u6570\u636e\u541e\u5410\u91cf\u3002 \u73b0\u4ee3\u7f16\u8bd1\u5668\u5728\u9ad8\u4f18\u5316\u7b49\u7ea7\u4e0b\uff0c\u5177\u6709\u81ea\u52a8\u5411\u91cf\u5316\u7684\u529f\u80fd\uff0c\u5bf9\u4e8e\u7ed3\u6784\u6e05\u6670\uff0c\u5faa\u73af\u8fb9\u754c\u6e05\u6670\u7684\u7a0b\u5e8f\uff0c\u7f16\u8bd1\u5668\u7684\u81ea\u52a8\u5411\u91cf\u5316\u5df2\u7ecf\u53ef\u4ee5\u8fbe\u5230\u5f88\u4f18\u79c0\u7684\u7a0b\u5ea6\u4e86\u3002\u7136\u800c\uff0c\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u59cb\u7ec8\u662f\u4fdd\u5b88\u7684\uff0c\u5f88\u591a\u60c5\u51b5\u4e0b\u7f16\u8bd1\u5668\u65e0\u6cd5\u5b8c\u6210\u4f7f\u7528 SIMD \u6307\u4ee4\u8fdb\u884c\u5411\u91cf\u5316\u7684\u5de5\u4f5c\uff0c\u4e3a\u4e86\u8ffd\u6c42\u6027\u80fd\uff0c\u9ad8\u6027\u80fd\u8ba1\u7b97\u9886\u57df\u7ecf\u5e38\u9700\u8981\u624b\u5199 SIMD \u4ee3\u7801\u8fdb\u884c\u4ee3\u7801\u4f18\u5316\u3002 \u663e\u7136\u76f4\u63a5\u624b\u5199\u6c47\u7f16\u6307\u4ee4\u8fc7\u4e8e\u56f0\u96be\uff0c\u5728 C \u8bed\u8a00\u73af\u5883\u4e0b\uff0cIntel \u63d0\u4f9b\u4e86\u4e00\u6574\u5957\u5173\u4e8e SIMD \u6307\u4ee4\u7684\u51fd\u6570\u5c01\u88c5\u63a5\u53e3\u548c\u6307\u4ee4\u76f8\u5173\u884c\u4e3a\u7684\u53c2\u7167\u624b\u518c\uff0c\u53ef\u4ee5\u5728\u5b9e\u9a8c\u6587\u6863\u7684\u53c2\u8003\u8d44\u6599\u4e2d\u627e\u5230\u3002 \u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570 API \u9700\u8981 include \u5bf9\u5e94\u7684\u5934\u6587\u4ef6\uff0c\u4e0d\u540c SIMD \u6307\u4ee4\u96c6\u9700\u8981\u7684\u5934\u6587\u4ef6\u4e0d\u540c\uff0c\u5177\u4f53\u9700\u8981\u53c2\u8003 Intel \u76f8\u5173\u6587\u6863\u3002 #include <smmintrin.h> #include <emmintrin.h> #include <immintrin.h> \u53e6\u5916\u6df1\u5165\u5230\u8fd9\u4e2a\u7ea7\u522b\u7684\u4f18\u5316\u5df2\u7ecf\u5f00\u59cb\u9700\u8981\u8003\u8651\u5177\u4f53\u5904\u7406\u5668\u7684\u4f53\u7cfb\u7ed3\u6784\u7ec6\u8282\u4e86\uff0c\u5982\u67d0\u4e2a\u67b6\u6784\u4e0b\u67d0\u6761\u6307\u4ee4\u7684\u5b9e\u73b0\u5ef6\u65f6\u548c\u541e\u5410\u91cf\u662f\u591a\u5c11\uff0c\u5904\u7406\u5668\u63d0\u4f9b\u4e86\u591a\u5c11\u5411\u91cf\u5bc4\u5b58\u5668\uff0c\u8bbf\u5b58\u7684\u5bf9\u9f50\u7b49\u7b49\u3002\u8fd9\u79cd\u65f6\u5019\u7f16\u8bd1\u5668\u5177\u4f53\u4ea7\u751f\u7684\u6c47\u7f16\u4ee3\u7801\u80fd\u6bd4 C \u8bed\u8a00\u4ee3\u7801\u63d0\u4f9b\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u4f60\u80fd\u4e86\u89e3\u5230\u81ea\u5df1\u4f7f\u7528\u4e86\u591a\u5c11\u5bc4\u5b58\u5668\uff0c\u7f16\u8bd1\u5668\u662f\u5426\u751f\u6210\u4e86\u9884\u671f\u5916\u7684\u4ee3\u7801\u7b49\u7b49\u3002 \u53c2\u8003\u8d44\u6599\u4e2d\u63d0\u4f9b\u7684 godbolt \u662f\u4e00\u6b3e\u57fa\u4e8e web \u7684\u7814\u7a76\u4e0d\u540c\u7f16\u8bd1\u5668\u7f16\u8bd1\u4ea7\u751f\u6c47\u7f16\u4ee3\u7801\u7684\u5de5\u5177\uff0c\u5927\u5bb6\u5728\u8fdb\u884c\u672c\u5b9e\u9a8c\u7684\u65f6\u5019\u53ef\u4ee5\u5b66\u4e60\u4f7f\u7528\u3002","title":"2 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6"},{"location":"Lab2.5-Vectors-Bonus/#3","text":"/* \u53ef\u4ee5\u4fee\u6539\u7684\u4ee3\u7801\u533a\u57df */ // ----------------------------------- for ( int i = 0 ; i < MAXN ; ++ i ) { c [ i ] += a [ i ] * b [ i ]; } // ----------------------------------- \u9700\u8981\u5b8c\u6210\u7684\u4efb\u52a1\u975e\u5e38\u7b80\u5355\uff0c\u5c06\u672c\u5faa\u73af\u4f7f\u7528\u624b\u5199 SIMD \u5411\u91cf\u5316\u7684\u65b9\u5f0f\u8fdb\u884c\u4f18\u5316\u3002\uff08\u56e0\u4e3a\u662f\u4f5c\u4e3a\u624b\u5199 SIMD \u5411\u91cf\u5316\u7684\u4f8b\u5b50\u8fdb\u884c\u4e86\u7b80\u5316\uff0c\u4e0d\u63a5\u53d7\u4efb\u4f55\u5176\u5b83\u7684\u4f18\u5316\u65b9\u5f0f\uff0c\u4f18\u5316\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u4fdd\u8bc1\u603b\u8ba1\u7b97\u91cf\u4e0d\u53d8\u4e14\u7ed3\u679c\u6b63\u786e\uff09 \u5728\u7f16\u8bd1\u65f6\u6dfb\u52a0\u4ee5\u4e0b\u9009\u9879\u53ef\u4ee5\u5141\u8bb8\u7f16\u8bd1\u5668\u751f\u6210\u4f7f\u7528 AVX2 \u548c FMA \u6307\u4ee4\u96c6\u7684\u4ee3\u7801\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u5176\u5b83\u4e0d\u5728\u7f16\u8bd1\u5668\u9ed8\u8ba4\u8303\u56f4\u5185\u7684\u6307\u4ee4\u96c6\uff0c\u7c7b\u4f3c\u7684\u7f16\u8bd1\u9009\u9879\u662f\u5fc5\u8981\u7684\u3002 -mavx2 -mfma \u53c2\u7167 Intel \u6587\u6863\u4f18\u5316\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u6d4b\u8bd5\u4f18\u5316\u524d\u548c\u4f18\u5316\u540e\u7684\u6027\u80fd\u5dee\u8ddd\uff0c\u6700\u540e\u5bf9\u6bd4\u524d\u540e\u7f16\u8bd1\u5668\u4ea7\u751f\u7684\u6c47\u7f16\u4ee3\u7801\u7684\u4e0d\u540c\u5373\u53ef\u5b8c\u6210 Bonus \u90e8\u5206\u7684\u5b9e\u9a8c\u3002","title":"3 \u5b9e\u9a8c\u6b65\u9aa4"},{"location":"Lab2.5-Vectors-Bonus/#4","text":"\u8be6\u89c1 add.cpp","title":"4 \u5b9e\u9a8c\u521d\u59cb\u4ee3\u7801"},{"location":"Lab2.5-Vectors-Bonus/#5","text":"\u5b8c\u6210\u4ee5\u4e0a\u7b80\u5355\u4ee3\u7801\u7684\u624b\u5199 SIMD \u5411\u91cf\u5316 \u6d4b\u8bd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027\u548c\u52a0\u901f\u6bd4 \u63d0\u4ea4\u4ee3\u7801\u548c\u7b80\u8981\u7684\u601d\u8def\uff0c\u5bf9\u6bd4\u57fa\u7840\u7248\u672c\u548c SIMD \u7248\u672c\u7f16\u8bd1\u5668\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801","title":"5 \u5b9e\u9a8c\u4efb\u52a1\u4e0e\u8981\u6c42"},{"location":"Lab2.5-Vectors-Bonus/#_1","text":"Intel\u00ae Intrinsics Guide\uff1a https://www.intel.com/content/www/us/en/docs/intrinsics-guide/index.html Compiler Explorer\uff1a https://godbolt.org/","title":"\u53c2\u8003\u8d44\u6599"},{"location":"Lab3-Cuda/","text":"\u5b9e\u9a8c\u4e09\uff1aCUDA\u4f7f\u7528\u57fa\u7840 1 \u5b9e\u9a8c\u7b80\u4ecb \u5377\u79ef\uff08 Convolution \uff09\u662f\u4e00\u79cd\u57fa\u672c\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u60f3\u5fc5\u5927\u5bb6\u5728\u5fae\u79ef\u5206\u3001\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1\u7b49\u6570\u5b66\u57fa\u7840\u8bfe\u7a0b\u4e2d\u90fd\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u63a5\u89e6\u8fc7\u3002\u4f5c\u4e3a\u4e00\u79cd\u57fa\u672c\u7684\u6570\u5b66\u8ba1\u7b97\uff0c\u5176\u5728\u56fe\u50cf\u5904\u7406\u3001\u673a\u5668\u5b66\u4e60\u7b49\u9886\u57df\u90fd\u6709\u91cd\u8981\u5e94\u7528\u3002 \u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u4f60\u4f7f\u7528 CUDA \u5b8c\u6210\u4e00\u4e2a GPU \u4e0a\u7684\u4e8c\u7ef4\u79bb\u6563\u5377\u79ef\u3002 \u4f60\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u4f7f\u7528 CUDA Runtime API \u6216\u8005 CUDA Driver API \u8fdb\u884c\u7f16\u7a0b\uff0c\u4f46\u4e0d\u80fd\u8c03\u7528\u9ad8\u6027\u80fd\u8ba1\u7b97\u7684Library\u4ee3\u66ff\u4f60\u81ea\u5df1\u5b9e\u73b0\u5377\u79ef\u3002\u672c\u5b9e\u9a8c\u63a8\u8350\u91c7\u7528 CUDA Runtime API\uff0c\u4f7f\u7528\u66f4\u52a0\u7b80\u5355\u65b9\u4fbf\uff0c\u76f8\u8f83Driver\u51e0\u4e4e\u4e0d\u635f\u5931\u6027\u80fd\u3002 2 \u5b9e\u9a8c\u73af\u5883 2.0 \u8b66\u544a \u7531\u4e8e\u767b\u5f55\u8282\u70b9\uff08H248\uff09\u914d\u7f6e\u5f88\u4f4e\uff0c\u7981\u6b62\u5728\u4e0a\u9762\u4f7f\u7528 vscode-remote \u7b49\u5927\u91cf\u6d88\u8017\u8d44\u6e90\u7684\u7a0b\u5e8f 2.1 \u7f16\u8bd1\u5668\u52a0\u8f7d . /opt/spack/share/spack/setup-env.sh spack load cuda@11.5.0 # \u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u522b\u7684 cuda \u7248\u672c 2.2 \u8fd0\u884c \u5b9e\u9a8c\u73af\u5883\u4e0e Lab 4 \u4e00\u81f4\uff0c\u8bf7\u4f7f\u7528 GPU \u8fd9\u4e2a Partition\uff0c\u4e3a\u9632\u6b62\u770b\u5230\u7684 GPU \u6570\u91cf\u4e0d\u6b63\u5e38\uff0c\u8bf7\u4f7f\u7528\u4e0b\u5217\u547d\u4ee4\u7533\u8bf7\u8282\u70b9\uff1a srun -p GPU -N 1 --gres = gpu:1 --cpus-per-task = 16 --pty bash 2.3 Profile Nsight Compute \u5728 /opt/NVIDIA-Nsight-Compute-2022.2 \u4e0b Nsight System \u5728 spack load cudnn \u540e\u76f4\u63a5\u4f7f\u7528 nsys \u5373\u53ef 3 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd \u8be5\u90e8\u5206\u7b80\u8981\u4ecb\u7ecd\u548c\u5b9e\u9a8c\u76f8\u5173\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u4e3a\u65b9\u4fbf\u7406\u89e3\uff0c\u4e0d\u4fdd\u8bc1\u6570\u5b66\u4e0a\u7684\u4e25\u8c28\u6027\u3002 3.1 \u5f20\u91cf(tensor) \u5f20\u91cf\u6982\u5ff5\u662f\u77e2\u91cf\u6982\u5ff5\u7684\u63a8\u5e7f\uff0c\u77e2\u91cf\u662f\u4e00\u9636\u5f20\u91cf\u3002\u5f20\u91cf\u662f\u4e00\u4e2a\u53ef\u7528\u6765\u8868\u793a\u5728\u4e00\u4e9b\u77e2\u91cf\u3001\u6807\u91cf\u548c\u5176\u4ed6\u5f20\u91cf\u4e4b\u95f4\u7684\u7ebf\u6027\u5173\u7cfb\u7684\u591a\u7ebf\u6027\u51fd\u6570\u3002 \u540c\u6784\u610f\u4e49\u4e0b\uff0c\u7b2c\u96f6\u9636\u5f20\u91cf(r = 0)\u4e3a\u6807\u91cf(Scalar)\uff0c\u7b2c\u4e00\u9636\u5f20\u91cf(r = 1)\u4e3a\u5411\u91cf (Vector)\uff0c\u7b2c\u4e8c\u9636\u5f20\u91cf(r = 2)\u5219\u4e3a\u77e9\u9635(Matrix)\u3002 \u5b9e\u9a8c\u4e2d\u7684\u5377\u79ef\u8fd0\u7b97\u672c\u5b9e\u9a8c\u6d89\u53ca\u4e24\u4e2a\u56db\u7ef4\u5f20\u91cf\u7684\u8fd0\u7b97\u3002 3.2 \u5377\u79ef(convolution) \u672c\u5b9e\u9a8c\u53ea\u6d89\u53ca\u79bb\u6563\u8fd0\u7b97\uff0c\u8fde\u7eed\u5f62\u5f0f\u7684\u5377\u79ef\u4e0d\u505a\u4ecb\u7ecd\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u3002 3.2.1 \u4e00\u7ef4\u79bb\u6563\u5377\u79ef \u5b9a\u4e49 \\(\\left(f*g\\right)\\left(n\\right)\\) \u4e3a\u51fd\u6570 \\(f\\) \u4e0e \\(g\\) \u7684\u5377\u79ef \\[ \\left(f*g\\right)\\left(n\\right)=\\Sigma_{t=-\\infty}^{+\\infty}f\\left(t\\right)g\\left(n-t\\right) \\] \u51fd\u6570 \\(f\\) \u548c \\(g\\) \u5b9a\u4e49\u57df\u53ef\u4ee5\u4e0d\u662f\u6240\u6709\u6574\u6570\uff0c\u4fee\u6539\u4e0a\u5f0f\u4e2d \\(t\\) \u7684\u904d\u5386\u8303\u56f4\u53ef\u5f97\u5230\u65b0\u7684\u5b9a\u4e49\uff1b\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u5b9a\u4e49\u8d85\u51fa\u5b9a\u4e49\u57df\u7684\u51fd\u6570\u503c\u89c6\u4e3a 0 \uff0c\u53ef\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e24\u4e2a\u51fd\u6570\u7684\u5377\u79ef\u7ed3\u679c\u4ecd\u662f\u51fd\u6570\u3002 \u53ef\u4ee5\u5f62\u8c61\u5730\u7406\u89e3\u4e3a\u6cbf\u7740\u4e0d\u65ad\u79fb\u52a8\u7684 \\(x+y=n\\) \u76f4\u7ebf\uff0c\u5c06\u4e24\u4e2a\u51fd\u6570\u5377\u6210\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\uff0c\u6bcf\u6761\u76f4\u7ebf\u5bf9\u5e94\u65b0\u51fd\u6570\u7684\u4e00\u7ec4\u5bf9\u5e94\u5173\u7cfb\u3002 3.2.2 \u4e8c\u7ef4\u79bb\u6563\u5377\u79ef \u4e8c\u7ef4\u79bb\u6563\u5377\u79ef\u53ef\u4ee5\u89c6\u4e3a\u4e00\u7ef4\u79bb\u6563\u5377\u79ef\u7684\u63a8\u5e7f\u3002 \\[ \\left(f*g\\right)\\left(n,m\\right)=\\Sigma_{i=-\\infty}^{+\\infty}\\Sigma_{j=-\\infty}^{+\\infty}f\\left(i,j\\right)g\\left(n-i,m-j\\right) \\] \u6211\u4eec\u5728\u5b9e\u9a8c\u4e2d\u7684\u5b9a\u4e49\u5377\u79ef\u4e0e\u6570\u5b66\u4e0a\u7684\u5b9a\u4e49\u5b58\u5728\u5dee\u522b\uff0c\u6211\u4eec\u8ba4\u4e3a\u5176\u5728\u5e7f\u4e49\u4e0a\u5c5e\u4e8e\u4e8c\u7ef4\u79bb\u6563\u5377\u79ef\u3002 \u7b80\u5316\u8d77\u89c1\uff0c\u8003\u8651\u4e24\u4e2a\u65b9\u9635 \\(f\\) \u548c \\(g\\) \uff0c \\(f\\) \u7684\u5927\u5c0f\u4e3a \\(a*a\\) \uff0c \\(g\\) \u7684\u5927\u5c0f\u4e3a \\(b*b\\) \uff0c\u6211\u4eec\u5c06 \\(g\\) \u79f0\u4e3a\u6838\uff08kernel\uff09\u51fd\u6570\uff0c\u4e14\u8981\u6c42 \\(b\\) \u4e3a\u5947\u6570\u3002 \\(f\\) \u884c\u5217\u4e0b\u6807\u5747\u4ece 0 \u5f00\u59cb\uff0c \\(g\\) \u7684\u884c\u5217\u4e0b\u6807\u5219\u4ece \\(-\\lfloor b/2\\rfloor\\) \u5230 \\(+\\lfloor b/2\\rfloor\\) \uff08\u5305\u62ec0\uff09 \uff0c\u6b64\u65f6\u5377\u79ef\u7684\u7ed3\u679c\u53ef\u4ee5\u5b9a\u4e49\u4e3a: $$ \\left(f*g\\right)\\left(n,m\\right)=\\Sigma_{i=-\\lfloor b/2\\rfloor}^{+\\lfloor b/2\\rfloor}\\Sigma_{j=-\\lfloor b/2\\rfloor}^{+\\lfloor b/2\\rfloor}f\\left(n+i,m+j\\right)g\\left(i,j\\right) $$ \u82e5 \\(f\\) \u7684\u4e0b\u6807\u8303\u56f4\u8d85\u51fa\u5b9a\u4e49\u8303\u56f4\uff0c\u672c\u5b9e\u9a8c\u7684\u65b9\u5f0f\u662f\u586b\u5145\u4e00\u4e2a\u9ed8\u8ba4\u503c (0) \u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u5377\u79ef\u7ed3\u679c\u4e0e \\(f\\) \u5927\u5c0f\u76f8\u540c\u3002 3.3 Bank Bank \u7684\u6982\u5ff5\u5728\u4e0d\u540c\u79cd\u7c7b\u7684\u5b58\u50a8\u5668\u4e2d\u90fd\u6709\u6d89\u53ca\uff0c\u5176\u662f\u4e3a\u4e86\u89e3\u51b3\u5b58\u50a8\u5668\u5e76\u884c\u8bbf\u95ee\u7684\u95ee\u9898\u800c\u63d0\u51fa\u7684\u3002\u4ee5\u4e00\u4e2a\u5177\u67094\u4e2a bank \u7684\u5b58\u50a8\u5668\u4e3a\u4f8b\uff0c\u6211\u4eec\u5f80\u5e38\u5728\u7f16\u7a0b\u65f6\u8ba4\u4e3a\u903b\u8f91\u4e0a\u8ba4\u4e3a\u8fde\u7eed\u7684\u5185\u5b58\u57284\u4e2a bank \u4e2d\u7684\u7269\u7406\u5b58\u50a8\u65b9\u5f0f\u5982\u4e0b\u56fe\u6240\u793a\uff1a Bank 0 Bank 1 Bank 2 Bank 3 MEM[0] MEM[1] MEM[2] MEM[3] MEM[4] MEM[5] MEM[6] MEM[7] MEM[8] MEM[9] MEM[10] MEM[11] ... ... ... ... \u4e8e\u662f\u5728\u540c\u4e00\u65f6\u95f4\u6211\u4eec\u8bbf\u95ee\u8bf8\u5982 MEM[0], MEM[9], MEM[6], MEM[3] \u7684\u5b58\u50a8\u7a7a\u95f4\u5c31\u4e0d\u4f1a\u4ea7\u751f\u51b2\u7a81\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u7684\u6548\u7387\uff1b\u5426\u5219\uff0c\u6700\u5dee\u7684\u60c5\u51b5\u4e0b\uff0c\u82e5\u8fde\u7eed\u7684\u8bbf\u5b58\u5e8f\u5217\u5747\u4f4d\u4e8e\u540c\u4e00 bank\uff0c\u5219\u6548\u7387\u7b49\u4e8e\u4e32\u884c\u7684 4 \u6b21\u5b58\u50a8\u8bbf\u95ee\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u82e5\u5b58\u50a8\u5668\u7684 bank \u8fdb\u884c\u8fc7\u9488\u5bf9\u6027\u7684\u4f18\u5316\uff0c\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00 bank \u7684\u540c\u4e00\u4f4d\u7f6e\u53ef\u4ee5\u901a\u8fc7\u540c\u65f6\u5411\u6240\u6709\u7ebf\u7a0b\u5e7f\u64ad\u6570\u636e\u8fdb\u884c\u89e3\u51b3\uff0c\u540c\u6837\u4e0d\u4f1a\u4ea7\u751f bank conflict \u95ee\u9898\u3002 4 \u5b9e\u9a8c\u6b65\u9aa4 4.1 \u57fa\u51c6\u4ee3\u7801 \u5728\u5b9e\u9645\u7684\u5377\u79ef\u8ba1\u7b97\u4e2d\uff0c\u4e00\u6b21\u4f1a\u8fdb\u884c\u591a\u6279(batch)\u7684\u5904\u7406\uff0c\u6bd4\u5982\u4e00\u6b21\u5904\u7406\u591a\u5f20\u56fe\u7247(HxW\u5927\u5c0f)\u3002\u4ee5\u53ca\u540c\u4e00\u4e2a\u5750\u6807\u5177\u6709\u591a\u901a\u9053(channel)\u503c\uff0c\u6bd4\u5982\u56fe\u7247\u91cc\u7684R\u3001G\u3001B\u4e09\u901a\u9053\u3002 batch_size \u548c in_channel \u3001 out_channel \u5b9a\u4e49\u4e8e\u4ee3\u7801\u7684\u5f00\u5934\u3002 in_channel \u5373\u4e3a\u8f93\u5165\u7684\u901a\u9053\u6570\uff0cFilter\uff08\u591a\u901a\u9053\u7684\u5377\u79ef\u6838\uff09\u7684 in_channel \u9700\u8981\u548c\u8f93\u5165\u4fdd\u6301\u4e00\u81f4\u3002\u6bcf\u4e2a Filter \u4e0e\u8f93\u5165\u4ea7\u751f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u8f93\u51fa\u3002 out_channel \u5373\u4e3a\u8f93\u51fa\u7684\u901a\u9053\u6570\uff0c\u5176\u503c\u5b9e\u9645\u4e0a\u5c31\u662f Filter \u7684\u6570\u91cf\uff0c out_channel \u4e2a Filter \u4e0e\u8f93\u5165\u8fdb\u884c\u5377\u79ef\u8fd0\u7b97\uff0c\u4ea7\u751f out_channel \u4e2a\u901a\u9053\u7684\u7ed3\u679c\u3002 \u56fe\u7247\u4e0a\u7ecf\u8fc7\u5377\u79ef\u8ba1\u7b97\uff0c\u8f93\u51fa\u7684\u5c3a\u5bf8\u53d8\u5c0f\u4e86\uff0c\u800c\u6211\u4eec\u7684\u5b9e\u9a8c\u4e2d\u662f\u4e3a\u8f93\u5165\u52a0\u4e0a\u4e86\u503c\u4e3a0\u7684 padding \uff0c\u6240\u4ee5\u8f93\u5165\u548c\u8f93\u51fa\u7684\u4e8c\u7ef4\u5c3a\u5bf8\u662f\u4e00\u81f4\u7684\u3002 \u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u548c\u53d8\u91cf\u540d\u9075\u5faa\u4ee5\u4e0b\u4e60\u60ef\uff1a \u8f93\u5165\u8f93\u51fa\u5f20\u91cf\u7684\u5c3a\u5bf8: size , H , W \u8f93\u5165\u3001\u8f93\u51fa\u5f20\u91cf\u7684\u6279(batch)\u7684\u5927\u5c0f: batch_size , N \u8f93\u5165\u5f20\u91cf\u7684\u901a\u9053\u6570: in_channel , CI \u8f93\u51fa\u5f20\u91cf\u7684\u901a\u9053\u6570: out_channel , CO \u5377\u79ef\u6838\u7684\u5c3a\u5bf8: kernel , KH , KW \u6211\u4eec\u770b\u5230\uff0c\u5377\u79ef\u8fd0\u7b97\u4e2d\u6d89\u53ca\u7684\u4e09\u4e2a\u5f20\u91cf\u90fd\u662f\u56db\u7ef4\u7684\uff0c\u6211\u4eec\u89c4\u5b9a\u5b83\u4eec\u7684\u5f62\u72b6\u5206\u522b\u4e3a\uff1a Input: N x H x W x CI Kernel: KH x KW x CI x CO Output: N x H x W x CO \u5728\u4e0a\u8ff0\u4e8c\u7ef4\u77e9\u9635\u7684\u4e8c\u7ef4\u79bb\u6563\u5377\u79ef\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u6dfb\u52a0\u6279\u548c\u901a\u9053\u4e24\u4e2a\u7ef4\u5ea6\uff0c\u5f97\u5230\u672c\u6b21\u5b9e\u9a8c\u6700\u7ec8\u4e8c\u7ef4\u5377\u79ef\u7684\u8868\u8fbe\u5f0f\u5982\u4e0b: \\[ \\left(f*g\\right)\\left(n,x,y,co\\right)=\\sum_{i=-\\lfloor KH/2\\rfloor}^{\\lfloor KH/2\\rfloor}\\sum_{j=-\\lfloor KW/2\\rfloor}^{\\lfloor KW/2\\rfloor}\\sum_{ci=0}^{CI}f\\left(n,x+i,y+j,ci\\right)g\\left(i,j,ci,co\\right) \\] \u4e8c\u7ef4\u5377\u79ef\u8ba1\u7b97\u7684 CPU \u7248\u672c\u5df2\u5728 conv.cu \u4e2d\u7684 conv2d_cpu_kernel \u7ed9\u51fa\uff0c\u7528\u4ee5\u9a8c\u8bc1\u6b63\u786e\u6027\u3002\u5373\u901a\u8fc7\u6279\u3001\u8f93\u5165\u901a\u9053\u3001\u8f93\u51fa\u901a\u9053\u3001\u5377\u79ef\u6838\u9ad8\u3001\u5377\u79ef\u6838\u5bbd\u7684\u4e94\u5c42\u5faa\u73af\u8f6e\u6d41\u8ba1\u7b97\u7ed3\u679c\u77e9\u9635\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u503c\u3002\u5176\u4e2d\u505a\u4e86 padding \u76840\u586b\u5145\u7b49\u5904\u7406\u3002 \u6ce8\u610f\uff1a \u7531\u4e8e\u6b63\u786e\u6027\u9a8c\u8bc1\u4e2d\u7528\u5230\u4e86 OpenMP\uff0c\u5b83\u81ea\u52a8\u68c0\u6d4b\u5230\u7684 CPU \u6838\u5fc3\u6570\u5e76\u4e0d\u6b63\u786e\uff0c\u53ef\u80fd\u4f1a\u8fdc\u8d85\u51fa aistation \u5b9e\u9645\u5206\u914d\u80fd\u8c03\u7528\u7684\u6838\u5fc3\u6570\uff0c\u5bfc\u81f4\u901f\u5ea6\u5f02\u5e38\u7f13\u6162\u3002\u56e0\u6b64\uff0c\u4f60\u9700\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff1a export OMP_NUM_THREADS = 4 \u57fa\u51c6\u4ee3\u7801\u4e3a\u7a0b\u5e8f\u4e2d\u7684 conv2d_cuda_kernel \u6838\u51fd\u6570\uff0c\u662f\u672a\u7ecf\u4f18\u5316\u7684\u4e94\u5c42\u5faa\u73af\u5d4c\u5957GPU\u5b9e\u73b0\uff0c\u4f60\u53ef\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u8fdb\u884c\u6539\u8fdb\uff0c\u4ea6\u6216\u8005\u91cd\u65b0\u81ea\u5df1\u5b9e\u73b0\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 __global__ void conv2d_cuda_kernel ( const uint8_t * __restrict__ a , const uint8_t * __restrict__ w , uint8_t * __restrict__ b ) { const int i = blockIdx . x * block_size + threadIdx . x ; const int j = blockIdx . y * block_size + threadIdx . y ; if ( i < size && j < size ) { for ( int s = 0 ; s < batch_size ; ++ s ) { for ( int CO = 0 ; CO < out_channel ; ++ CO ) { uint8_t conv = 0 ; // Conv2d for a single pixel, single output channel. for ( int CI = 0 ; CI < in_channel ; ++ CI ) { int x = i - kernel / 2 , y = j - kernel / 2 ; for ( int k = 0 ; k < kernel ; ++ k ) { for ( int l = 0 ; l < kernel ; ++ l ) { if ( ! ( x < 0 || x >= size || y < 0 || y >= size )) { conv += a ( s , x , y , CI ) * w ( k , l , CI , CO ); } y ++ ; } x ++ ; y -= kernel ; } } // Write back to b. b ( s , i , j , CO ) = conv ; } } } } 4.2 Shared Memory \u6b63\u5982\u8bfe\u4e0a\u6240\u8bb2\uff0cGPU \u4e2d\u6709\u4e00\u5757\u5171\u4eab\u5185\u5b58\u88ab\u540c\u4e00\u7ebf\u7a0b\u5757\u4e2d\u7684\u7ebf\u7a0b\u5171\u4eab\uff0c\u5728\u5b58\u50a8\u5c42\u7ea7\u4e2d\uff0cShared Memory \u4e0e L1 Cache \u540c\u7ea7\uff0c\u90e8\u5206 GPU \u67b6\u6784\u4e2d\u8fd8\u53ef\u4ee5\u624b\u52a8\u5206\u914d L1 Cache \u4e0e Shared Memory \u7684\u5927\u5c0f\uff1b\u5229\u7528 Shared Memory \u5c06\u7ebf\u7a0b\u5757\u7684\u5bc6\u96c6\u8bbf\u5b58\u52a0\u901f\u80fd\u591f\u83b7\u5f97\u6781\u4f4e\u7684\u8bbf\u5b58\u5ef6\u8fdf\u4e14\u5927\u5927\u8282\u7701\u5185\u5b58\u5e26\u5bbd\u3002 4.3 Blocking \u53ef\u4ee5\u5bf9\u5927\u77e9\u9635\u8fdb\u884c\u5206\u5757\u8ba1\u7b97\uff0c\u63d0\u9ad8\u8bbf\u5b58\u5c40\u90e8\u6027\u3002\u8fd9\u4e00\u6280\u672f\u5728 lab4 \u4e2d\u4f1a\u8be6\u7ec6\u8bb2\u8ff0\u3002 \u4ee5\u4e0b\u662f\u77e9\u9635\u4e58\u6cd5\u7684\u5206\u5757\u793a\u610f\u56fe\uff0c\u5377\u79ef\u4f18\u5316\u601d\u8def\u53ef\u4ee5\u53c2\u8003\u77e9\u9635\u4e58\u6cd5\u5206\u5757\u601d\u8def\u3002 4.4 Virtual Thread Split \u91cd\u65b0\u7ec4\u7ec7\u7ebf\u7a0b\u7684\u7f16\u53f7\u65b9\u5f0f\u4e0e\u6267\u884c\u987a\u5e8f(\u81ea\u7531\u53d1\u6325)\uff0c\u5c3d\u53ef\u80fd\u7684\u9632\u6b62 bank conflict\uff0c\u6700\u5927\u5316\u5229\u7528\u663e\u5b58\u5e26\u5bbd\u3002 \u4e3a\u4e86\u63d0\u9ad8\u7ebf\u7a0b\u8bfb\u5199\u5e26\u5bbd\uff0cGPU \u4e2d\u7684\u5171\u4eab\u5185\u5b58\u4f1a\u88ab\u5212\u5206\u6210\u82e5\u5e72\u4e2a bank\uff0c\u7406\u60f3\u72b6\u51b5\u4e0b\uff0c\u5404\u4e2a\u7ebf\u7a0b\u540c\u4e00\u65f6\u95f4\u8bbf\u95ee\u7684 bank \u5e94\u8be5\u662f\u4e0d\u540c\u7684\u3002 4.5 Cooperative Fetching \u4e3a\u4e86\u51cf\u5c11\u5355\u4e2a\u7ebf\u7a0b\u7684\u5185\u5b58\u8bbf\u95ee\u91cf\uff0c\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u4e2d\u7684\u7ebf\u7a0b\u5408\u4f5c\u8bbf\u95ee\u6709\u5171\u540c\u4f9d\u8d56\u7684\u90e8\u5206\uff1b\u5171\u4eab\u5185\u5b58\u662f\u6709\u9650\u7684\uff0c\u5c06\u8bbf\u5b58\u91cd\u53e0\u5ea6\u9ad8\u7684\u7ebf\u7a0b\u5b89\u6392\u5728\u5355\u4e2a\u7ebf\u7a0b\u5757\u4e2d\uff0c\u4ece\u5168\u5c40\u5185\u5b58\u4e2d\u52a0\u8f7d\u8bbf\u95ee\u66f4\u5bc6\u96c6\u7684\u6570\u636e\u5230\u5171\u4eab\u5185\u5b58\uff0c\u90fd\u53ef\u4ee5\u63d0\u5347\u7a0b\u5e8f\u6548\u7387\u3002 4.6 Hint & Bonus \u5982\u679c\u7a0b\u5e8f\u9047\u5230\u96be\u4ee5\u89e3\u51b3\u7684\u6b63\u786e\u6027\u95ee\u9898\uff0c\u4e0d\u59a8\u8003\u8651\u4e24\u4e2a\u5173\u952e\u8bcd\uff1a sync \u548c atomic \u3002 \u53e6\u5916\u5728\u6211\u4eec\u672c\u6b21\u5b9e\u9a8c\u63d0\u4f9b\u7684 GPU (RTX 2080Ti) \u4e0a\uff0c\u5305\u542b\u4e00\u4e2a\u53eb\u505a TensorCore \u7684\u786c\u4ef6\uff0c\u5b83\u80fd\u591f\u8fdb\u4e00\u6b65\u52a0\u901f\u5377\u79ef\u7684\u8ba1\u7b97\uff0c \u5728 Cuda 9.0 \u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5185\u5d4c PTX \u6c47\u7f16\u6216\u8005 CUDA \u7684 C++ \u6269\u5c55 nvcuda::wmma \u7684\u65b9\u5f0f \u6765\u663e\u5f0f\u5730\u8c03\u7528Tensor Core\u6765\u8fdb\u884c\u8ba1\u7b97\u3002 Tensor Core \u80fd\u5728\u4e00\u4e2a\u5468\u671f\u5185\u5b8c\u6210\u4e00\u4e2a\u5c0f\u77e9\u9635\u4e58\u6cd5\uff0c\u56e0\u800c\u63d0\u9ad8\u8ba1\u7b97\u6548\u7387\uff0c\u4f46\u662fTensor Core\u5bf9\u4f5c\u77e9\u9635\u4e58\u6cd5\u7684\u4e24\u4e2a\u77e9\u9635\u7684\u5f62\u72b6\u8981\u6c42\u6bd4\u8f83\u9ad8(\u4f8b\u59824x4x4\uff0c8x8x8\u7b49)\uff0c\u4f60\u9700\u8981\u5408\u7406\u5730\u5bf9\u77e9\u9635\u8fdb\u884c\u5207\u5206\u548c\u5bf9 Wrap\u548cBlock \u4e2d\u7684\u7ebf\u7a0b\u8fdb\u884c\u5206\u914d\u6765\u6700\u5927\u5316 Tensor Core \u7684\u8ba1\u7b97\u6027\u80fd\u3002\u4e86\u89e3\u5982\u4f55\u8c03\u7528 Tensor Core\uff0c\u53ef\u4ee5\u67e5\u9605\u6587\u6863\u5c3e\u90e8\u7684\u53c2\u8003\u6587\u732e\u3002 \u4f7f\u7528 Tensor Core \u5b8c\u6210\u672c\u6b21\u5b9e\u9a8c\uff0c\u4f60\u5c06\u4f1a\u83b7\u5f97 Bonus\u3002 5 \u5b9e\u9a8c\u521d\u59cb\u4ee3\u7801 \u8be6\u89c1 starter_code \u3002 6 \u5b9e\u9a8c\u4efb\u52a1\u4e0e\u8981\u6c42 \u5229\u7528\u4ee5\u4e0a\u6280\u672f(\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e)\uff0c\u5728\u57fa\u51c6\u7a0b\u5e8f\u7684\u57fa\u7840\u4e0a\u5b9e\u73b0\u5377\u79ef\u8ba1\u7b97\u7684 GPU \u5b9e\u73b0\u5e76\u4f18\u5316\u4e4b\u3002 \u53ea\u5141\u8bb8\u4fee\u6539\u4e24\u4e2a\u8ba1\u65f6\u70b9(\u4e0d\u542b)\u4e4b\u95f4\u7684\u4ee3\u7801\u53ca Makefile \u6587\u4ef6 \u53ef\u4ee5\u7f16\u5199\u4efb\u610f\u51fd\u6570\uff0c\u4f46\u51fd\u6570\u7684\u8c03\u7528\u6808\u9700\u8981\u80fd\u591f\u56de\u6eaf\u5230\u4e24\u4e2a\u8ba1\u65f6\u70b9\u4e4b\u95f4 \u82e5\u5bf9\u4e0d\u5141\u8bb8\u4fee\u6539\u90e8\u5206\u4ee3\u7801\u6b63\u786e\u6027\u6709\u7591\u95ee\u8bf7\u8054\u7cfb\u52a9\u6559 \u672c\u5b9e\u9a8c\u7684\u76ee\u7684\u662f\u8ba9\u5927\u5bb6\u5b66\u4e60\u5b9e\u8df5\u8bfe\u7a0b\u6559\u6388\u7684 CUDA \u4f18\u5316\u77e5\u8bc6\uff0c\u719f\u6089 GPU \u7f16\u7a0b\u4e0e\u4f18\u5316\uff0c\u638c\u63e1\u9762\u5bf9\u5e38\u89c1\u5e76\u884c\u95ee\u9898\u7684\u8c03\u8bd5\u6280\u5de7\u3002 \u4e0d\u5141\u8bb8\u4f7f\u7528cuDNN\u7b49\u7b97\u5b50\u5e93\u6216\u8005\u4f7f\u7528\u7b2c\u4e09\u65b9\u5de5\u5177\u81ea\u52a8\u751f\u6210\u7684\u4ee3\u7801 \u3002 Note : \u8c03\u8bd5\u65f6\u4e3a\u4f7f\u9519\u8bef\u53ef\u590d\u73b0\uff0c\u53ef\u4ee5\u5c06\u4ee3\u7801\u4e2d\u7684 std::default_random_engine generator(r()); \u6539\u4e3a std::default_random_engine generator; \uff0c\u8fd9\u6837\u6bcf\u6b21\u751f\u6210\u7684\u968f\u673a\u77e9\u9635\u90fd\u4f1a\u662f\u4e00\u81f4\u7684\u3002 7 \u8bc4\u4ef7\u6807\u51c6 \u82e5\u53c2\u8003\u4e92\u8054\u7f51\u8d44\u6599\u6216\u8005\u4ee3\u7801\u8bf7\u5728\u62a5\u544a\u4e2d\u6ce8\u660e\u51fa\u5904\u3002 \u6ce8\u610f\uff1a\u53c2\u8003\u548c\u590d\u5236\u7c98\u8d34\u6539\u53d8\u91cf\u540d\u662f\u5b8c\u5168\u4e24\u56de\u4e8b\uff01\uff01\uff01 \u53ea\u8981\u5b8c\u6210 CUDA \u4ee3\u7801\u7684\u4e00\u5b9a\u4f18\u5316\u4e14\u5f97\u5230\u6b63\u786e\u7ed3\u679c\uff0c\u5c31\u80fd\u53d6\u5f97\u5927\u90e8\u5206\u5206\u6570\u3002 \u5982\u679c\u4f18\u5316\u7ed3\u679c\u4f18\u5f02\uff0c\u76f4\u63a5\u6ee1\u5206\uff08 \u4f60\u6709\u66f4\u597d\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u9f13\u52b1\u5c1d\u8bd5 \uff09\u3002 \u4f18\u5316\u7ed3\u679c\u666e\u901a\uff0c\u6211\u4eec\u5c06\u53c2\u8003\u4f60\u5bf9\u5b9e\u9a8c\u624b\u518c\u4e2d\u63d0\u5230\u7684\u4f18\u5316\u7b56\u7565\u7684\u5c1d\u8bd5\u4e0e\u52aa\u529b\uff08\u62a5\u544a\u4e0e\u4ee3\u7801\uff09\u8fdb\u884c\u7ed9\u5206\u2014\u2014\u82e5\u4f60\u5df2\u7ecf\u5c3d\u529b\u5c1d\u8bd5\u4e86\u624b\u518c\u4e2d\u6240\u6709\u7684\u4f18\u5316\u601d\u8def\uff0c\u4f60\u53ef\u4ee5\u53d6\u5f97\uff0895+\uff09\u7684\u5206\u6570\u3002 \u8bf7\u8ba9\u6211\u4eec\u770b\u5230\u4f60\u7684\u5c1d\u8bd5\uff0c\u5373\u4f7f\u4ee3\u7801\u4e0d\u80fd\u8fd0\u884c\u6216\u8005\u7ed3\u679c\u9519\u8bef\u4e5f\u4e0d\u8981\u7f9e\u6da9\u4e8e\u63d0\u4ea4\uff08\u5426\u5219\u5b9e\u5728\u635e\u4e0d\u8d77\u6765\uff09\uff01 \u53c2\u8003\u6587\u732e NVIDIA Convolutional Layers User's Guide NVIDIA Developer Blog Tips for Optimizing GPU Performance Using Tensor Cores nvcuda::wmma CUDA C++ Extension NVIDIA CUDA C Programming Guide Parallel Thread Execution NVIDIA PTX ISA","title":"Lab3-CUDA \u4f7f\u7528\u57fa\u7840"},{"location":"Lab3-Cuda/#cuda","text":"","title":"\u5b9e\u9a8c\u4e09\uff1aCUDA\u4f7f\u7528\u57fa\u7840"},{"location":"Lab3-Cuda/#1","text":"\u5377\u79ef\uff08 Convolution \uff09\u662f\u4e00\u79cd\u57fa\u672c\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u60f3\u5fc5\u5927\u5bb6\u5728\u5fae\u79ef\u5206\u3001\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1\u7b49\u6570\u5b66\u57fa\u7840\u8bfe\u7a0b\u4e2d\u90fd\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u63a5\u89e6\u8fc7\u3002\u4f5c\u4e3a\u4e00\u79cd\u57fa\u672c\u7684\u6570\u5b66\u8ba1\u7b97\uff0c\u5176\u5728\u56fe\u50cf\u5904\u7406\u3001\u673a\u5668\u5b66\u4e60\u7b49\u9886\u57df\u90fd\u6709\u91cd\u8981\u5e94\u7528\u3002 \u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u4f60\u4f7f\u7528 CUDA \u5b8c\u6210\u4e00\u4e2a GPU \u4e0a\u7684\u4e8c\u7ef4\u79bb\u6563\u5377\u79ef\u3002 \u4f60\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u4f7f\u7528 CUDA Runtime API \u6216\u8005 CUDA Driver API \u8fdb\u884c\u7f16\u7a0b\uff0c\u4f46\u4e0d\u80fd\u8c03\u7528\u9ad8\u6027\u80fd\u8ba1\u7b97\u7684Library\u4ee3\u66ff\u4f60\u81ea\u5df1\u5b9e\u73b0\u5377\u79ef\u3002\u672c\u5b9e\u9a8c\u63a8\u8350\u91c7\u7528 CUDA Runtime API\uff0c\u4f7f\u7528\u66f4\u52a0\u7b80\u5355\u65b9\u4fbf\uff0c\u76f8\u8f83Driver\u51e0\u4e4e\u4e0d\u635f\u5931\u6027\u80fd\u3002","title":"1 \u5b9e\u9a8c\u7b80\u4ecb"},{"location":"Lab3-Cuda/#2","text":"","title":"2 \u5b9e\u9a8c\u73af\u5883"},{"location":"Lab3-Cuda/#20","text":"\u7531\u4e8e\u767b\u5f55\u8282\u70b9\uff08H248\uff09\u914d\u7f6e\u5f88\u4f4e\uff0c\u7981\u6b62\u5728\u4e0a\u9762\u4f7f\u7528 vscode-remote \u7b49\u5927\u91cf\u6d88\u8017\u8d44\u6e90\u7684\u7a0b\u5e8f","title":"2.0 \u8b66\u544a"},{"location":"Lab3-Cuda/#21","text":". /opt/spack/share/spack/setup-env.sh spack load cuda@11.5.0 # \u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u522b\u7684 cuda \u7248\u672c","title":"2.1 \u7f16\u8bd1\u5668\u52a0\u8f7d"},{"location":"Lab3-Cuda/#22","text":"\u5b9e\u9a8c\u73af\u5883\u4e0e Lab 4 \u4e00\u81f4\uff0c\u8bf7\u4f7f\u7528 GPU \u8fd9\u4e2a Partition\uff0c\u4e3a\u9632\u6b62\u770b\u5230\u7684 GPU \u6570\u91cf\u4e0d\u6b63\u5e38\uff0c\u8bf7\u4f7f\u7528\u4e0b\u5217\u547d\u4ee4\u7533\u8bf7\u8282\u70b9\uff1a srun -p GPU -N 1 --gres = gpu:1 --cpus-per-task = 16 --pty bash","title":"2.2 \u8fd0\u884c"},{"location":"Lab3-Cuda/#23-profile","text":"Nsight Compute \u5728 /opt/NVIDIA-Nsight-Compute-2022.2 \u4e0b Nsight System \u5728 spack load cudnn \u540e\u76f4\u63a5\u4f7f\u7528 nsys \u5373\u53ef","title":"2.3 Profile"},{"location":"Lab3-Cuda/#3","text":"\u8be5\u90e8\u5206\u7b80\u8981\u4ecb\u7ecd\u548c\u5b9e\u9a8c\u76f8\u5173\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u4e3a\u65b9\u4fbf\u7406\u89e3\uff0c\u4e0d\u4fdd\u8bc1\u6570\u5b66\u4e0a\u7684\u4e25\u8c28\u6027\u3002","title":"3 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd"},{"location":"Lab3-Cuda/#31-tensor","text":"\u5f20\u91cf\u6982\u5ff5\u662f\u77e2\u91cf\u6982\u5ff5\u7684\u63a8\u5e7f\uff0c\u77e2\u91cf\u662f\u4e00\u9636\u5f20\u91cf\u3002\u5f20\u91cf\u662f\u4e00\u4e2a\u53ef\u7528\u6765\u8868\u793a\u5728\u4e00\u4e9b\u77e2\u91cf\u3001\u6807\u91cf\u548c\u5176\u4ed6\u5f20\u91cf\u4e4b\u95f4\u7684\u7ebf\u6027\u5173\u7cfb\u7684\u591a\u7ebf\u6027\u51fd\u6570\u3002 \u540c\u6784\u610f\u4e49\u4e0b\uff0c\u7b2c\u96f6\u9636\u5f20\u91cf(r = 0)\u4e3a\u6807\u91cf(Scalar)\uff0c\u7b2c\u4e00\u9636\u5f20\u91cf(r = 1)\u4e3a\u5411\u91cf (Vector)\uff0c\u7b2c\u4e8c\u9636\u5f20\u91cf(r = 2)\u5219\u4e3a\u77e9\u9635(Matrix)\u3002 \u5b9e\u9a8c\u4e2d\u7684\u5377\u79ef\u8fd0\u7b97\u672c\u5b9e\u9a8c\u6d89\u53ca\u4e24\u4e2a\u56db\u7ef4\u5f20\u91cf\u7684\u8fd0\u7b97\u3002","title":"3.1 \u5f20\u91cf(tensor)"},{"location":"Lab3-Cuda/#32-convolution","text":"\u672c\u5b9e\u9a8c\u53ea\u6d89\u53ca\u79bb\u6563\u8fd0\u7b97\uff0c\u8fde\u7eed\u5f62\u5f0f\u7684\u5377\u79ef\u4e0d\u505a\u4ecb\u7ecd\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u3002","title":"3.2 \u5377\u79ef(convolution)"},{"location":"Lab3-Cuda/#321","text":"\u5b9a\u4e49 \\(\\left(f*g\\right)\\left(n\\right)\\) \u4e3a\u51fd\u6570 \\(f\\) \u4e0e \\(g\\) \u7684\u5377\u79ef \\[ \\left(f*g\\right)\\left(n\\right)=\\Sigma_{t=-\\infty}^{+\\infty}f\\left(t\\right)g\\left(n-t\\right) \\] \u51fd\u6570 \\(f\\) \u548c \\(g\\) \u5b9a\u4e49\u57df\u53ef\u4ee5\u4e0d\u662f\u6240\u6709\u6574\u6570\uff0c\u4fee\u6539\u4e0a\u5f0f\u4e2d \\(t\\) \u7684\u904d\u5386\u8303\u56f4\u53ef\u5f97\u5230\u65b0\u7684\u5b9a\u4e49\uff1b\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u5b9a\u4e49\u8d85\u51fa\u5b9a\u4e49\u57df\u7684\u51fd\u6570\u503c\u89c6\u4e3a 0 \uff0c\u53ef\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e24\u4e2a\u51fd\u6570\u7684\u5377\u79ef\u7ed3\u679c\u4ecd\u662f\u51fd\u6570\u3002 \u53ef\u4ee5\u5f62\u8c61\u5730\u7406\u89e3\u4e3a\u6cbf\u7740\u4e0d\u65ad\u79fb\u52a8\u7684 \\(x+y=n\\) \u76f4\u7ebf\uff0c\u5c06\u4e24\u4e2a\u51fd\u6570\u5377\u6210\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\uff0c\u6bcf\u6761\u76f4\u7ebf\u5bf9\u5e94\u65b0\u51fd\u6570\u7684\u4e00\u7ec4\u5bf9\u5e94\u5173\u7cfb\u3002","title":"3.2.1 \u4e00\u7ef4\u79bb\u6563\u5377\u79ef"},{"location":"Lab3-Cuda/#322","text":"\u4e8c\u7ef4\u79bb\u6563\u5377\u79ef\u53ef\u4ee5\u89c6\u4e3a\u4e00\u7ef4\u79bb\u6563\u5377\u79ef\u7684\u63a8\u5e7f\u3002 \\[ \\left(f*g\\right)\\left(n,m\\right)=\\Sigma_{i=-\\infty}^{+\\infty}\\Sigma_{j=-\\infty}^{+\\infty}f\\left(i,j\\right)g\\left(n-i,m-j\\right) \\] \u6211\u4eec\u5728\u5b9e\u9a8c\u4e2d\u7684\u5b9a\u4e49\u5377\u79ef\u4e0e\u6570\u5b66\u4e0a\u7684\u5b9a\u4e49\u5b58\u5728\u5dee\u522b\uff0c\u6211\u4eec\u8ba4\u4e3a\u5176\u5728\u5e7f\u4e49\u4e0a\u5c5e\u4e8e\u4e8c\u7ef4\u79bb\u6563\u5377\u79ef\u3002 \u7b80\u5316\u8d77\u89c1\uff0c\u8003\u8651\u4e24\u4e2a\u65b9\u9635 \\(f\\) \u548c \\(g\\) \uff0c \\(f\\) \u7684\u5927\u5c0f\u4e3a \\(a*a\\) \uff0c \\(g\\) \u7684\u5927\u5c0f\u4e3a \\(b*b\\) \uff0c\u6211\u4eec\u5c06 \\(g\\) \u79f0\u4e3a\u6838\uff08kernel\uff09\u51fd\u6570\uff0c\u4e14\u8981\u6c42 \\(b\\) \u4e3a\u5947\u6570\u3002 \\(f\\) \u884c\u5217\u4e0b\u6807\u5747\u4ece 0 \u5f00\u59cb\uff0c \\(g\\) \u7684\u884c\u5217\u4e0b\u6807\u5219\u4ece \\(-\\lfloor b/2\\rfloor\\) \u5230 \\(+\\lfloor b/2\\rfloor\\) \uff08\u5305\u62ec0\uff09 \uff0c\u6b64\u65f6\u5377\u79ef\u7684\u7ed3\u679c\u53ef\u4ee5\u5b9a\u4e49\u4e3a: $$ \\left(f*g\\right)\\left(n,m\\right)=\\Sigma_{i=-\\lfloor b/2\\rfloor}^{+\\lfloor b/2\\rfloor}\\Sigma_{j=-\\lfloor b/2\\rfloor}^{+\\lfloor b/2\\rfloor}f\\left(n+i,m+j\\right)g\\left(i,j\\right) $$ \u82e5 \\(f\\) \u7684\u4e0b\u6807\u8303\u56f4\u8d85\u51fa\u5b9a\u4e49\u8303\u56f4\uff0c\u672c\u5b9e\u9a8c\u7684\u65b9\u5f0f\u662f\u586b\u5145\u4e00\u4e2a\u9ed8\u8ba4\u503c (0) \u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u5377\u79ef\u7ed3\u679c\u4e0e \\(f\\) \u5927\u5c0f\u76f8\u540c\u3002","title":"3.2.2 \u4e8c\u7ef4\u79bb\u6563\u5377\u79ef"},{"location":"Lab3-Cuda/#33-bank","text":"Bank \u7684\u6982\u5ff5\u5728\u4e0d\u540c\u79cd\u7c7b\u7684\u5b58\u50a8\u5668\u4e2d\u90fd\u6709\u6d89\u53ca\uff0c\u5176\u662f\u4e3a\u4e86\u89e3\u51b3\u5b58\u50a8\u5668\u5e76\u884c\u8bbf\u95ee\u7684\u95ee\u9898\u800c\u63d0\u51fa\u7684\u3002\u4ee5\u4e00\u4e2a\u5177\u67094\u4e2a bank \u7684\u5b58\u50a8\u5668\u4e3a\u4f8b\uff0c\u6211\u4eec\u5f80\u5e38\u5728\u7f16\u7a0b\u65f6\u8ba4\u4e3a\u903b\u8f91\u4e0a\u8ba4\u4e3a\u8fde\u7eed\u7684\u5185\u5b58\u57284\u4e2a bank \u4e2d\u7684\u7269\u7406\u5b58\u50a8\u65b9\u5f0f\u5982\u4e0b\u56fe\u6240\u793a\uff1a Bank 0 Bank 1 Bank 2 Bank 3 MEM[0] MEM[1] MEM[2] MEM[3] MEM[4] MEM[5] MEM[6] MEM[7] MEM[8] MEM[9] MEM[10] MEM[11] ... ... ... ... \u4e8e\u662f\u5728\u540c\u4e00\u65f6\u95f4\u6211\u4eec\u8bbf\u95ee\u8bf8\u5982 MEM[0], MEM[9], MEM[6], MEM[3] \u7684\u5b58\u50a8\u7a7a\u95f4\u5c31\u4e0d\u4f1a\u4ea7\u751f\u51b2\u7a81\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u7684\u6548\u7387\uff1b\u5426\u5219\uff0c\u6700\u5dee\u7684\u60c5\u51b5\u4e0b\uff0c\u82e5\u8fde\u7eed\u7684\u8bbf\u5b58\u5e8f\u5217\u5747\u4f4d\u4e8e\u540c\u4e00 bank\uff0c\u5219\u6548\u7387\u7b49\u4e8e\u4e32\u884c\u7684 4 \u6b21\u5b58\u50a8\u8bbf\u95ee\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u82e5\u5b58\u50a8\u5668\u7684 bank \u8fdb\u884c\u8fc7\u9488\u5bf9\u6027\u7684\u4f18\u5316\uff0c\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00 bank \u7684\u540c\u4e00\u4f4d\u7f6e\u53ef\u4ee5\u901a\u8fc7\u540c\u65f6\u5411\u6240\u6709\u7ebf\u7a0b\u5e7f\u64ad\u6570\u636e\u8fdb\u884c\u89e3\u51b3\uff0c\u540c\u6837\u4e0d\u4f1a\u4ea7\u751f bank conflict \u95ee\u9898\u3002","title":"3.3 Bank"},{"location":"Lab3-Cuda/#4","text":"","title":"4 \u5b9e\u9a8c\u6b65\u9aa4"},{"location":"Lab3-Cuda/#41","text":"\u5728\u5b9e\u9645\u7684\u5377\u79ef\u8ba1\u7b97\u4e2d\uff0c\u4e00\u6b21\u4f1a\u8fdb\u884c\u591a\u6279(batch)\u7684\u5904\u7406\uff0c\u6bd4\u5982\u4e00\u6b21\u5904\u7406\u591a\u5f20\u56fe\u7247(HxW\u5927\u5c0f)\u3002\u4ee5\u53ca\u540c\u4e00\u4e2a\u5750\u6807\u5177\u6709\u591a\u901a\u9053(channel)\u503c\uff0c\u6bd4\u5982\u56fe\u7247\u91cc\u7684R\u3001G\u3001B\u4e09\u901a\u9053\u3002 batch_size \u548c in_channel \u3001 out_channel \u5b9a\u4e49\u4e8e\u4ee3\u7801\u7684\u5f00\u5934\u3002 in_channel \u5373\u4e3a\u8f93\u5165\u7684\u901a\u9053\u6570\uff0cFilter\uff08\u591a\u901a\u9053\u7684\u5377\u79ef\u6838\uff09\u7684 in_channel \u9700\u8981\u548c\u8f93\u5165\u4fdd\u6301\u4e00\u81f4\u3002\u6bcf\u4e2a Filter \u4e0e\u8f93\u5165\u4ea7\u751f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u8f93\u51fa\u3002 out_channel \u5373\u4e3a\u8f93\u51fa\u7684\u901a\u9053\u6570\uff0c\u5176\u503c\u5b9e\u9645\u4e0a\u5c31\u662f Filter \u7684\u6570\u91cf\uff0c out_channel \u4e2a Filter \u4e0e\u8f93\u5165\u8fdb\u884c\u5377\u79ef\u8fd0\u7b97\uff0c\u4ea7\u751f out_channel \u4e2a\u901a\u9053\u7684\u7ed3\u679c\u3002 \u56fe\u7247\u4e0a\u7ecf\u8fc7\u5377\u79ef\u8ba1\u7b97\uff0c\u8f93\u51fa\u7684\u5c3a\u5bf8\u53d8\u5c0f\u4e86\uff0c\u800c\u6211\u4eec\u7684\u5b9e\u9a8c\u4e2d\u662f\u4e3a\u8f93\u5165\u52a0\u4e0a\u4e86\u503c\u4e3a0\u7684 padding \uff0c\u6240\u4ee5\u8f93\u5165\u548c\u8f93\u51fa\u7684\u4e8c\u7ef4\u5c3a\u5bf8\u662f\u4e00\u81f4\u7684\u3002 \u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u548c\u53d8\u91cf\u540d\u9075\u5faa\u4ee5\u4e0b\u4e60\u60ef\uff1a \u8f93\u5165\u8f93\u51fa\u5f20\u91cf\u7684\u5c3a\u5bf8: size , H , W \u8f93\u5165\u3001\u8f93\u51fa\u5f20\u91cf\u7684\u6279(batch)\u7684\u5927\u5c0f: batch_size , N \u8f93\u5165\u5f20\u91cf\u7684\u901a\u9053\u6570: in_channel , CI \u8f93\u51fa\u5f20\u91cf\u7684\u901a\u9053\u6570: out_channel , CO \u5377\u79ef\u6838\u7684\u5c3a\u5bf8: kernel , KH , KW \u6211\u4eec\u770b\u5230\uff0c\u5377\u79ef\u8fd0\u7b97\u4e2d\u6d89\u53ca\u7684\u4e09\u4e2a\u5f20\u91cf\u90fd\u662f\u56db\u7ef4\u7684\uff0c\u6211\u4eec\u89c4\u5b9a\u5b83\u4eec\u7684\u5f62\u72b6\u5206\u522b\u4e3a\uff1a Input: N x H x W x CI Kernel: KH x KW x CI x CO Output: N x H x W x CO \u5728\u4e0a\u8ff0\u4e8c\u7ef4\u77e9\u9635\u7684\u4e8c\u7ef4\u79bb\u6563\u5377\u79ef\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u6dfb\u52a0\u6279\u548c\u901a\u9053\u4e24\u4e2a\u7ef4\u5ea6\uff0c\u5f97\u5230\u672c\u6b21\u5b9e\u9a8c\u6700\u7ec8\u4e8c\u7ef4\u5377\u79ef\u7684\u8868\u8fbe\u5f0f\u5982\u4e0b: \\[ \\left(f*g\\right)\\left(n,x,y,co\\right)=\\sum_{i=-\\lfloor KH/2\\rfloor}^{\\lfloor KH/2\\rfloor}\\sum_{j=-\\lfloor KW/2\\rfloor}^{\\lfloor KW/2\\rfloor}\\sum_{ci=0}^{CI}f\\left(n,x+i,y+j,ci\\right)g\\left(i,j,ci,co\\right) \\] \u4e8c\u7ef4\u5377\u79ef\u8ba1\u7b97\u7684 CPU \u7248\u672c\u5df2\u5728 conv.cu \u4e2d\u7684 conv2d_cpu_kernel \u7ed9\u51fa\uff0c\u7528\u4ee5\u9a8c\u8bc1\u6b63\u786e\u6027\u3002\u5373\u901a\u8fc7\u6279\u3001\u8f93\u5165\u901a\u9053\u3001\u8f93\u51fa\u901a\u9053\u3001\u5377\u79ef\u6838\u9ad8\u3001\u5377\u79ef\u6838\u5bbd\u7684\u4e94\u5c42\u5faa\u73af\u8f6e\u6d41\u8ba1\u7b97\u7ed3\u679c\u77e9\u9635\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u503c\u3002\u5176\u4e2d\u505a\u4e86 padding \u76840\u586b\u5145\u7b49\u5904\u7406\u3002 \u6ce8\u610f\uff1a \u7531\u4e8e\u6b63\u786e\u6027\u9a8c\u8bc1\u4e2d\u7528\u5230\u4e86 OpenMP\uff0c\u5b83\u81ea\u52a8\u68c0\u6d4b\u5230\u7684 CPU \u6838\u5fc3\u6570\u5e76\u4e0d\u6b63\u786e\uff0c\u53ef\u80fd\u4f1a\u8fdc\u8d85\u51fa aistation \u5b9e\u9645\u5206\u914d\u80fd\u8c03\u7528\u7684\u6838\u5fc3\u6570\uff0c\u5bfc\u81f4\u901f\u5ea6\u5f02\u5e38\u7f13\u6162\u3002\u56e0\u6b64\uff0c\u4f60\u9700\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff1a export OMP_NUM_THREADS = 4 \u57fa\u51c6\u4ee3\u7801\u4e3a\u7a0b\u5e8f\u4e2d\u7684 conv2d_cuda_kernel \u6838\u51fd\u6570\uff0c\u662f\u672a\u7ecf\u4f18\u5316\u7684\u4e94\u5c42\u5faa\u73af\u5d4c\u5957GPU\u5b9e\u73b0\uff0c\u4f60\u53ef\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u8fdb\u884c\u6539\u8fdb\uff0c\u4ea6\u6216\u8005\u91cd\u65b0\u81ea\u5df1\u5b9e\u73b0\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 __global__ void conv2d_cuda_kernel ( const uint8_t * __restrict__ a , const uint8_t * __restrict__ w , uint8_t * __restrict__ b ) { const int i = blockIdx . x * block_size + threadIdx . x ; const int j = blockIdx . y * block_size + threadIdx . y ; if ( i < size && j < size ) { for ( int s = 0 ; s < batch_size ; ++ s ) { for ( int CO = 0 ; CO < out_channel ; ++ CO ) { uint8_t conv = 0 ; // Conv2d for a single pixel, single output channel. for ( int CI = 0 ; CI < in_channel ; ++ CI ) { int x = i - kernel / 2 , y = j - kernel / 2 ; for ( int k = 0 ; k < kernel ; ++ k ) { for ( int l = 0 ; l < kernel ; ++ l ) { if ( ! ( x < 0 || x >= size || y < 0 || y >= size )) { conv += a ( s , x , y , CI ) * w ( k , l , CI , CO ); } y ++ ; } x ++ ; y -= kernel ; } } // Write back to b. b ( s , i , j , CO ) = conv ; } } } }","title":"4.1 \u57fa\u51c6\u4ee3\u7801"},{"location":"Lab3-Cuda/#42-shared-memory","text":"\u6b63\u5982\u8bfe\u4e0a\u6240\u8bb2\uff0cGPU \u4e2d\u6709\u4e00\u5757\u5171\u4eab\u5185\u5b58\u88ab\u540c\u4e00\u7ebf\u7a0b\u5757\u4e2d\u7684\u7ebf\u7a0b\u5171\u4eab\uff0c\u5728\u5b58\u50a8\u5c42\u7ea7\u4e2d\uff0cShared Memory \u4e0e L1 Cache \u540c\u7ea7\uff0c\u90e8\u5206 GPU \u67b6\u6784\u4e2d\u8fd8\u53ef\u4ee5\u624b\u52a8\u5206\u914d L1 Cache \u4e0e Shared Memory \u7684\u5927\u5c0f\uff1b\u5229\u7528 Shared Memory \u5c06\u7ebf\u7a0b\u5757\u7684\u5bc6\u96c6\u8bbf\u5b58\u52a0\u901f\u80fd\u591f\u83b7\u5f97\u6781\u4f4e\u7684\u8bbf\u5b58\u5ef6\u8fdf\u4e14\u5927\u5927\u8282\u7701\u5185\u5b58\u5e26\u5bbd\u3002","title":"4.2 Shared Memory"},{"location":"Lab3-Cuda/#43-blocking","text":"\u53ef\u4ee5\u5bf9\u5927\u77e9\u9635\u8fdb\u884c\u5206\u5757\u8ba1\u7b97\uff0c\u63d0\u9ad8\u8bbf\u5b58\u5c40\u90e8\u6027\u3002\u8fd9\u4e00\u6280\u672f\u5728 lab4 \u4e2d\u4f1a\u8be6\u7ec6\u8bb2\u8ff0\u3002 \u4ee5\u4e0b\u662f\u77e9\u9635\u4e58\u6cd5\u7684\u5206\u5757\u793a\u610f\u56fe\uff0c\u5377\u79ef\u4f18\u5316\u601d\u8def\u53ef\u4ee5\u53c2\u8003\u77e9\u9635\u4e58\u6cd5\u5206\u5757\u601d\u8def\u3002","title":"4.3 Blocking"},{"location":"Lab3-Cuda/#44-virtual-thread-split","text":"\u91cd\u65b0\u7ec4\u7ec7\u7ebf\u7a0b\u7684\u7f16\u53f7\u65b9\u5f0f\u4e0e\u6267\u884c\u987a\u5e8f(\u81ea\u7531\u53d1\u6325)\uff0c\u5c3d\u53ef\u80fd\u7684\u9632\u6b62 bank conflict\uff0c\u6700\u5927\u5316\u5229\u7528\u663e\u5b58\u5e26\u5bbd\u3002 \u4e3a\u4e86\u63d0\u9ad8\u7ebf\u7a0b\u8bfb\u5199\u5e26\u5bbd\uff0cGPU \u4e2d\u7684\u5171\u4eab\u5185\u5b58\u4f1a\u88ab\u5212\u5206\u6210\u82e5\u5e72\u4e2a bank\uff0c\u7406\u60f3\u72b6\u51b5\u4e0b\uff0c\u5404\u4e2a\u7ebf\u7a0b\u540c\u4e00\u65f6\u95f4\u8bbf\u95ee\u7684 bank \u5e94\u8be5\u662f\u4e0d\u540c\u7684\u3002","title":"4.4 Virtual Thread Split"},{"location":"Lab3-Cuda/#45-cooperative-fetching","text":"\u4e3a\u4e86\u51cf\u5c11\u5355\u4e2a\u7ebf\u7a0b\u7684\u5185\u5b58\u8bbf\u95ee\u91cf\uff0c\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u4e2d\u7684\u7ebf\u7a0b\u5408\u4f5c\u8bbf\u95ee\u6709\u5171\u540c\u4f9d\u8d56\u7684\u90e8\u5206\uff1b\u5171\u4eab\u5185\u5b58\u662f\u6709\u9650\u7684\uff0c\u5c06\u8bbf\u5b58\u91cd\u53e0\u5ea6\u9ad8\u7684\u7ebf\u7a0b\u5b89\u6392\u5728\u5355\u4e2a\u7ebf\u7a0b\u5757\u4e2d\uff0c\u4ece\u5168\u5c40\u5185\u5b58\u4e2d\u52a0\u8f7d\u8bbf\u95ee\u66f4\u5bc6\u96c6\u7684\u6570\u636e\u5230\u5171\u4eab\u5185\u5b58\uff0c\u90fd\u53ef\u4ee5\u63d0\u5347\u7a0b\u5e8f\u6548\u7387\u3002","title":"4.5 Cooperative Fetching"},{"location":"Lab3-Cuda/#46-hint-bonus","text":"\u5982\u679c\u7a0b\u5e8f\u9047\u5230\u96be\u4ee5\u89e3\u51b3\u7684\u6b63\u786e\u6027\u95ee\u9898\uff0c\u4e0d\u59a8\u8003\u8651\u4e24\u4e2a\u5173\u952e\u8bcd\uff1a sync \u548c atomic \u3002 \u53e6\u5916\u5728\u6211\u4eec\u672c\u6b21\u5b9e\u9a8c\u63d0\u4f9b\u7684 GPU (RTX 2080Ti) \u4e0a\uff0c\u5305\u542b\u4e00\u4e2a\u53eb\u505a TensorCore \u7684\u786c\u4ef6\uff0c\u5b83\u80fd\u591f\u8fdb\u4e00\u6b65\u52a0\u901f\u5377\u79ef\u7684\u8ba1\u7b97\uff0c \u5728 Cuda 9.0 \u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5185\u5d4c PTX \u6c47\u7f16\u6216\u8005 CUDA \u7684 C++ \u6269\u5c55 nvcuda::wmma \u7684\u65b9\u5f0f \u6765\u663e\u5f0f\u5730\u8c03\u7528Tensor Core\u6765\u8fdb\u884c\u8ba1\u7b97\u3002 Tensor Core \u80fd\u5728\u4e00\u4e2a\u5468\u671f\u5185\u5b8c\u6210\u4e00\u4e2a\u5c0f\u77e9\u9635\u4e58\u6cd5\uff0c\u56e0\u800c\u63d0\u9ad8\u8ba1\u7b97\u6548\u7387\uff0c\u4f46\u662fTensor Core\u5bf9\u4f5c\u77e9\u9635\u4e58\u6cd5\u7684\u4e24\u4e2a\u77e9\u9635\u7684\u5f62\u72b6\u8981\u6c42\u6bd4\u8f83\u9ad8(\u4f8b\u59824x4x4\uff0c8x8x8\u7b49)\uff0c\u4f60\u9700\u8981\u5408\u7406\u5730\u5bf9\u77e9\u9635\u8fdb\u884c\u5207\u5206\u548c\u5bf9 Wrap\u548cBlock \u4e2d\u7684\u7ebf\u7a0b\u8fdb\u884c\u5206\u914d\u6765\u6700\u5927\u5316 Tensor Core \u7684\u8ba1\u7b97\u6027\u80fd\u3002\u4e86\u89e3\u5982\u4f55\u8c03\u7528 Tensor Core\uff0c\u53ef\u4ee5\u67e5\u9605\u6587\u6863\u5c3e\u90e8\u7684\u53c2\u8003\u6587\u732e\u3002 \u4f7f\u7528 Tensor Core \u5b8c\u6210\u672c\u6b21\u5b9e\u9a8c\uff0c\u4f60\u5c06\u4f1a\u83b7\u5f97 Bonus\u3002","title":"4.6 Hint &amp; Bonus"},{"location":"Lab3-Cuda/#5","text":"\u8be6\u89c1 starter_code \u3002","title":"5 \u5b9e\u9a8c\u521d\u59cb\u4ee3\u7801"},{"location":"Lab3-Cuda/#6","text":"\u5229\u7528\u4ee5\u4e0a\u6280\u672f(\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e)\uff0c\u5728\u57fa\u51c6\u7a0b\u5e8f\u7684\u57fa\u7840\u4e0a\u5b9e\u73b0\u5377\u79ef\u8ba1\u7b97\u7684 GPU \u5b9e\u73b0\u5e76\u4f18\u5316\u4e4b\u3002 \u53ea\u5141\u8bb8\u4fee\u6539\u4e24\u4e2a\u8ba1\u65f6\u70b9(\u4e0d\u542b)\u4e4b\u95f4\u7684\u4ee3\u7801\u53ca Makefile \u6587\u4ef6 \u53ef\u4ee5\u7f16\u5199\u4efb\u610f\u51fd\u6570\uff0c\u4f46\u51fd\u6570\u7684\u8c03\u7528\u6808\u9700\u8981\u80fd\u591f\u56de\u6eaf\u5230\u4e24\u4e2a\u8ba1\u65f6\u70b9\u4e4b\u95f4 \u82e5\u5bf9\u4e0d\u5141\u8bb8\u4fee\u6539\u90e8\u5206\u4ee3\u7801\u6b63\u786e\u6027\u6709\u7591\u95ee\u8bf7\u8054\u7cfb\u52a9\u6559 \u672c\u5b9e\u9a8c\u7684\u76ee\u7684\u662f\u8ba9\u5927\u5bb6\u5b66\u4e60\u5b9e\u8df5\u8bfe\u7a0b\u6559\u6388\u7684 CUDA \u4f18\u5316\u77e5\u8bc6\uff0c\u719f\u6089 GPU \u7f16\u7a0b\u4e0e\u4f18\u5316\uff0c\u638c\u63e1\u9762\u5bf9\u5e38\u89c1\u5e76\u884c\u95ee\u9898\u7684\u8c03\u8bd5\u6280\u5de7\u3002 \u4e0d\u5141\u8bb8\u4f7f\u7528cuDNN\u7b49\u7b97\u5b50\u5e93\u6216\u8005\u4f7f\u7528\u7b2c\u4e09\u65b9\u5de5\u5177\u81ea\u52a8\u751f\u6210\u7684\u4ee3\u7801 \u3002 Note : \u8c03\u8bd5\u65f6\u4e3a\u4f7f\u9519\u8bef\u53ef\u590d\u73b0\uff0c\u53ef\u4ee5\u5c06\u4ee3\u7801\u4e2d\u7684 std::default_random_engine generator(r()); \u6539\u4e3a std::default_random_engine generator; \uff0c\u8fd9\u6837\u6bcf\u6b21\u751f\u6210\u7684\u968f\u673a\u77e9\u9635\u90fd\u4f1a\u662f\u4e00\u81f4\u7684\u3002","title":"6 \u5b9e\u9a8c\u4efb\u52a1\u4e0e\u8981\u6c42"},{"location":"Lab3-Cuda/#7","text":"\u82e5\u53c2\u8003\u4e92\u8054\u7f51\u8d44\u6599\u6216\u8005\u4ee3\u7801\u8bf7\u5728\u62a5\u544a\u4e2d\u6ce8\u660e\u51fa\u5904\u3002 \u6ce8\u610f\uff1a\u53c2\u8003\u548c\u590d\u5236\u7c98\u8d34\u6539\u53d8\u91cf\u540d\u662f\u5b8c\u5168\u4e24\u56de\u4e8b\uff01\uff01\uff01 \u53ea\u8981\u5b8c\u6210 CUDA \u4ee3\u7801\u7684\u4e00\u5b9a\u4f18\u5316\u4e14\u5f97\u5230\u6b63\u786e\u7ed3\u679c\uff0c\u5c31\u80fd\u53d6\u5f97\u5927\u90e8\u5206\u5206\u6570\u3002 \u5982\u679c\u4f18\u5316\u7ed3\u679c\u4f18\u5f02\uff0c\u76f4\u63a5\u6ee1\u5206\uff08 \u4f60\u6709\u66f4\u597d\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u9f13\u52b1\u5c1d\u8bd5 \uff09\u3002 \u4f18\u5316\u7ed3\u679c\u666e\u901a\uff0c\u6211\u4eec\u5c06\u53c2\u8003\u4f60\u5bf9\u5b9e\u9a8c\u624b\u518c\u4e2d\u63d0\u5230\u7684\u4f18\u5316\u7b56\u7565\u7684\u5c1d\u8bd5\u4e0e\u52aa\u529b\uff08\u62a5\u544a\u4e0e\u4ee3\u7801\uff09\u8fdb\u884c\u7ed9\u5206\u2014\u2014\u82e5\u4f60\u5df2\u7ecf\u5c3d\u529b\u5c1d\u8bd5\u4e86\u624b\u518c\u4e2d\u6240\u6709\u7684\u4f18\u5316\u601d\u8def\uff0c\u4f60\u53ef\u4ee5\u53d6\u5f97\uff0895+\uff09\u7684\u5206\u6570\u3002 \u8bf7\u8ba9\u6211\u4eec\u770b\u5230\u4f60\u7684\u5c1d\u8bd5\uff0c\u5373\u4f7f\u4ee3\u7801\u4e0d\u80fd\u8fd0\u884c\u6216\u8005\u7ed3\u679c\u9519\u8bef\u4e5f\u4e0d\u8981\u7f9e\u6da9\u4e8e\u63d0\u4ea4\uff08\u5426\u5219\u5b9e\u5728\u635e\u4e0d\u8d77\u6765\uff09\uff01","title":"7 \u8bc4\u4ef7\u6807\u51c6"},{"location":"Lab3-Cuda/#_1","text":"NVIDIA Convolutional Layers User's Guide NVIDIA Developer Blog Tips for Optimizing GPU Performance Using Tensor Cores nvcuda::wmma CUDA C++ Extension NVIDIA CUDA C Programming Guide Parallel Thread Execution NVIDIA PTX ISA","title":"\u53c2\u8003\u6587\u732e"},{"location":"Lab4-Gemm/","text":"\u5b9e\u9a8c\u56db\uff1aGEMM \u901a\u7528\u77e9\u9635\u4e58\u6cd5 1 \u5b9e\u9a8c\u7b80\u4ecb BLAS \uff08\u82f1\u8bed\uff1a Basic Linear Algebra Subprograms \uff0c\u57fa\u7840\u7ebf\u6027\u4ee3\u6570\u7a0b\u5e8f\u96c6\uff09\u662f\u4e00\u4e2a \u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3 \uff08API\uff09\u6807\u51c6\uff0c\u7528\u4ee5\u89c4\u8303\u53d1\u5e03\u57fa\u7840\u7ebf\u6027\u4ee3\u6570\u64cd\u4f5c\u7684\u6570\u503c\u5e93\uff08\u5982\u77e2\u91cf\u6216\u77e9\u9635\u4e58\u6cd5\uff09\u3002\u8be5\u7a0b\u5e8f\u96c6\u6700\u521d\u53d1\u5e03\u4e8e 1979 \u5e74\uff0c\u5e76\u7528\u4e8e\u521b\u5efa\u66f4\u5927\u7684\u6570\u503c\u7a0b\u5e8f\u5305\uff08\u5982 LAPACK \uff09\u3002[1] \u5728\u9ad8\u6027\u80fd\u8ba1\u7b97\u9886\u57df\uff0cBLAS \u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0cnumpy \u7684\u5e95\u5c42\u4e5f\u4f9d\u8d56\u4e8e BLAS\u3002 \u901a\u7528\u77e9\u9635\u4e58\u6cd5\uff08 General matrix multiply , GEMM\uff09\u662f BLAS \u4e2d\u7ecf\u5178\u7684\u5b50\u7a0b\u5e8f\u4e4b\u4e00\u3002[2] \u4f5c\u4e3a\u5f53\u4eca\u79d1\u5b66\u8ba1\u7b97\u6700\u5e38\u89c1\u7684\u8ba1\u7b97\u4efb\u52a1\u4e4b\u4e00\uff0cGEMM \u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u975e\u5e38\u9ad8\u6548\u7684\u77e9\u9635\u4e58\u6cd5\u3002\u4f18\u5316 GEMM \u4e5f\u662f HPC \u754c\u975e\u5e38\u57fa\u7840\u7684\u4efb\u52a1\u3002 \u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u4f60\u4f7f\u7528 OpenMP\u3001MPI \u7b49 API \u624b\u5de5\u5b8c\u6210\u4e00\u4e2a\u652f\u6301\u5206\u5e03\u5f0f\u8ba1\u7b97\u9ad8\u6027\u80fd GEMM \u5b9e\u73b0\u3002 2 \u5b9e\u9a8c\u73af\u5883 2.1 AI Station \u8bf7\u5927\u5bb6\u5728\u6211\u4eec\u63d0\u4f9b\u7684\u96c6\u7fa4\u4e0a\u521b\u5efa\u56db\u4e2a\u5bb9\u5668\uff0c\u6bcf\u53f0\u5bb9\u5668\u5305\u542b\u4e24\u4e2a CPU \u6838\u5fc3\u3002\u5927\u5bb6\u9700\u8981\u914d\u7f6e\u597d\u5bb9\u5668\u4e4b\u95f4\u7684\u7f51\u7edc\u901a\u4fe1\u4ee5\u53ca MPI \u73af\u5883\uff0c\u64cd\u4f5c\u65b9\u5f0f\u4e0e\u5b9e\u9a8c\u4e00\u76f8\u540c\uff0c\u4e0d\u8fc7\u5728\u672c\u5b9e\u9a8c\u4e2d\u51fa\u4e8e\u65b9\u4fbf\u8d77\u89c1\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5305\u542b MPI \u7684 Docker \u955c\u50cf\uff0c\u5982\u4e4b\u524d\u5b9e\u9a8c\u4e2d\u7528\u8fc7\u7684 tensorflow \u955c\u50cf\u3002 2.2 Slurm \u672c\u5b9e\u9a8c\u989d\u5916\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f7f\u7528 slurm \u7ba1\u7406\u7684\u96c6\u7fa4\u3002\u96c6\u7fa4\u7684\u914d\u7f6e\u4e3a\u56db\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709 48 \u4e2a CPU \u6838\u5fc3 2.2.1 \u767b\u5f55 \u767b\u5f55\u65b9\u5f0f\uff1a ssh <username>@clusters.zju.edu.cn -p 14514 \u5176\u4e2d username \u4e3a {\u4f60\u7684\u59d3\u540d\u7f29\u5199}-summer \uff0c\u4f8b\uff1a\u738b\u5c0f\u660e\u7684\u7528\u6237\u540d\u4e3a wxm-summer \u3002 \u5bf9\u4e8e\u90e8\u5206\u7f29\u5199\u91cd\u540d\u7684\u540c\u5b66\uff0c\u7528\u6237\u540d\u7565\u6709\u4e0d\u540c\uff0c\u5177\u4f53\u8bf7\u67e5\u770b username.txt \u3002 2.2.2 \u7f16\u8bd1 \u96c6\u7fa4\u4e0a\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86 Intel OneAPI \u5957\u4ef6\uff0c\u9700\u8981\u6267\u884c source /opt/intel/oneapi/setvars.sh \u52a0\u8f7d\u73af\u5883\uff0c\u5176\u4e2d\u5305\u542b\u4e86 IntelMPI \u3002 \u7f16\u8bd1\u65f6\u8bf7\u4f7f\u7528 mpiicc \u6216 mpiicpc \u7f16\u8bd1\u5668\u3002 2.2.3 \u8fd0\u884c \u5728\u52a0\u8f7d\u4e0a\u8ff0 IntelMPI \u5957\u4ef6\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u51e0\u79cd\u65b9\u5f0f\u8fd0\u884c\u7a0b\u5e8f\uff08\u8282\u70b9\u6570\u548c\u8fdb\u7a0b\u6570\u8bf7\u81ea\u884c\u9009\u62e9\uff09\uff1a \u4f7f\u7528 srun \u628a\u4efb\u52a1\u63d0\u4ea4\u81f3\u4efb\u52a1\u961f\u5217 I_MPI_PMI_LIBRARY = /usr/lib/x86_64-linux-gnu/libpmi.so.0 srun -N 4 -n 4 ./your_program \u4f7f\u7528 salloc \u8bf7\u6c42\u96c6\u7fa4\u8d44\u6e90\uff0c\u5f85\u8d44\u6e90\u5206\u914d\u5b8c\u6bd5\u540e\u624b\u52a8\u8fd0\u884c salloc -N 4 # wait for a while mpirun -ppn 1 ./your_program \u5355\u6b21\u4efb\u52a1\u7684\u6700\u5927\u8fd0\u884c\u65f6\u95f4\u4e3a 10 \u5206\u949f\u3002 \u5728\u5b9e\u9a8c\u622a\u6b62\u65e5\u671f\u524d\u4e00\u5468\uff0c\u6700\u5927\u8fd0\u884c\u65f6\u95f4\u5c06\u4f1a\u51cf\u5c11\u3002 2.2.4 \u96c6\u7fa4\u72b6\u6001\u83b7\u53d6 \u53ef\u4ee5\u901a\u8fc7 sinfo \u83b7\u53d6\u5f53\u524d\u96c6\u7fa4\u7684\u72b6\u6001\uff0c\u901a\u8fc7 squeue \u83b7\u53d6\u6392\u961f\u7684\u4efb\u52a1\u4fe1\u606f\u3002\u5982\u679c\u5f53\u524d\u81ea\u5df1\u7684\u4efb\u52a1\u6b63\u5728\u8fd0\u884c\uff0c\u5219\u4f60\u53ef\u4ee5\u901a\u8fc7 ssh \u8fde\u63a5\u5230\u5404\u4e2a\u8ba1\u7b97\u8282\u70b9\u901a\u8fc7 htop \u7b49\u547d\u4ee4\u89c2\u5bdf\u8fd0\u884c\u60c5\u51b5\u3002 2.3 \u96c6\u7fa4\u9009\u62e9 \u4e3a\u907f\u514d\u963b\u585e\uff0c\u8bf7\u5c3d\u91cf\u5148\u5728 aistation \u4e0a\u5b8c\u6210\u7f16\u5199\u4e0e\u8c03\u8bd5\u3002 3 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd 3.1 \u7a0b\u5e8f\u5c40\u90e8\u6027 \u6b64\u90e8\u5206\u4ecb\u7ecd\u53c2\u8003\u81ea wiki \u7a0b\u5e8f\u5c40\u90e8\u6027\u6307\u7684\u662f\u5e94\u7528\u7a0b\u5e8f\u5728\u8bbf\u95ee\u5185\u5b58\u7684\u65f6\u5019\uff0c\u503e\u5411\u4e8e\u8bbf\u95ee\u5185\u5b58\u4e2d\u8f83\u4e3a\u9760\u8fd1\u7684\u503c\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\u5206\u4e3a\u4e24\u79cd\u5f62\u5f0f\uff0c\u4e00\u79cd\u662f\u65f6\u95f4\u5c40\u90e8\u6027\uff0c\u53e6\u4e00\u79cd\u662f\u7a7a\u95f4\u5c40\u90e8\u6027\u3002\u65f6\u95f4\u5c40\u90e8\u6027\u6307\u7684\u662f\uff0c\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\uff0c\u6700\u8fd1\u521a\u521a\u88ab\u5f15\u7528\u8fc7\u7684\u4e00\u4e2a\u5185\u5b58\u4f4d\u7f6e\u5bb9\u6613\u518d\u6b21\u88ab\u5f15\u7528\uff0c\u6bd4\u5982\u5728\u8c03\u53d6\u4e00\u4e2a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u524d\u4e0d\u4e45\u624d\u8c03\u53d6\u8fc7\u7684\u672c\u5730\u53c2\u6570\u5bb9\u6613\u518d\u5ea6\u88ab\u8c03\u53d6\u4f7f\u7528\u3002\u7a7a\u95f4\u5c40\u90e8\u6027\u6307\u7684\u662f\uff0c\u6700\u8fd1\u5f15\u7528\u8fc7\u7684\u5185\u5b58\u4f4d\u7f6e\u4ee5\u53ca\u5176\u5468\u8fb9\u7684\u5185\u5b58\u4f4d\u7f6e\u5bb9\u6613\u518d\u6b21\u88ab\u4f7f\u7528\u3002\u7a7a\u95f4\u5c40\u90e8\u6027\u6bd4\u8f83\u5e38\u89c1\u4e8e\u5faa\u73af\u4e2d\uff0c\u6bd4\u5982\u5728\u4e00\u4e2a\u6570\u5217\u4e2d\uff0c\u5982\u679c\u7b2c 3 \u4e2a\u5143\u7d20\u5728\u4e0a\u4e00\u4e2a\u5faa\u73af\u4e2d\u4f7f\u7528\uff0c\u5219\u672c\u6b21\u5faa\u73af\u4e2d\u6781\u6709\u53ef\u80fd\u4f1a\u4f7f\u7528\u7b2c 4 \u4e2a\u5143\u7d20\u3002 \u5c40\u90e8\u6027\u662f\u51fa\u73b0\u5728\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u7684\u4e00\u79cd\u53ef\u9884\u6d4b\u884c\u4e3a\u3002\u7cfb\u7edf\u7684\u8fd9\u79cd\u5f3a\u8bbf\u95ee\u5c40\u90e8\u6027\uff0c\u53ef\u4ee5\u88ab\u7528\u6765\u5728\u5904\u7406\u5668\u5185\u6838\u7684\u6307\u4ee4\u6d41\u6c34\u7ebf\u4e2d\u8fdb\u884c\u6027\u80fd\u4f18\u5316\uff0c\u5982\u7f13\u5b58\uff0c\u5185\u5b58\u9884\u8bfb\u53d6\u4ee5\u53ca\u5206\u652f\u9884\u6d4b\u3002 3.2 \u8ba1\u7b97\u673a\u5c42\u6b21\u5b58\u50a8\u7ed3\u6784 \u5b58\u50a8\u5c42\u6b21\u662f\u5728\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u4e0b\u5b58\u50a8\u7cfb\u7edf\u5c42\u6b21\u7ed3\u6784\u7684\u6392\u5217\u987a\u5e8f\u3002\u6bcf\u4e00\u5c42\u4e8e\u4e0b\u4e00\u5c42\u76f8\u6bd4\u90fd\u62e5\u6709\u8f83\u9ad8\u7684\u901f\u5ea6\u548c\u8f83\u4f4e\u5ef6\u8fdf\u6027\uff0c\u4ee5\u53ca\u8f83\u5c0f\u7684\u5bb9\u91cf\u3002 \u5c42\u6b21\u5b58\u50a8\u7684\u8bbe\u8ba1\u6838\u5fc3\u76ee\u7684\u5c31\u662f\u8981\u5145\u5206\u5229\u7528\u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\uff0c\u5982\u5c06\u6700\u5e38\u8bbf\u95ee\u7684\u6570\u636e\u653e\u7f6e\u5728\u8f83\u9ad8\u7684\u5c42\u7ea7\u6765\u4fdd\u8bc1\u8bbf\u95ee\u901f\u5ea6\uff1b\u518d\u6bd4\u5982\u6309\u7167\u987a\u5e8f\u8bbf\u95ee\u80fd\u591f\u4f7f\u5f97\u6bcf\u6b21\u53d6\u6765\u7684\u6574\u5757\u6570\u636e\u90fd\u80fd\u591f\u88ab\u5229\u7528\uff0c\u4e5f\u4f7f\u5f97\u9884\u53d6\u7684\u6570\u636e\u662f\u6709\u6548\u7684\uff1b\u5982\u679c\u4f60\u7684\u5185\u5b58\u5145\u8db3\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u5c06\u786c\u76d8\u4e0a\u7684\u6570\u636e\u63d0\u524d\u62f7\u8d1d\u5230\u5185\u5b58\uff0c\u6765\u907f\u514d\u786c\u76d8 I/O \u5e26\u6765\u7684\u5f00\u9500\uff0c\u7b49\u7b49\u3002 \u56e0\u6b64\uff0c\u5145\u5206\u4f18\u5316\u4e00\u4e2a\u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\uff0c\u80fd\u591f\u4f7f\u5f97\u5176\u5145\u5206\u5229\u7528\u73b0\u4ee3\u8ba1\u7b97\u673a\u786c\u4ef6\u4e0a\u5404\u79cd\u52a0\u901f\u8bbe\u8ba1\uff0c\u63d0\u9ad8\u5176\u8fd0\u884c\u6548\u7387\u3002 3.3 \u5e76\u884c\u8ba1\u7b97 3.3.1 SIMD SIMD \u662f\u4e00\u79cd\u6570\u636e\u5e76\u884c\u6280\u672f\uff0c\u5b83\u901a\u8fc7\u63d0\u4f9b\u652f\u6301\u5411\u91cf\u8fd0\u7b97\u7684\u6307\u4ee4\uff0c\u540c\u65f6\u5bf9\u4e00\u7ec4\u6570\u636e\u6267\u884c\u76f8\u540c\u7684\u8ba1\u7b97\uff0c\u4ece\u800c\u5b9e\u73b0\u7a7a\u95f4\u4e0a\u7684\u5e76\u884c\uff0c\u8fdb\u800c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5e76\u884c\u5ea6\u548c\u541e\u5410\u91cf\u3002\u5f53\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u5927\u91cf\u5b8c\u5168\u4e00\u81f4\u7684\u8fd0\u7b97\u9700\u8981\u5bf9\u4e00\u6279\u6570\u636e\u8fdb\u884c\u5904\u7406\u65f6\uff0c\u4f60\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 SIMD \u5bf9\u5176\u8fdb\u884c\u5e76\u884c\u3002 3.3.2 \u6307\u4ee4\u7ea7\u5e76\u884c \u73b0\u4ee3\u5904\u7406\u5668\u4e00\u822c\u90fd\u4f1a\u4f7f\u7528\u6d41\u6c34\u7ebf\u6280\u672f\u6765\u540c\u65f6\u6267\u884c\u591a\u6761\u6307\u4ee4\u7684\u4e0d\u540c\u9636\u6bb5\uff0c\u4ece\u800c\u5b9e\u73b0\u6307\u4ee4\u95f4\u7684\u5e76\u884c\u3002\u4f20\u7edf\u6d41\u6c34\u7ebf\u56e0\u4e3a\u9700\u8981\u89e3\u51b3\u6d41\u6c34\u7ebf\u4e2d\u7684\u5404\u79cd\u51b2\u7a81\uff0c\u4e0d\u53ef\u907f\u514d\u7684\u4f1a\u5728\u6d41\u6c34\u7ebf\u4e2d\u5e26\u6765\u7a7a\u6ce1\uff0c\u800c\u7531\u4e8e\u73b0\u4ee3\u5904\u7406\u5668\u91cc\u5176\u5b9e\u8fd8\u5305\u542b\u6307\u4ee4\u7684\u4e71\u5e8f\u53d1\u5c04\uff0c\u51fa\u73b0\u7a7a\u6ce1\u7684\u51e0\u7387\u5df2\u7ecf\u5927\u5927\u964d\u4f4e\uff0c\u6240\u4ee5\u5728\u7f16\u7a0b\u65f6\u4e0d\u592a\u9700\u8981\u8003\u8651\u8fd9\u65b9\u9762\u7684\u95ee\u9898\u3002 3.3.3 \u7ebf\u7a0b\u7ea7\u5e76\u884c \u524d\u9762\u4ecb\u7ecd\u7684\u5e76\u884c\u90fd\u662f\u5bf9\u4e8e\u5355\u4e2a\u7269\u7406\u6838\u5fc3\u7684\u573a\u666f\uff0c\u5728\u73b0\u4ee3\u8ba1\u7b97\u673a\u4e2d\uff0c\u6211\u4eec\u5f80\u5f80\u62e5\u6709\u591a\u4e2a\u7269\u7406\u6838\u5fc3\uff0c\u800c\u7ebf\u7a0b\u4f5c\u4e3a\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u53ea\u80fd\u5728\u4e00\u4e2a\u6838\u5fc3\u4e0a\u6267\u884c\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5f00\u542f\u591a\u4e2a\u7ebf\u7a0b\u6765\u5145\u5206\u5229\u7528\u6bcf\u4e00\u4e2a\u6838\u5fc3\u3002 \u7ebf\u7a0b\u7684\u4e00\u4e2a\u597d\u5904\u662f\u5185\u5b58\u5171\u4eab\uff0c\u8fd9\u610f\u5473\u7740\u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1\u5f00\u9500\u4f1a\u5c0f\u4e0d\u5c11\u3002\u56e0\u6b64\u5728\u5355\u673a\u4e0a\u6211\u4eec\u5f80\u5f80\u91c7\u7528\u591a\u7ebf\u7a0b\u7684\u5e76\u884c\u6a21\u578b\u3002\u4e0d\u8fc7\u4e3a\u4e86\u4fdd\u8bc1\u8ba1\u7b97\u7684\u6b63\u786e\u6027\uff0c\u4f60\u9700\u8981\u786e\u4fdd\u4e00\u4e9b\u5730\u65b9\u7684\u64cd\u4f5c\u662f\u539f\u5b50\u7684\uff0c\u5e76\u7ef4\u62a4\u597d\u4e00\u4e9b\u540c\u6b65\u70b9\u3002 3.3.4 \u8fdb\u7a0b\u7ea7\u5e76\u884c \u5bf9\u4e8e\u5206\u5e03\u5f0f\u7684\u8ba1\u7b97\u6765\u8bf4\uff0c\u4ec5\u4ec5\u4f7f\u7528\u7ebf\u7a0b\u5e76\u884c\u5df2\u7ecf\u4e0d\u591f\u4e86\u3002\u6211\u4eec\u9700\u8981\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u5f00\u542f\u4e0d\u540c\u7684\u8fdb\u7a0b\uff0c\u6765\u6fc0\u53d1\u66f4\u591a\u7684\u5e76\u884c\u80fd\u529b\u3002\u7531\u4e8e\u8fdb\u7a0b\u95f4\u7684\u5185\u5b58\u5e76\u4e0d\u5171\u4eab\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u7a0b\u95f4\u901a\u4fe1\u6765\u8fdb\u884c\u6570\u636e\u7684\u5206\u4eab\u3002 3.3 IO \u4e0e\u901a\u4fe1\u5f00\u9500 \u5982\u679c\u7a0b\u5e8f\u6709 IO \u6216\u8005\u7f51\u7edc\u901a\u4fe1\u9700\u6c42\uff0c\u800c\u6211\u4eec\u7a0b\u5e8f\u7684\u6839\u672c\u9700\u6c42\u5176\u5b9e\u662f\u8ba1\u7b97\uff0c\u6240\u4ee5\u60f3\u529e\u6cd5\u7f29\u77ed\u8fd9\u4e00\u90e8\u5206\u7684\u65f6\u95f4\u4e5f\u662f\u63d0\u9ad8\u7a0b\u5e8f\u6027\u80fd\u7684\u91cd\u8981\u624b\u6bb5\uff1a\u6bd4\u5982\u51cf\u5c11\u901a\u4fe1\u91cf\uff0c\u5c3d\u91cf\u5c06\u901a\u4fe1 / IO\u96c6\u4e2d\u5728\u4e00\u8d77\uff0c\u589e\u52a0\u7f51\u7edc / IO \u7684\u5e26\u5bbd\u7b49\u3002 4 \u5b9e\u9a8c\u6b65\u9aa4 \u63a5\u4e0b\u6765\u6211\u4eec\u8ba8\u8bba\u7684\u4f18\u5316\u6280\u5de7\u5168\u90e8\u662f\u9488\u5bf9\u4e24\u4e2a\u7a20\u5bc6\u77e9\u9635\u7684\u4e58\u6cd5\u3002\u6211\u4eec\u7ed9\u51fa\u4ee5\u4e0b\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a \u7ed9\u5b9a\u77e9\u9635 \\(A, B, C\\) \uff1a \\[ \\mathbf{A} =\\begin{pmatrix}a_{11}&a_{12}&\\cdots &a_{1n}\\\\a_{21}&a_{22}&\\cdots &a_{2n}\\\\\\vdots &\\vdots &\\ddots &\\vdots \\\\a_{m1}&a_{m2}&\\cdots &a_{mn}\\\\\\end{pmatrix}, \\quad \\mathbf {B} =\\begin{pmatrix}b_{11}&b_{12}&\\cdots &b_{1p}\\\\b_{21}&b_{22}&\\cdots &b_{2p}\\\\\\vdots &\\vdots &\\ddots &\\vdots \\\\b_{n1}&b_{n2}&\\cdots &b_{np}\\\\\\end{pmatrix}, \\quad \\mathbf {C} =\\begin{pmatrix}c_{11}&c_{12}&\\cdots &c_{1p}\\\\c_{21}&c_{22}&\\cdots &c_{2p}\\\\\\vdots &\\vdots &\\ddots &\\vdots \\\\c_{m1}&c_{m2}&\\cdots &c_{mp}\\\\\\end{pmatrix} \\] \u77e9\u9635\u4e58\u6cd5 \\(C = AB\\) \u5b9a\u4e49\u4e3a\u5bf9\u4efb\u610f \\(c_{ij}\\) \u6709\uff1a \\[ c_{ij}=a_{i1}b_{1j}+a_{i2}b_{2j}+\\cdots +a_{in}b_{nj}=\\sum _{k=1}^{n}a_{ik}b_{kj} \\] \u4e3a\u4e86\u7b80\u5316\u95ee\u9898\uff0c\u6211\u4eec\u5047\u8bbe\u6240\u6709\u7684\u77e9\u9635\u90fd\u662f \\(N \\times N\\) \u7684\u65b9\u9635\u3002 4.1 \u5355\u673a\u4f18\u5316 \u4e0b\u9762\u6211\u4eec\u9009\u62e9\u4ecb\u7ecd\u4e00\u4e9b\u5355\u673a\u4e0a\u7684\u4f18\u5316\u6280\u672f\u3002 4.1.1 \u57fa\u51c6 \u6700\u57fa\u7840\u7684\u77e9\u9635\u4e58\u6cd5\u81ea\u7136\u662f\u4e09\u5c42\u5faa\u73af\uff0c\u5373\u5bf9\u4e8c\u7ef4\u77e9\u9635 \\( \\(C\\) \\) \u7684\u6bcf\u4e00\u9879\u901a\u8fc7\u5355\u5c42\u5faa\u73af\u8ba1\u7b97\u5176\u7ed3\u679c\u3002 for ( int x = 0 ; x < N ; x ++ ) { for ( int y = 0 ; y < N ; y ++ ) { C [( x * N ) + y ] = 0 for ( int k = 0 ; k < N ; k ++ ) { C [( x * N ) + y ] += A [( x * N ) + k ] * B [( k * N ) + y ] } } } 4.1.2 \u5206\u5757 \u57fa\u51c6\u4ee3\u7801\u5c3d\u53ef\u80fd\u591a\u7684\u4f7f\u7528\u4e86\u884c\u904d\u5386\u6765\u63d0\u9ad8\u5185\u5b58\u7684\u8bbf\u95ee\u6548\u7387\uff0c\u4f46\u662f\u5373\u4fbf\u5982\u6b64\uff0c\u7531\u4e8e\u77e9\u9635\u672c\u8eab\u5927\u5c0f\u8fc7\u5927\uff0c\u5bfc\u81f4\u90e8\u5206\u6309\u5217\u8bbf\u95ee\u7684\u60c5\u51b5\u4e0b\uff0c\u6574\u4f53\u5c40\u90e8\u6027\u8fd8\u662f\u4e0d\u9ad8\u3002\u6211\u4eec\u5f15\u5165\u5206\u5757\u6280\u672f\u6765\u8fdb\u4e00\u6b65\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\uff0c\u964d\u4f4e cache miss \u7684\u6982\u7387\u3002 \\[ A=\\left(\\begin{array}{ccc} A_{0,0} & \\cdots & A_{0, K-1} \\\\ \\vdots & & \\vdots \\\\ A_{M-1,0} & \\cdots & A_{M-1, K-1} \\end{array}\\right), \\quad B=\\left(\\begin{array}{ccc} B_{0,0} & \\cdots & B_{0, N-1} \\\\ \\vdots & & \\vdots \\\\ B_{K-1,0} & \\cdots & B_{K-1, N-1} \\end{array}\\right), \\quad C=\\left(\\begin{array}{ccc} C_{0,0} & \\cdots & C_{0, N-1} \\\\ \\vdots & & \\vdots \\\\ C_{M-1,0} & \\cdots & C_{M-1, N-1} \\end{array}\\right) \\] \u6b64\u65f6\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(C\\) \uff0c\u6211\u4eec\u90fd\u6709\uff1a \\(C_{ij}=\\sum _{k=0}^{N-1}A_{ik}B_{kj}\\) \u5927\u81f4\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a for ( int outerX = 0 ; outerX < N ; outerX ++ ) { for ( int outerY = 0 ; outerY < N ; outerY ++ ) { // Clear C_ij matrix for ( int innerX = 0 ; innerX < blockSize ; innerX ++ ) { for ( int innerY = 0 ; innerY < blockSize ; innerY ++ ) { // TODO: Clear C_ij matrix } } for ( int K = 0 ; K < N ; K ++ ) { // TODO: calculate C_ij = sum(A_ik * B_kj) } } } \u4e3a\u4e86\u4fdd\u8bc1\u8ba1\u7b97\u7684\u6b63\u786e\u6027\uff0c\u4f60\u9700\u8981\u975e\u5e38\u8c28\u614e\u7684\u5904\u7406\u5faa\u73af\u5c42\u6570\u3001\u4e0b\u6807\u3002 4.1.3 \u5411\u91cf\u5316 \u5bf9\u4e8e\u5faa\u73af\u7684\u6700\u5185\u5c42\uff0c\u5982\u679c\u6211\u4eec\u5c06\u5176\u5c55\u5f00\uff0c\u5f80\u5f80\u4f1a\u53d1\u73b0\u7c7b\u4f3c\u4e0b\u9762\u7684\u6a21\u5f0f\uff1a c [ i + 0 ] = a [ j + 0 ] * b [ someIdx0 ] c [ i + 1 ] = a [ j + 1 ] * b [ someIdx1 ] c [ i + 2 ] = a [ j + 2 ] * b [ someIdx2 ] c [ i + 3 ] = a [ j + 3 ] * b [ someIdx3 ] ... \u8fd9\u79cd\u89c4\u5f8b\u3001\u7edf\u4e00\u7684\u8ba1\u7b97\u975e\u5e38\u9002\u5408\u4f7f\u7528 SIMD \u6307\u4ee4\u8fdb\u884c\u8ba1\u7b97\u3002\u4ee5\u8ba1\u7b97 \\(C_i = A_i * B_i\\) \u4e3a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u4ee5\u4e0b\u5229\u7528 AVX \u6307\u4ee4\u7684\u5411\u91cf\u5316\u4ee3\u7801\uff1a __m256d a [ N ], b [ N ], c [ N ]; for ( int i = 0 ; i < N ; i ++ ) c [ i ] = __mm256_mul_pd ( a [ i ], b [ i ]); \u8fd9\u6bb5\u4ee3\u7801\u80fd\u591f\u5728\u4e00\u6761 CPU \u6307\u4ee4\u5185\u5b8c\u6210 4 \u4e2a double \u7684\u4e58\u6cd5\uff0c\u4ece\u800c\u5927\u5e45\u63d0\u9ad8\u7cfb\u7edf\u7684\u8ba1\u7b97\u6027\u80fd\u3002 \u540c\u6837\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u8ba1\u7b97\u7684\u6b63\u786e\u6027\uff0c\u4f60\u9700\u8981\u975e\u5e38\u8c28\u614e\u7684\u5904\u7406\u5faa\u73af\u5c42\u6570\u3001\u5730\u5740\u3002 \u7531\u4e8e\u5411\u91cf\u5316\u6307\u4ee4\u96c6\u5728\u4e0d\u540c\u5382\u5546\u3001\u4e0d\u540c\u578b\u53f7\u7684 CPU \u4e0a\u53ef\u80fd\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u624b\u5199\u5411\u91cf\u5316\u7684\u6210\u672c\u975e\u5e38\u7684\u9ad8\uff0c\u56e0\u6b64\u6211\u4eec\u5f80\u5f80 \u76f4\u63a5\u4f7f\u7528\u7f16\u8bd1\u5668\u7684\u81ea\u52a8\u5411\u91cf\u5316 \u3002\u5177\u4f53\u5f00\u542f\u65b9\u6cd5\u8bf7\u67e5\u9605\u4e0d\u540c\u5e73\u53f0\u4e0a\u76f8\u5173\u7f16\u8bd1\u5668\u7684\u7f16\u8bd1\u9009\u9879\u3002 4.1.4 \u6570\u7ec4\u5c01\u88c5 \u6570\u7ec4\u5c01\u88c5\u662f GEMM \u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u6280\u672f\u3002\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5373\u4fbf\u4f7f\u7528\u4e86\u5206\u5757\u6280\u672f\uff0cB \u4e2d\u7684\u8bbf\u5b58\u987a\u5e8f\u4f9d\u7136\u662f\u4e0d\u592a\u8fde\u8d2f\u7684\u2014\u2014\u4ee5 \\(16 \\times 16\\) \u5927\u5c0f\u7684\u77e9\u9635\u4e3a\u4f8b\uff0c\u5373\u4fbf\u6211\u4eec\u6309\u7167 \\(4 \\times 4\\) \u8fdb\u884c\u5206\u5757\uff0cB \u4e2d\u7684\u8bbf\u5b58\u987a\u5e8f\u4ecd\u7136\u4f1a\u662f\u6bcf 4 \u6b21\u7ebf\u6027\u8bbf\u95ee\u9047\u5230\u4e00\u6b21\u975e\u7ebf\u6027\u8bbf\u95ee\uff0c\u5982\u4e0b\u56fe\u4e0a\u534a\u90e8\u5206\u6240\u793a\u3002 \u89e3\u51b3\u65b9\u6848\u662f\uff1a\u63d0\u524d\u5c06 B \u77e9\u9635\u62c6\u5206\u6210 4 \u4e2a\u5c0f\u77e9\u9635\uff0c\u6bcf\u4e2a\u77e9\u9635\u5927\u5c0f\u4e3a \\(16 \\times 4\\) \u3002\u62c6\u5206\u540e\u7684\u6bcf\u4e2a\u77e9\u9635\u5185\u90e8\u662f\u8fde\u7eed\u5b58\u653e\u7684\uff0c\u8fd9\u6837\u6240\u6709\u7684\u8bbf\u5b58\u64cd\u4f5c\u90fd\u662f\u987a\u5e8f\u7684\u4e86\uff0c\u5982\u56fe\u4e2d\u4e0b\u534a\u90e8\u5206\u6240\u793a\u3002 4.1.5 \u5199\u5165\u7f13\u5b58 \u5728\u4e4b\u524d\u4f53\u7cfb\u7ed3\u6784\u6982\u8ff0\u7684\u8bfe\u7a0b\u91cc\uff0c\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u5199\u5165\u5185\u5b58\u7684\u65f6\u5019\uff0c\u4e5f\u662f\u5b58\u5728\u5c40\u90e8\u6027\u7684\u3002\u867d\u7136\u5b58\u5728\u4e0d\u540c\u7684\u7f13\u5b58\u66ff\u6362\u3001\u5199\u56de\u7b56\u7565\uff0c\u4f46\u662f\u603b\u4f53\u4e0a\u987a\u5e8f\u5199\u5165\u4ecd\u7136\u662f\u8fdc\u8fdc\u5feb\u4e8e\u975e\u7ebf\u6027\u7684\u5199\u5165\u7684\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5148\u521b\u5efa\u4e00\u5757\u5199\u5165\u7f13\u5b58\uff0c\u7528\u4e8e\u6309\u7167\u8ba1\u7b97\u987a\u5e8f\u5b58\u653e\u7ed3\u679c\uff0c\u518d\u5728\u8ba1\u7b97\u5168\u90e8\u7ed3\u675f\u540e\u6279\u91cf\u62f7\u8d1d\u3001\u8c03\u6574\u5230\u5e94\u6709\u7684\u987a\u5e8f\u3002 4.1.6 \u7ebf\u7a0b\u7ea7\u5e76\u884c \u5728\u4f18\u5316\u5b8c\u5c40\u90e8\u6027\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u8003\u8651\u4f7f\u7528\u7ebf\u7a0b\u7ea7\u5e76\u884c\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 OpenMP \u5373\u53ef\uff0c\u5177\u4f53\u65b9\u6cd5\u8bfe\u4e0a\u5df2\u7ecf\u4ecb\u7ecd\u3002\u8bf7\u6ce8\u610f\u7ebf\u7a0b\u95f4\u7684\u8d1f\u8f7d\u5747\u8861\uff0c\u5e76\u5e73\u8861\u8c03\u5ea6\u5f00\u9500\u3002 \u591a\u7ebf\u7a0b\u91cc\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u7531\u4e8e NUMA \u7684\u5b58\u5728\uff0c\u8de8\u7247\u8bbf\u95ee\u7684\u5f00\u9500\u5c06\u4f1a\u975e\u5e38\u7684\u5927\uff0c\u56e0\u6b64\u63d0\u9ad8\u6838\u7684\u6570\u636e\u4eb2\u548c\u6027\u4e5f\u975e\u5e38\u91cd\u8981\uff0c\u5982\u5c06\u7ebf\u7a0b\u7ed1\u5b9a\u5230\u6307\u5b9a\u6838\u5fc3\u4e0a\uff0c\u907f\u514d\u88ab OS \u8c03\u5ea6\u5230\u5176\u4ed6\u6838\u5fc3\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6838\u4e0a\u7684\u7ebf\u7a0b\u5e94\u5f53\u5c3d\u91cf\u53ea\u8bbf\u95ee\u8be5\u6838\u5fc3\u6240\u76f4\u8fde\u7684\u5185\u5b58\u533a\u57df\u3002 4.2 \u5206\u5e03\u5f0f\u5e76\u884c \u5355\u673a\u4f18\u5316\u5b8c\u6bd5\u540e\uff0c\u518d\u8003\u8651\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u4f18\u5316\u3002\u6211\u4eec\u4f7f\u7528 MPI \u6765\u5904\u7406\u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1\uff0c\u5177\u4f53\u65b9\u6cd5\u8bfe\u4e0a\u5df2\u7ecf\u4ecb\u7ecd\u3002\u7531\u4e8e\u8fdb\u7a0b\u95f4\u5185\u5b58\u7a7a\u95f4\u662f\u4e0d\u5171\u4eab\u7684\uff0c\u8ba1\u7b97\u6240\u9700\u7684\u6570\u636e\u9700\u8981\u624b\u5de5\u8fdb\u884c\u5206\u53d1\uff0c\u4f60\u9700\u8981\u5408\u7406\u8bbe\u8ba1\u901a\u4fe1\u65b9\u5f0f\uff0c\u907f\u514d\u8fc7\u5ea6\u7684\u901a\u4fe1\u5f00\u9500\u3002\u53e6\u5916\uff0c\u4e5f\u4e0d\u8981\u5ffd\u7565\u4e86\u540c\u6b65\u5f00\u9500\u3002 \u66f4\u591a\u4f18\u5316\u6280\u5de7\u53ef\u4ee5\u53c2\u9605\u624b\u518c\u672b\u5c3e\u7684\u53c2\u8003\u8d44\u6599 5 \u5b9e\u9a8c\u4efb\u52a1\u4e0e\u8981\u6c42 \u5229\u7528\u4ee5\u4e0a\u6280\u672f\u5b8c\u6210 GEMM \u5206\u5e03\u5f0f\u5b9e\u73b0\uff0c\u7528\u4e8e\u5b8c\u6210\u4ee5\u4e0b\u8ba1\u7b97\u4efb\u52a1\uff1a 5.1 \u95ee\u9898\u63cf\u8ff0 \u8f93\u5165\u77e9\u9635 \\(A, B\\) \uff0c\u6807\u91cf \\(n\\) \uff0c\u8ba1\u7b97\u77e9\u9635\u8fde\u4e58\u79ef\uff1a $$ \\prod_{k=0}^nA+kB = A (A + B) (A+2B)\\dots(A+nB) $$ \u5176\u4e2d\u77e9\u9635 \\(A, B\\) \u4e3a\u968f\u673a\u751f\u6210\u7684 \\(10001 \\times 10001\\) signed int 32 \u77e9\u9635\u3002\u51fa\u4e8e\u65b9\u4fbf\u8d77\u89c1\u65e0\u9700\u8003\u8651\u6ea2\u51fa\u3002 5.2 \u8bc4\u6d4b\u73af\u5883 slurm \u96c6\u7fa4\uff0c\u8be6\u89c1\u672c\u624b\u518c\u7b2c 2 \u8282\u3002 5.3 \u57fa\u51c6\u4ee3\u7801 \u6211\u4eec\u5c06\u63d0\u4f9b\u4e00\u4efd\u4ee3\u7801\u5305\uff08\u8be6\u89c1 starter_code \uff09\uff0c\u5305\u542b\u6b63\u786e\u6027\u68c0\u9a8c\u4ee5\u53ca\u6027\u80fd\u8ba1\u7b97\uff0c\u5f62\u5f0f\u5982\u4e0b\u3002 hw.h // mat_A, mat_B and result point to memory at least 10001*10001*4B // n is the scalar and will be used to check your answer void input ( int * mat_A , int * mat_B ); void output ( int * result , int n ); hw_baseline.cpp #include \"hw.h\" int matA [ 10001 * 10001 ]; int matB [ 10001 * 10001 ]; int main () { input ( matA , matB ); int n = 1 ; // do calculation here output ( matA , n ); } \u4f60\u53ef\u4ee5\u4f7f\u7528 make \u6784\u5efa\u4e8c\u8fdb\u5236\u7a0b\u5e8f\uff0c\u5e76\u4f7f\u7528 make run \u8fd0\u884c\u4f60\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u3002 5.4 \u8bc4\u6d4b\u65b9\u5f0f \u6211\u4eec\u4f7f\u7528\u6bcf\u79d2\u8ba1\u7b97\u91cf \uff08Operations Per Second\uff09\u6765\u8bc4\u4ef7\u4f60\u7684\u7a0b\u5e8f\u6027\u80fd\uff0c\u5176\u8ba1\u7b97\u2f45\u6cd5\u5982\u4e0b\uff1a \\[ Ops = \\frac{n}{T}C \\] \u5176\u4e2d \\(C=10001^3+2\\cdot10001^2\\) \u4e3a\u5e38\u91cf\u3002 5.5 \u8ba1\u5206\u65b9\u5f0f \u4f5c\u4e1a\u6ee1\u5206 20 \u5206\u3002 \u82e5\u7b54\u6848\u9519\u8bef\u6216\u672a\u80fd\u5728 10 \u5206\u949f\u5185\u7ed9\u51fa \\(n = 1\\) \u65f6\u7684\u7ed3\u679c\uff0c\u89c6\u60c5\u51b5\u7ed9 0\u301c5 \u5206 \u7b54\u6848\u6b63\u786e\u4e14\u2f84\u5c11\u5728 10 \u5206\u949f\u5185\u7ed9\u51fa \\(n=1\\) \u65f6\u7684\u7ed3\u679c\uff0c\u7ed9 5 \u5206 \u5269\u4f59 15 \u5206\u5c06\u6309\u6240\u6709\u6709\u6548\u63d0\u4ea4\u7a0b\u5e8f\u7684\u6bcf\u79d2\u8ba1\u7b97\u91cf \\(Ops\\) \u6392\u540d\u7ed9\u51fa\uff0c\u9075\u5faa\u6b63\u6001\u5206\u5e03 5.6 \u4f5c\u4e1a\u63d0\u4ea4\u65b9\u5f0f \u8bf7\u5c06\u6700\u4f18\u7684\u6e90\u4ee3\u7801\u3001Makefile/CMakeLists.txt\u3001\u8fd0\u884c\u53c2\u6570\uff08\u5305\u62ec slurm \u547d\u4ee4\u4e0e\u53c2\u6570\uff09\u3001 \\(Ops\\) \u503c\u4ee5\u53ca\u5b9e\u9a8c\u62a5\u544a\u6253\u5305\u63d0\u4ea4\u5230\u5b66\u5728\u6d59\u5927\u3002 \u622a\u6b62\u540e\uff0c\u6211\u4eec\u5c06\u68c0\u67e5\u6e90\u4ee3\u7801\u7684\u5408\u6cd5\u6027\uff08\u662f\u5426\u6284\u88ad\u3001\u4f7f\u7528\u4e86\u8fdd\u7981\u5e93\u7b49\uff09\u5e76\u91cd\u65b0\u7f16\u8bd1\u6d4b\u8bd5\u3002 6 \u6ce8\u610f\u4e8b\u9879 \u72ec\u7acb\u5b8c\u6210\u672c\u6b21\u5b9e\u9a8c\uff0c\u4e25\u7981\u6284\u88ad\uff0c\u6211\u4eec\u5c06\u4f1a\u8fdb\u884c\u67e5\u91cd\uff0c\u4e00\u65e6\u53d1\u73b0\u672c\u6b21\u5b9e\u9a8c\u8ba1 0 \u5206\u3002 \u653b\u51fb\u5e73\u53f0\u3001\u6076\u610f\u6d6a\u8d39\u8282\u70b9\u8d44\u6e90\u7b49\u5e72\u6270\u4ed6\u4eba\u7684\u884c\u4e3a\uff0c\u4ee5\u4f5c\u5f0a\u8bba\u5904\u3002 \u53ea\u5141\u8bb8\u4f7f\u7528 OpenMP / Intel MPI / Intel C Compiler / GNU Compiler Colletion \u7b49\uff0c \u4e0d\u5141\u8bb8\u4f7f\u7528 Intel MKL / BLAS / LAPACK \u7b49\u7b2c\u4e09\u65b9\u5de5\u5177\u5e93\u3002\u82e5\u6700\u7ec8\u63d0\u4ea4\u7684\u4ee3\u7801\u4f7f\u7528\u7981\u6b62\u7684\u5e93\uff0c\u4ee5\u4f5c\u5f0a\u8bba\u5904\u3002 \u4efb\u4f55\u95ee\u9898\u8bf7\u8054\u7cfb\u7fa4\u5185\u52a9\u6559\u3002 7 Bonus \u672c\u90e8\u5206\u9009\u505a\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u5c1d\u8bd5\u7740\u5b8c\u6210\u3002 Bonus \u90e8\u5206\u5b8c\u6210\u5373\u6709\u52a0\u5206\uff08\u5b8c\u6210 Bonus \u90e8\u5206\u5b9e\u9a8c\u8981\u6c42\uff0c\u4e14\u80fd\u591f\u901a\u8fc7\u7f16\u8bd1\u4e0e\u6d4b\u8bd5\uff09\uff0c\u6211\u4eec\u5c06\u6839\u636e\u5b8c\u6210\u8d28\u91cf\u63d0\u4f9b 5-10 \u5206\u7684\u52a0\u5206\uff08\u4e0e Lab 4 \u6743\u91cd\u76f8\u540c\uff09\u3002 7.1 \u5b9e\u9a8c\u4efb\u52a1 Fortran \u662f\u4e16\u754c\u4e0a\u7b2c\u4e00\u4e2a\u88ab\u6b63\u5f0f\u91c7\u7528\u5e76\u6d41\u4f20\u81f3\u4eca\u7684\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83\u56e0\u8f83\u4e3a\u5bb9\u6613\u5b66\u4e60\u800c\u88ab\u5927\u91cf\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97\u9886\u57df\u7684\u4ee3\u7801\u7f16\u5199\u3002\u5176\u7f16\u8bd1\u5668\u5f80\u5f80\u4f1a\u968f C/C++ \u7684\u7f16\u8bd1\u5668\u4e00\u540c\u5b89\u88c5\uff0c\u4e14\u5176\u7f16\u8bd1\u6d41\u7a0b\u548c C/C++ \u7c7b\u4f3c\uff0c\u6545\u5176\u80fd\u548c C/C++ \u7a0b\u5e8f\u8fdb\u884c\u6df7\u5408\u7f16\u8bd1\u3002 \u4f60\u9700\u8981\u5b8c\u6210\u7684\u4efb\u52a1\u662f\uff0c\u5c06\u4e0a\u8ff0\u5b9e\u9a8c\u5185\u5bb9\u4f7f\u7528 Fortran \u91cd\u65b0\u5b9e\u73b0\uff0c\u5e76\u80fd\u591f\u548c C/C++ \u4ee3\u7801\u5b9e\u73b0\u6df7\u5408\u7f16\u8bd1\uff08\u5373\u5728 Fortran \u4ee3\u7801\u4e2d\u8c03\u7528 hw.h \u4e2d\u7684 input/output \u51fd\u6570\uff0c\u7f16\u8bd1\u751f\u6210\u4e00\u4e2a\u7531\u4e24\u79cd\u8bed\u8a00\u7f16\u5199\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\uff09\uff0c\u901a\u8fc7 output \u51fd\u6570\u7684\u6d4b\u8bd5\u3002 7.2 \u5b9e\u9a8c\u8981\u6c42 \u4f7f\u7528 Fortran \u91cd\u65b0\u7f16\u5199\u672c\u5b9e\u9a8c\uff0c\u5e76\u5b9e\u73b0\u6df7\u5408\u7f16\u8bd1 \u6d4b\u8bd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027\u548c \\(Ops\\) \u63d0\u4ea4\u4ee3\u7801\u548c\u7b80\u8981\u7684\u62a5\u544a\uff08\u53ef\u4ee5\u9644\u5728 Lab 4 \u62a5\u544a\u4e2d\uff09 \u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 Fortran \u8fdb\u884c Lab 4 \u7684\u7f16\u5199\u5e76\u53c2\u4e0e\u6392\u540d\uff0c\u4e00\u8d77\u83b7\u5f97 Lab 4 \u53ca Bonus \u7684\u5206\u6570\u3002 \u4f60\u4e5f\u53ef\u4ee5\u540c\u65f6\u63d0\u4ea4\u4f7f\u7528 C/C++ \u7684\u5b9e\u73b0\u548c\u4f7f\u7528 Fortran \u7684\u5b9e\u73b0\uff0c\u5bf9\u6bd4\u4e24\u79cd\u5b9e\u73b0\u7684\u7ed3\u679c\uff0c\u5e76\u6ce8\u660e\u4f7f\u7528\u54ea\u4e2a\u5b9e\u73b0\u53c2\u4e0e\u6700\u7ec8 Lab 4 \u7684\u6392\u540d\u8ba1\u7b97 Lab 4 \u7684\u5206\u6570\u3002\u6b64\u65f6\u5efa\u8bae\u5c06 Fortran \u6e90\u7801\u548c C/C++ \u6e90\u7801\u4e00\u5e76\u4e0a\u4ea4\uff0c\u5e76\u901a\u8fc7 Makefile/CMakeLists.txt \u6ce8\u660e\u4e24\u79cd\u5b9e\u73b0\u5206\u522b\u7684\u6784\u5efa\u4e0e\u8fd0\u884c\u65b9\u5f0f\u3002 \u53c2\u8003\u8d44\u6599 https://en.wikipedia.org/wiki/Basic_Linear_Algebra_Subprograms https://en.wikipedia.org/wiki/General_matrix_multiply https://github.com/flame/how-to-optimize-gemm/wiki https://tvm.apache.org/docs/tutorials/optimize/opt_gemm.html Huang J, van. BLISlab: A Sandbox for Optimizing GEMM. arXiv.org. Published 2016. Accessed July 10, 2021. https://arxiv.org/abs/1609.00076 \u8ba1\u7b97\u673a\u6559\u80b2\u4e2d\u7f3a\u5931\u7684\u4e00\u8bfe \u00b7 the missing semester of your cs education (missing-semester-cn.github.io) Introduction to Fortran (ourcodingclub.github.io) Quickstart tutorial - Fortran Programming Language (fortran-lang.org)","title":"Lab4-GEMM \u901a\u7528\u77e9\u9635\u4e58\u6cd5"},{"location":"Lab4-Gemm/#gemm","text":"","title":"\u5b9e\u9a8c\u56db\uff1aGEMM \u901a\u7528\u77e9\u9635\u4e58\u6cd5"},{"location":"Lab4-Gemm/#1","text":"BLAS \uff08\u82f1\u8bed\uff1a Basic Linear Algebra Subprograms \uff0c\u57fa\u7840\u7ebf\u6027\u4ee3\u6570\u7a0b\u5e8f\u96c6\uff09\u662f\u4e00\u4e2a \u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3 \uff08API\uff09\u6807\u51c6\uff0c\u7528\u4ee5\u89c4\u8303\u53d1\u5e03\u57fa\u7840\u7ebf\u6027\u4ee3\u6570\u64cd\u4f5c\u7684\u6570\u503c\u5e93\uff08\u5982\u77e2\u91cf\u6216\u77e9\u9635\u4e58\u6cd5\uff09\u3002\u8be5\u7a0b\u5e8f\u96c6\u6700\u521d\u53d1\u5e03\u4e8e 1979 \u5e74\uff0c\u5e76\u7528\u4e8e\u521b\u5efa\u66f4\u5927\u7684\u6570\u503c\u7a0b\u5e8f\u5305\uff08\u5982 LAPACK \uff09\u3002[1] \u5728\u9ad8\u6027\u80fd\u8ba1\u7b97\u9886\u57df\uff0cBLAS \u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0cnumpy \u7684\u5e95\u5c42\u4e5f\u4f9d\u8d56\u4e8e BLAS\u3002 \u901a\u7528\u77e9\u9635\u4e58\u6cd5\uff08 General matrix multiply , GEMM\uff09\u662f BLAS \u4e2d\u7ecf\u5178\u7684\u5b50\u7a0b\u5e8f\u4e4b\u4e00\u3002[2] \u4f5c\u4e3a\u5f53\u4eca\u79d1\u5b66\u8ba1\u7b97\u6700\u5e38\u89c1\u7684\u8ba1\u7b97\u4efb\u52a1\u4e4b\u4e00\uff0cGEMM \u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u975e\u5e38\u9ad8\u6548\u7684\u77e9\u9635\u4e58\u6cd5\u3002\u4f18\u5316 GEMM \u4e5f\u662f HPC \u754c\u975e\u5e38\u57fa\u7840\u7684\u4efb\u52a1\u3002 \u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u4f60\u4f7f\u7528 OpenMP\u3001MPI \u7b49 API \u624b\u5de5\u5b8c\u6210\u4e00\u4e2a\u652f\u6301\u5206\u5e03\u5f0f\u8ba1\u7b97\u9ad8\u6027\u80fd GEMM \u5b9e\u73b0\u3002","title":"1 \u5b9e\u9a8c\u7b80\u4ecb"},{"location":"Lab4-Gemm/#2","text":"","title":"2 \u5b9e\u9a8c\u73af\u5883"},{"location":"Lab4-Gemm/#21-ai-station","text":"\u8bf7\u5927\u5bb6\u5728\u6211\u4eec\u63d0\u4f9b\u7684\u96c6\u7fa4\u4e0a\u521b\u5efa\u56db\u4e2a\u5bb9\u5668\uff0c\u6bcf\u53f0\u5bb9\u5668\u5305\u542b\u4e24\u4e2a CPU \u6838\u5fc3\u3002\u5927\u5bb6\u9700\u8981\u914d\u7f6e\u597d\u5bb9\u5668\u4e4b\u95f4\u7684\u7f51\u7edc\u901a\u4fe1\u4ee5\u53ca MPI \u73af\u5883\uff0c\u64cd\u4f5c\u65b9\u5f0f\u4e0e\u5b9e\u9a8c\u4e00\u76f8\u540c\uff0c\u4e0d\u8fc7\u5728\u672c\u5b9e\u9a8c\u4e2d\u51fa\u4e8e\u65b9\u4fbf\u8d77\u89c1\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5305\u542b MPI \u7684 Docker \u955c\u50cf\uff0c\u5982\u4e4b\u524d\u5b9e\u9a8c\u4e2d\u7528\u8fc7\u7684 tensorflow \u955c\u50cf\u3002","title":"2.1 AI Station"},{"location":"Lab4-Gemm/#22-slurm","text":"\u672c\u5b9e\u9a8c\u989d\u5916\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f7f\u7528 slurm \u7ba1\u7406\u7684\u96c6\u7fa4\u3002\u96c6\u7fa4\u7684\u914d\u7f6e\u4e3a\u56db\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709 48 \u4e2a CPU \u6838\u5fc3","title":"2.2 Slurm"},{"location":"Lab4-Gemm/#221","text":"\u767b\u5f55\u65b9\u5f0f\uff1a ssh <username>@clusters.zju.edu.cn -p 14514 \u5176\u4e2d username \u4e3a {\u4f60\u7684\u59d3\u540d\u7f29\u5199}-summer \uff0c\u4f8b\uff1a\u738b\u5c0f\u660e\u7684\u7528\u6237\u540d\u4e3a wxm-summer \u3002 \u5bf9\u4e8e\u90e8\u5206\u7f29\u5199\u91cd\u540d\u7684\u540c\u5b66\uff0c\u7528\u6237\u540d\u7565\u6709\u4e0d\u540c\uff0c\u5177\u4f53\u8bf7\u67e5\u770b username.txt \u3002","title":"2.2.1 \u767b\u5f55"},{"location":"Lab4-Gemm/#222","text":"\u96c6\u7fa4\u4e0a\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86 Intel OneAPI \u5957\u4ef6\uff0c\u9700\u8981\u6267\u884c source /opt/intel/oneapi/setvars.sh \u52a0\u8f7d\u73af\u5883\uff0c\u5176\u4e2d\u5305\u542b\u4e86 IntelMPI \u3002 \u7f16\u8bd1\u65f6\u8bf7\u4f7f\u7528 mpiicc \u6216 mpiicpc \u7f16\u8bd1\u5668\u3002","title":"2.2.2 \u7f16\u8bd1"},{"location":"Lab4-Gemm/#223","text":"\u5728\u52a0\u8f7d\u4e0a\u8ff0 IntelMPI \u5957\u4ef6\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u51e0\u79cd\u65b9\u5f0f\u8fd0\u884c\u7a0b\u5e8f\uff08\u8282\u70b9\u6570\u548c\u8fdb\u7a0b\u6570\u8bf7\u81ea\u884c\u9009\u62e9\uff09\uff1a \u4f7f\u7528 srun \u628a\u4efb\u52a1\u63d0\u4ea4\u81f3\u4efb\u52a1\u961f\u5217 I_MPI_PMI_LIBRARY = /usr/lib/x86_64-linux-gnu/libpmi.so.0 srun -N 4 -n 4 ./your_program \u4f7f\u7528 salloc \u8bf7\u6c42\u96c6\u7fa4\u8d44\u6e90\uff0c\u5f85\u8d44\u6e90\u5206\u914d\u5b8c\u6bd5\u540e\u624b\u52a8\u8fd0\u884c salloc -N 4 # wait for a while mpirun -ppn 1 ./your_program \u5355\u6b21\u4efb\u52a1\u7684\u6700\u5927\u8fd0\u884c\u65f6\u95f4\u4e3a 10 \u5206\u949f\u3002 \u5728\u5b9e\u9a8c\u622a\u6b62\u65e5\u671f\u524d\u4e00\u5468\uff0c\u6700\u5927\u8fd0\u884c\u65f6\u95f4\u5c06\u4f1a\u51cf\u5c11\u3002","title":"2.2.3 \u8fd0\u884c"},{"location":"Lab4-Gemm/#224","text":"\u53ef\u4ee5\u901a\u8fc7 sinfo \u83b7\u53d6\u5f53\u524d\u96c6\u7fa4\u7684\u72b6\u6001\uff0c\u901a\u8fc7 squeue \u83b7\u53d6\u6392\u961f\u7684\u4efb\u52a1\u4fe1\u606f\u3002\u5982\u679c\u5f53\u524d\u81ea\u5df1\u7684\u4efb\u52a1\u6b63\u5728\u8fd0\u884c\uff0c\u5219\u4f60\u53ef\u4ee5\u901a\u8fc7 ssh \u8fde\u63a5\u5230\u5404\u4e2a\u8ba1\u7b97\u8282\u70b9\u901a\u8fc7 htop \u7b49\u547d\u4ee4\u89c2\u5bdf\u8fd0\u884c\u60c5\u51b5\u3002","title":"2.2.4 \u96c6\u7fa4\u72b6\u6001\u83b7\u53d6"},{"location":"Lab4-Gemm/#23","text":"\u4e3a\u907f\u514d\u963b\u585e\uff0c\u8bf7\u5c3d\u91cf\u5148\u5728 aistation \u4e0a\u5b8c\u6210\u7f16\u5199\u4e0e\u8c03\u8bd5\u3002","title":"2.3 \u96c6\u7fa4\u9009\u62e9"},{"location":"Lab4-Gemm/#3","text":"","title":"3 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd"},{"location":"Lab4-Gemm/#31","text":"\u6b64\u90e8\u5206\u4ecb\u7ecd\u53c2\u8003\u81ea wiki \u7a0b\u5e8f\u5c40\u90e8\u6027\u6307\u7684\u662f\u5e94\u7528\u7a0b\u5e8f\u5728\u8bbf\u95ee\u5185\u5b58\u7684\u65f6\u5019\uff0c\u503e\u5411\u4e8e\u8bbf\u95ee\u5185\u5b58\u4e2d\u8f83\u4e3a\u9760\u8fd1\u7684\u503c\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\u5206\u4e3a\u4e24\u79cd\u5f62\u5f0f\uff0c\u4e00\u79cd\u662f\u65f6\u95f4\u5c40\u90e8\u6027\uff0c\u53e6\u4e00\u79cd\u662f\u7a7a\u95f4\u5c40\u90e8\u6027\u3002\u65f6\u95f4\u5c40\u90e8\u6027\u6307\u7684\u662f\uff0c\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\uff0c\u6700\u8fd1\u521a\u521a\u88ab\u5f15\u7528\u8fc7\u7684\u4e00\u4e2a\u5185\u5b58\u4f4d\u7f6e\u5bb9\u6613\u518d\u6b21\u88ab\u5f15\u7528\uff0c\u6bd4\u5982\u5728\u8c03\u53d6\u4e00\u4e2a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u524d\u4e0d\u4e45\u624d\u8c03\u53d6\u8fc7\u7684\u672c\u5730\u53c2\u6570\u5bb9\u6613\u518d\u5ea6\u88ab\u8c03\u53d6\u4f7f\u7528\u3002\u7a7a\u95f4\u5c40\u90e8\u6027\u6307\u7684\u662f\uff0c\u6700\u8fd1\u5f15\u7528\u8fc7\u7684\u5185\u5b58\u4f4d\u7f6e\u4ee5\u53ca\u5176\u5468\u8fb9\u7684\u5185\u5b58\u4f4d\u7f6e\u5bb9\u6613\u518d\u6b21\u88ab\u4f7f\u7528\u3002\u7a7a\u95f4\u5c40\u90e8\u6027\u6bd4\u8f83\u5e38\u89c1\u4e8e\u5faa\u73af\u4e2d\uff0c\u6bd4\u5982\u5728\u4e00\u4e2a\u6570\u5217\u4e2d\uff0c\u5982\u679c\u7b2c 3 \u4e2a\u5143\u7d20\u5728\u4e0a\u4e00\u4e2a\u5faa\u73af\u4e2d\u4f7f\u7528\uff0c\u5219\u672c\u6b21\u5faa\u73af\u4e2d\u6781\u6709\u53ef\u80fd\u4f1a\u4f7f\u7528\u7b2c 4 \u4e2a\u5143\u7d20\u3002 \u5c40\u90e8\u6027\u662f\u51fa\u73b0\u5728\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u7684\u4e00\u79cd\u53ef\u9884\u6d4b\u884c\u4e3a\u3002\u7cfb\u7edf\u7684\u8fd9\u79cd\u5f3a\u8bbf\u95ee\u5c40\u90e8\u6027\uff0c\u53ef\u4ee5\u88ab\u7528\u6765\u5728\u5904\u7406\u5668\u5185\u6838\u7684\u6307\u4ee4\u6d41\u6c34\u7ebf\u4e2d\u8fdb\u884c\u6027\u80fd\u4f18\u5316\uff0c\u5982\u7f13\u5b58\uff0c\u5185\u5b58\u9884\u8bfb\u53d6\u4ee5\u53ca\u5206\u652f\u9884\u6d4b\u3002","title":"3.1 \u7a0b\u5e8f\u5c40\u90e8\u6027"},{"location":"Lab4-Gemm/#32","text":"\u5b58\u50a8\u5c42\u6b21\u662f\u5728\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u4e0b\u5b58\u50a8\u7cfb\u7edf\u5c42\u6b21\u7ed3\u6784\u7684\u6392\u5217\u987a\u5e8f\u3002\u6bcf\u4e00\u5c42\u4e8e\u4e0b\u4e00\u5c42\u76f8\u6bd4\u90fd\u62e5\u6709\u8f83\u9ad8\u7684\u901f\u5ea6\u548c\u8f83\u4f4e\u5ef6\u8fdf\u6027\uff0c\u4ee5\u53ca\u8f83\u5c0f\u7684\u5bb9\u91cf\u3002 \u5c42\u6b21\u5b58\u50a8\u7684\u8bbe\u8ba1\u6838\u5fc3\u76ee\u7684\u5c31\u662f\u8981\u5145\u5206\u5229\u7528\u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\uff0c\u5982\u5c06\u6700\u5e38\u8bbf\u95ee\u7684\u6570\u636e\u653e\u7f6e\u5728\u8f83\u9ad8\u7684\u5c42\u7ea7\u6765\u4fdd\u8bc1\u8bbf\u95ee\u901f\u5ea6\uff1b\u518d\u6bd4\u5982\u6309\u7167\u987a\u5e8f\u8bbf\u95ee\u80fd\u591f\u4f7f\u5f97\u6bcf\u6b21\u53d6\u6765\u7684\u6574\u5757\u6570\u636e\u90fd\u80fd\u591f\u88ab\u5229\u7528\uff0c\u4e5f\u4f7f\u5f97\u9884\u53d6\u7684\u6570\u636e\u662f\u6709\u6548\u7684\uff1b\u5982\u679c\u4f60\u7684\u5185\u5b58\u5145\u8db3\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u5c06\u786c\u76d8\u4e0a\u7684\u6570\u636e\u63d0\u524d\u62f7\u8d1d\u5230\u5185\u5b58\uff0c\u6765\u907f\u514d\u786c\u76d8 I/O \u5e26\u6765\u7684\u5f00\u9500\uff0c\u7b49\u7b49\u3002 \u56e0\u6b64\uff0c\u5145\u5206\u4f18\u5316\u4e00\u4e2a\u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\uff0c\u80fd\u591f\u4f7f\u5f97\u5176\u5145\u5206\u5229\u7528\u73b0\u4ee3\u8ba1\u7b97\u673a\u786c\u4ef6\u4e0a\u5404\u79cd\u52a0\u901f\u8bbe\u8ba1\uff0c\u63d0\u9ad8\u5176\u8fd0\u884c\u6548\u7387\u3002","title":"3.2 \u8ba1\u7b97\u673a\u5c42\u6b21\u5b58\u50a8\u7ed3\u6784"},{"location":"Lab4-Gemm/#33","text":"","title":"3.3 \u5e76\u884c\u8ba1\u7b97"},{"location":"Lab4-Gemm/#331-simd","text":"SIMD \u662f\u4e00\u79cd\u6570\u636e\u5e76\u884c\u6280\u672f\uff0c\u5b83\u901a\u8fc7\u63d0\u4f9b\u652f\u6301\u5411\u91cf\u8fd0\u7b97\u7684\u6307\u4ee4\uff0c\u540c\u65f6\u5bf9\u4e00\u7ec4\u6570\u636e\u6267\u884c\u76f8\u540c\u7684\u8ba1\u7b97\uff0c\u4ece\u800c\u5b9e\u73b0\u7a7a\u95f4\u4e0a\u7684\u5e76\u884c\uff0c\u8fdb\u800c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5e76\u884c\u5ea6\u548c\u541e\u5410\u91cf\u3002\u5f53\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u5927\u91cf\u5b8c\u5168\u4e00\u81f4\u7684\u8fd0\u7b97\u9700\u8981\u5bf9\u4e00\u6279\u6570\u636e\u8fdb\u884c\u5904\u7406\u65f6\uff0c\u4f60\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 SIMD \u5bf9\u5176\u8fdb\u884c\u5e76\u884c\u3002","title":"3.3.1 SIMD"},{"location":"Lab4-Gemm/#332","text":"\u73b0\u4ee3\u5904\u7406\u5668\u4e00\u822c\u90fd\u4f1a\u4f7f\u7528\u6d41\u6c34\u7ebf\u6280\u672f\u6765\u540c\u65f6\u6267\u884c\u591a\u6761\u6307\u4ee4\u7684\u4e0d\u540c\u9636\u6bb5\uff0c\u4ece\u800c\u5b9e\u73b0\u6307\u4ee4\u95f4\u7684\u5e76\u884c\u3002\u4f20\u7edf\u6d41\u6c34\u7ebf\u56e0\u4e3a\u9700\u8981\u89e3\u51b3\u6d41\u6c34\u7ebf\u4e2d\u7684\u5404\u79cd\u51b2\u7a81\uff0c\u4e0d\u53ef\u907f\u514d\u7684\u4f1a\u5728\u6d41\u6c34\u7ebf\u4e2d\u5e26\u6765\u7a7a\u6ce1\uff0c\u800c\u7531\u4e8e\u73b0\u4ee3\u5904\u7406\u5668\u91cc\u5176\u5b9e\u8fd8\u5305\u542b\u6307\u4ee4\u7684\u4e71\u5e8f\u53d1\u5c04\uff0c\u51fa\u73b0\u7a7a\u6ce1\u7684\u51e0\u7387\u5df2\u7ecf\u5927\u5927\u964d\u4f4e\uff0c\u6240\u4ee5\u5728\u7f16\u7a0b\u65f6\u4e0d\u592a\u9700\u8981\u8003\u8651\u8fd9\u65b9\u9762\u7684\u95ee\u9898\u3002","title":"3.3.2 \u6307\u4ee4\u7ea7\u5e76\u884c"},{"location":"Lab4-Gemm/#333","text":"\u524d\u9762\u4ecb\u7ecd\u7684\u5e76\u884c\u90fd\u662f\u5bf9\u4e8e\u5355\u4e2a\u7269\u7406\u6838\u5fc3\u7684\u573a\u666f\uff0c\u5728\u73b0\u4ee3\u8ba1\u7b97\u673a\u4e2d\uff0c\u6211\u4eec\u5f80\u5f80\u62e5\u6709\u591a\u4e2a\u7269\u7406\u6838\u5fc3\uff0c\u800c\u7ebf\u7a0b\u4f5c\u4e3a\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u53ea\u80fd\u5728\u4e00\u4e2a\u6838\u5fc3\u4e0a\u6267\u884c\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5f00\u542f\u591a\u4e2a\u7ebf\u7a0b\u6765\u5145\u5206\u5229\u7528\u6bcf\u4e00\u4e2a\u6838\u5fc3\u3002 \u7ebf\u7a0b\u7684\u4e00\u4e2a\u597d\u5904\u662f\u5185\u5b58\u5171\u4eab\uff0c\u8fd9\u610f\u5473\u7740\u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1\u5f00\u9500\u4f1a\u5c0f\u4e0d\u5c11\u3002\u56e0\u6b64\u5728\u5355\u673a\u4e0a\u6211\u4eec\u5f80\u5f80\u91c7\u7528\u591a\u7ebf\u7a0b\u7684\u5e76\u884c\u6a21\u578b\u3002\u4e0d\u8fc7\u4e3a\u4e86\u4fdd\u8bc1\u8ba1\u7b97\u7684\u6b63\u786e\u6027\uff0c\u4f60\u9700\u8981\u786e\u4fdd\u4e00\u4e9b\u5730\u65b9\u7684\u64cd\u4f5c\u662f\u539f\u5b50\u7684\uff0c\u5e76\u7ef4\u62a4\u597d\u4e00\u4e9b\u540c\u6b65\u70b9\u3002","title":"3.3.3 \u7ebf\u7a0b\u7ea7\u5e76\u884c"},{"location":"Lab4-Gemm/#334","text":"\u5bf9\u4e8e\u5206\u5e03\u5f0f\u7684\u8ba1\u7b97\u6765\u8bf4\uff0c\u4ec5\u4ec5\u4f7f\u7528\u7ebf\u7a0b\u5e76\u884c\u5df2\u7ecf\u4e0d\u591f\u4e86\u3002\u6211\u4eec\u9700\u8981\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u5f00\u542f\u4e0d\u540c\u7684\u8fdb\u7a0b\uff0c\u6765\u6fc0\u53d1\u66f4\u591a\u7684\u5e76\u884c\u80fd\u529b\u3002\u7531\u4e8e\u8fdb\u7a0b\u95f4\u7684\u5185\u5b58\u5e76\u4e0d\u5171\u4eab\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u7a0b\u95f4\u901a\u4fe1\u6765\u8fdb\u884c\u6570\u636e\u7684\u5206\u4eab\u3002","title":"3.3.4 \u8fdb\u7a0b\u7ea7\u5e76\u884c"},{"location":"Lab4-Gemm/#33-io","text":"\u5982\u679c\u7a0b\u5e8f\u6709 IO \u6216\u8005\u7f51\u7edc\u901a\u4fe1\u9700\u6c42\uff0c\u800c\u6211\u4eec\u7a0b\u5e8f\u7684\u6839\u672c\u9700\u6c42\u5176\u5b9e\u662f\u8ba1\u7b97\uff0c\u6240\u4ee5\u60f3\u529e\u6cd5\u7f29\u77ed\u8fd9\u4e00\u90e8\u5206\u7684\u65f6\u95f4\u4e5f\u662f\u63d0\u9ad8\u7a0b\u5e8f\u6027\u80fd\u7684\u91cd\u8981\u624b\u6bb5\uff1a\u6bd4\u5982\u51cf\u5c11\u901a\u4fe1\u91cf\uff0c\u5c3d\u91cf\u5c06\u901a\u4fe1 / IO\u96c6\u4e2d\u5728\u4e00\u8d77\uff0c\u589e\u52a0\u7f51\u7edc / IO \u7684\u5e26\u5bbd\u7b49\u3002","title":"3.3 IO \u4e0e\u901a\u4fe1\u5f00\u9500"},{"location":"Lab4-Gemm/#4","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u8ba8\u8bba\u7684\u4f18\u5316\u6280\u5de7\u5168\u90e8\u662f\u9488\u5bf9\u4e24\u4e2a\u7a20\u5bc6\u77e9\u9635\u7684\u4e58\u6cd5\u3002\u6211\u4eec\u7ed9\u51fa\u4ee5\u4e0b\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a \u7ed9\u5b9a\u77e9\u9635 \\(A, B, C\\) \uff1a \\[ \\mathbf{A} =\\begin{pmatrix}a_{11}&a_{12}&\\cdots &a_{1n}\\\\a_{21}&a_{22}&\\cdots &a_{2n}\\\\\\vdots &\\vdots &\\ddots &\\vdots \\\\a_{m1}&a_{m2}&\\cdots &a_{mn}\\\\\\end{pmatrix}, \\quad \\mathbf {B} =\\begin{pmatrix}b_{11}&b_{12}&\\cdots &b_{1p}\\\\b_{21}&b_{22}&\\cdots &b_{2p}\\\\\\vdots &\\vdots &\\ddots &\\vdots \\\\b_{n1}&b_{n2}&\\cdots &b_{np}\\\\\\end{pmatrix}, \\quad \\mathbf {C} =\\begin{pmatrix}c_{11}&c_{12}&\\cdots &c_{1p}\\\\c_{21}&c_{22}&\\cdots &c_{2p}\\\\\\vdots &\\vdots &\\ddots &\\vdots \\\\c_{m1}&c_{m2}&\\cdots &c_{mp}\\\\\\end{pmatrix} \\] \u77e9\u9635\u4e58\u6cd5 \\(C = AB\\) \u5b9a\u4e49\u4e3a\u5bf9\u4efb\u610f \\(c_{ij}\\) \u6709\uff1a \\[ c_{ij}=a_{i1}b_{1j}+a_{i2}b_{2j}+\\cdots +a_{in}b_{nj}=\\sum _{k=1}^{n}a_{ik}b_{kj} \\] \u4e3a\u4e86\u7b80\u5316\u95ee\u9898\uff0c\u6211\u4eec\u5047\u8bbe\u6240\u6709\u7684\u77e9\u9635\u90fd\u662f \\(N \\times N\\) \u7684\u65b9\u9635\u3002","title":"4 \u5b9e\u9a8c\u6b65\u9aa4"},{"location":"Lab4-Gemm/#41","text":"\u4e0b\u9762\u6211\u4eec\u9009\u62e9\u4ecb\u7ecd\u4e00\u4e9b\u5355\u673a\u4e0a\u7684\u4f18\u5316\u6280\u672f\u3002","title":"4.1 \u5355\u673a\u4f18\u5316"},{"location":"Lab4-Gemm/#411","text":"\u6700\u57fa\u7840\u7684\u77e9\u9635\u4e58\u6cd5\u81ea\u7136\u662f\u4e09\u5c42\u5faa\u73af\uff0c\u5373\u5bf9\u4e8c\u7ef4\u77e9\u9635 \\( \\(C\\) \\) \u7684\u6bcf\u4e00\u9879\u901a\u8fc7\u5355\u5c42\u5faa\u73af\u8ba1\u7b97\u5176\u7ed3\u679c\u3002 for ( int x = 0 ; x < N ; x ++ ) { for ( int y = 0 ; y < N ; y ++ ) { C [( x * N ) + y ] = 0 for ( int k = 0 ; k < N ; k ++ ) { C [( x * N ) + y ] += A [( x * N ) + k ] * B [( k * N ) + y ] } } }","title":"4.1.1 \u57fa\u51c6"},{"location":"Lab4-Gemm/#412","text":"\u57fa\u51c6\u4ee3\u7801\u5c3d\u53ef\u80fd\u591a\u7684\u4f7f\u7528\u4e86\u884c\u904d\u5386\u6765\u63d0\u9ad8\u5185\u5b58\u7684\u8bbf\u95ee\u6548\u7387\uff0c\u4f46\u662f\u5373\u4fbf\u5982\u6b64\uff0c\u7531\u4e8e\u77e9\u9635\u672c\u8eab\u5927\u5c0f\u8fc7\u5927\uff0c\u5bfc\u81f4\u90e8\u5206\u6309\u5217\u8bbf\u95ee\u7684\u60c5\u51b5\u4e0b\uff0c\u6574\u4f53\u5c40\u90e8\u6027\u8fd8\u662f\u4e0d\u9ad8\u3002\u6211\u4eec\u5f15\u5165\u5206\u5757\u6280\u672f\u6765\u8fdb\u4e00\u6b65\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5c40\u90e8\u6027\uff0c\u964d\u4f4e cache miss \u7684\u6982\u7387\u3002 \\[ A=\\left(\\begin{array}{ccc} A_{0,0} & \\cdots & A_{0, K-1} \\\\ \\vdots & & \\vdots \\\\ A_{M-1,0} & \\cdots & A_{M-1, K-1} \\end{array}\\right), \\quad B=\\left(\\begin{array}{ccc} B_{0,0} & \\cdots & B_{0, N-1} \\\\ \\vdots & & \\vdots \\\\ B_{K-1,0} & \\cdots & B_{K-1, N-1} \\end{array}\\right), \\quad C=\\left(\\begin{array}{ccc} C_{0,0} & \\cdots & C_{0, N-1} \\\\ \\vdots & & \\vdots \\\\ C_{M-1,0} & \\cdots & C_{M-1, N-1} \\end{array}\\right) \\] \u6b64\u65f6\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(C\\) \uff0c\u6211\u4eec\u90fd\u6709\uff1a \\(C_{ij}=\\sum _{k=0}^{N-1}A_{ik}B_{kj}\\) \u5927\u81f4\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a for ( int outerX = 0 ; outerX < N ; outerX ++ ) { for ( int outerY = 0 ; outerY < N ; outerY ++ ) { // Clear C_ij matrix for ( int innerX = 0 ; innerX < blockSize ; innerX ++ ) { for ( int innerY = 0 ; innerY < blockSize ; innerY ++ ) { // TODO: Clear C_ij matrix } } for ( int K = 0 ; K < N ; K ++ ) { // TODO: calculate C_ij = sum(A_ik * B_kj) } } } \u4e3a\u4e86\u4fdd\u8bc1\u8ba1\u7b97\u7684\u6b63\u786e\u6027\uff0c\u4f60\u9700\u8981\u975e\u5e38\u8c28\u614e\u7684\u5904\u7406\u5faa\u73af\u5c42\u6570\u3001\u4e0b\u6807\u3002","title":"4.1.2 \u5206\u5757"},{"location":"Lab4-Gemm/#413","text":"\u5bf9\u4e8e\u5faa\u73af\u7684\u6700\u5185\u5c42\uff0c\u5982\u679c\u6211\u4eec\u5c06\u5176\u5c55\u5f00\uff0c\u5f80\u5f80\u4f1a\u53d1\u73b0\u7c7b\u4f3c\u4e0b\u9762\u7684\u6a21\u5f0f\uff1a c [ i + 0 ] = a [ j + 0 ] * b [ someIdx0 ] c [ i + 1 ] = a [ j + 1 ] * b [ someIdx1 ] c [ i + 2 ] = a [ j + 2 ] * b [ someIdx2 ] c [ i + 3 ] = a [ j + 3 ] * b [ someIdx3 ] ... \u8fd9\u79cd\u89c4\u5f8b\u3001\u7edf\u4e00\u7684\u8ba1\u7b97\u975e\u5e38\u9002\u5408\u4f7f\u7528 SIMD \u6307\u4ee4\u8fdb\u884c\u8ba1\u7b97\u3002\u4ee5\u8ba1\u7b97 \\(C_i = A_i * B_i\\) \u4e3a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u4ee5\u4e0b\u5229\u7528 AVX \u6307\u4ee4\u7684\u5411\u91cf\u5316\u4ee3\u7801\uff1a __m256d a [ N ], b [ N ], c [ N ]; for ( int i = 0 ; i < N ; i ++ ) c [ i ] = __mm256_mul_pd ( a [ i ], b [ i ]); \u8fd9\u6bb5\u4ee3\u7801\u80fd\u591f\u5728\u4e00\u6761 CPU \u6307\u4ee4\u5185\u5b8c\u6210 4 \u4e2a double \u7684\u4e58\u6cd5\uff0c\u4ece\u800c\u5927\u5e45\u63d0\u9ad8\u7cfb\u7edf\u7684\u8ba1\u7b97\u6027\u80fd\u3002 \u540c\u6837\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u8ba1\u7b97\u7684\u6b63\u786e\u6027\uff0c\u4f60\u9700\u8981\u975e\u5e38\u8c28\u614e\u7684\u5904\u7406\u5faa\u73af\u5c42\u6570\u3001\u5730\u5740\u3002 \u7531\u4e8e\u5411\u91cf\u5316\u6307\u4ee4\u96c6\u5728\u4e0d\u540c\u5382\u5546\u3001\u4e0d\u540c\u578b\u53f7\u7684 CPU \u4e0a\u53ef\u80fd\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u624b\u5199\u5411\u91cf\u5316\u7684\u6210\u672c\u975e\u5e38\u7684\u9ad8\uff0c\u56e0\u6b64\u6211\u4eec\u5f80\u5f80 \u76f4\u63a5\u4f7f\u7528\u7f16\u8bd1\u5668\u7684\u81ea\u52a8\u5411\u91cf\u5316 \u3002\u5177\u4f53\u5f00\u542f\u65b9\u6cd5\u8bf7\u67e5\u9605\u4e0d\u540c\u5e73\u53f0\u4e0a\u76f8\u5173\u7f16\u8bd1\u5668\u7684\u7f16\u8bd1\u9009\u9879\u3002","title":"4.1.3 \u5411\u91cf\u5316"},{"location":"Lab4-Gemm/#414","text":"\u6570\u7ec4\u5c01\u88c5\u662f GEMM \u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u6280\u672f\u3002\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5373\u4fbf\u4f7f\u7528\u4e86\u5206\u5757\u6280\u672f\uff0cB \u4e2d\u7684\u8bbf\u5b58\u987a\u5e8f\u4f9d\u7136\u662f\u4e0d\u592a\u8fde\u8d2f\u7684\u2014\u2014\u4ee5 \\(16 \\times 16\\) \u5927\u5c0f\u7684\u77e9\u9635\u4e3a\u4f8b\uff0c\u5373\u4fbf\u6211\u4eec\u6309\u7167 \\(4 \\times 4\\) \u8fdb\u884c\u5206\u5757\uff0cB \u4e2d\u7684\u8bbf\u5b58\u987a\u5e8f\u4ecd\u7136\u4f1a\u662f\u6bcf 4 \u6b21\u7ebf\u6027\u8bbf\u95ee\u9047\u5230\u4e00\u6b21\u975e\u7ebf\u6027\u8bbf\u95ee\uff0c\u5982\u4e0b\u56fe\u4e0a\u534a\u90e8\u5206\u6240\u793a\u3002 \u89e3\u51b3\u65b9\u6848\u662f\uff1a\u63d0\u524d\u5c06 B \u77e9\u9635\u62c6\u5206\u6210 4 \u4e2a\u5c0f\u77e9\u9635\uff0c\u6bcf\u4e2a\u77e9\u9635\u5927\u5c0f\u4e3a \\(16 \\times 4\\) \u3002\u62c6\u5206\u540e\u7684\u6bcf\u4e2a\u77e9\u9635\u5185\u90e8\u662f\u8fde\u7eed\u5b58\u653e\u7684\uff0c\u8fd9\u6837\u6240\u6709\u7684\u8bbf\u5b58\u64cd\u4f5c\u90fd\u662f\u987a\u5e8f\u7684\u4e86\uff0c\u5982\u56fe\u4e2d\u4e0b\u534a\u90e8\u5206\u6240\u793a\u3002","title":"4.1.4 \u6570\u7ec4\u5c01\u88c5"},{"location":"Lab4-Gemm/#415","text":"\u5728\u4e4b\u524d\u4f53\u7cfb\u7ed3\u6784\u6982\u8ff0\u7684\u8bfe\u7a0b\u91cc\uff0c\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u5199\u5165\u5185\u5b58\u7684\u65f6\u5019\uff0c\u4e5f\u662f\u5b58\u5728\u5c40\u90e8\u6027\u7684\u3002\u867d\u7136\u5b58\u5728\u4e0d\u540c\u7684\u7f13\u5b58\u66ff\u6362\u3001\u5199\u56de\u7b56\u7565\uff0c\u4f46\u662f\u603b\u4f53\u4e0a\u987a\u5e8f\u5199\u5165\u4ecd\u7136\u662f\u8fdc\u8fdc\u5feb\u4e8e\u975e\u7ebf\u6027\u7684\u5199\u5165\u7684\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5148\u521b\u5efa\u4e00\u5757\u5199\u5165\u7f13\u5b58\uff0c\u7528\u4e8e\u6309\u7167\u8ba1\u7b97\u987a\u5e8f\u5b58\u653e\u7ed3\u679c\uff0c\u518d\u5728\u8ba1\u7b97\u5168\u90e8\u7ed3\u675f\u540e\u6279\u91cf\u62f7\u8d1d\u3001\u8c03\u6574\u5230\u5e94\u6709\u7684\u987a\u5e8f\u3002","title":"4.1.5 \u5199\u5165\u7f13\u5b58"},{"location":"Lab4-Gemm/#416","text":"\u5728\u4f18\u5316\u5b8c\u5c40\u90e8\u6027\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u8003\u8651\u4f7f\u7528\u7ebf\u7a0b\u7ea7\u5e76\u884c\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 OpenMP \u5373\u53ef\uff0c\u5177\u4f53\u65b9\u6cd5\u8bfe\u4e0a\u5df2\u7ecf\u4ecb\u7ecd\u3002\u8bf7\u6ce8\u610f\u7ebf\u7a0b\u95f4\u7684\u8d1f\u8f7d\u5747\u8861\uff0c\u5e76\u5e73\u8861\u8c03\u5ea6\u5f00\u9500\u3002 \u591a\u7ebf\u7a0b\u91cc\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u7531\u4e8e NUMA \u7684\u5b58\u5728\uff0c\u8de8\u7247\u8bbf\u95ee\u7684\u5f00\u9500\u5c06\u4f1a\u975e\u5e38\u7684\u5927\uff0c\u56e0\u6b64\u63d0\u9ad8\u6838\u7684\u6570\u636e\u4eb2\u548c\u6027\u4e5f\u975e\u5e38\u91cd\u8981\uff0c\u5982\u5c06\u7ebf\u7a0b\u7ed1\u5b9a\u5230\u6307\u5b9a\u6838\u5fc3\u4e0a\uff0c\u907f\u514d\u88ab OS \u8c03\u5ea6\u5230\u5176\u4ed6\u6838\u5fc3\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6838\u4e0a\u7684\u7ebf\u7a0b\u5e94\u5f53\u5c3d\u91cf\u53ea\u8bbf\u95ee\u8be5\u6838\u5fc3\u6240\u76f4\u8fde\u7684\u5185\u5b58\u533a\u57df\u3002","title":"4.1.6 \u7ebf\u7a0b\u7ea7\u5e76\u884c"},{"location":"Lab4-Gemm/#42","text":"\u5355\u673a\u4f18\u5316\u5b8c\u6bd5\u540e\uff0c\u518d\u8003\u8651\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u4f18\u5316\u3002\u6211\u4eec\u4f7f\u7528 MPI \u6765\u5904\u7406\u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1\uff0c\u5177\u4f53\u65b9\u6cd5\u8bfe\u4e0a\u5df2\u7ecf\u4ecb\u7ecd\u3002\u7531\u4e8e\u8fdb\u7a0b\u95f4\u5185\u5b58\u7a7a\u95f4\u662f\u4e0d\u5171\u4eab\u7684\uff0c\u8ba1\u7b97\u6240\u9700\u7684\u6570\u636e\u9700\u8981\u624b\u5de5\u8fdb\u884c\u5206\u53d1\uff0c\u4f60\u9700\u8981\u5408\u7406\u8bbe\u8ba1\u901a\u4fe1\u65b9\u5f0f\uff0c\u907f\u514d\u8fc7\u5ea6\u7684\u901a\u4fe1\u5f00\u9500\u3002\u53e6\u5916\uff0c\u4e5f\u4e0d\u8981\u5ffd\u7565\u4e86\u540c\u6b65\u5f00\u9500\u3002 \u66f4\u591a\u4f18\u5316\u6280\u5de7\u53ef\u4ee5\u53c2\u9605\u624b\u518c\u672b\u5c3e\u7684\u53c2\u8003\u8d44\u6599","title":"4.2 \u5206\u5e03\u5f0f\u5e76\u884c"},{"location":"Lab4-Gemm/#5","text":"\u5229\u7528\u4ee5\u4e0a\u6280\u672f\u5b8c\u6210 GEMM \u5206\u5e03\u5f0f\u5b9e\u73b0\uff0c\u7528\u4e8e\u5b8c\u6210\u4ee5\u4e0b\u8ba1\u7b97\u4efb\u52a1\uff1a","title":"5 \u5b9e\u9a8c\u4efb\u52a1\u4e0e\u8981\u6c42"},{"location":"Lab4-Gemm/#51","text":"\u8f93\u5165\u77e9\u9635 \\(A, B\\) \uff0c\u6807\u91cf \\(n\\) \uff0c\u8ba1\u7b97\u77e9\u9635\u8fde\u4e58\u79ef\uff1a $$ \\prod_{k=0}^nA+kB = A (A + B) (A+2B)\\dots(A+nB) $$ \u5176\u4e2d\u77e9\u9635 \\(A, B\\) \u4e3a\u968f\u673a\u751f\u6210\u7684 \\(10001 \\times 10001\\) signed int 32 \u77e9\u9635\u3002\u51fa\u4e8e\u65b9\u4fbf\u8d77\u89c1\u65e0\u9700\u8003\u8651\u6ea2\u51fa\u3002","title":"5.1 \u95ee\u9898\u63cf\u8ff0"},{"location":"Lab4-Gemm/#52","text":"slurm \u96c6\u7fa4\uff0c\u8be6\u89c1\u672c\u624b\u518c\u7b2c 2 \u8282\u3002","title":"5.2 \u8bc4\u6d4b\u73af\u5883"},{"location":"Lab4-Gemm/#53","text":"\u6211\u4eec\u5c06\u63d0\u4f9b\u4e00\u4efd\u4ee3\u7801\u5305\uff08\u8be6\u89c1 starter_code \uff09\uff0c\u5305\u542b\u6b63\u786e\u6027\u68c0\u9a8c\u4ee5\u53ca\u6027\u80fd\u8ba1\u7b97\uff0c\u5f62\u5f0f\u5982\u4e0b\u3002 hw.h // mat_A, mat_B and result point to memory at least 10001*10001*4B // n is the scalar and will be used to check your answer void input ( int * mat_A , int * mat_B ); void output ( int * result , int n ); hw_baseline.cpp #include \"hw.h\" int matA [ 10001 * 10001 ]; int matB [ 10001 * 10001 ]; int main () { input ( matA , matB ); int n = 1 ; // do calculation here output ( matA , n ); } \u4f60\u53ef\u4ee5\u4f7f\u7528 make \u6784\u5efa\u4e8c\u8fdb\u5236\u7a0b\u5e8f\uff0c\u5e76\u4f7f\u7528 make run \u8fd0\u884c\u4f60\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u3002","title":"5.3 \u57fa\u51c6\u4ee3\u7801"},{"location":"Lab4-Gemm/#54","text":"\u6211\u4eec\u4f7f\u7528\u6bcf\u79d2\u8ba1\u7b97\u91cf \uff08Operations Per Second\uff09\u6765\u8bc4\u4ef7\u4f60\u7684\u7a0b\u5e8f\u6027\u80fd\uff0c\u5176\u8ba1\u7b97\u2f45\u6cd5\u5982\u4e0b\uff1a \\[ Ops = \\frac{n}{T}C \\] \u5176\u4e2d \\(C=10001^3+2\\cdot10001^2\\) \u4e3a\u5e38\u91cf\u3002","title":"5.4 \u8bc4\u6d4b\u65b9\u5f0f"},{"location":"Lab4-Gemm/#55","text":"\u4f5c\u4e1a\u6ee1\u5206 20 \u5206\u3002 \u82e5\u7b54\u6848\u9519\u8bef\u6216\u672a\u80fd\u5728 10 \u5206\u949f\u5185\u7ed9\u51fa \\(n = 1\\) \u65f6\u7684\u7ed3\u679c\uff0c\u89c6\u60c5\u51b5\u7ed9 0\u301c5 \u5206 \u7b54\u6848\u6b63\u786e\u4e14\u2f84\u5c11\u5728 10 \u5206\u949f\u5185\u7ed9\u51fa \\(n=1\\) \u65f6\u7684\u7ed3\u679c\uff0c\u7ed9 5 \u5206 \u5269\u4f59 15 \u5206\u5c06\u6309\u6240\u6709\u6709\u6548\u63d0\u4ea4\u7a0b\u5e8f\u7684\u6bcf\u79d2\u8ba1\u7b97\u91cf \\(Ops\\) \u6392\u540d\u7ed9\u51fa\uff0c\u9075\u5faa\u6b63\u6001\u5206\u5e03","title":"5.5 \u8ba1\u5206\u65b9\u5f0f"},{"location":"Lab4-Gemm/#56","text":"\u8bf7\u5c06\u6700\u4f18\u7684\u6e90\u4ee3\u7801\u3001Makefile/CMakeLists.txt\u3001\u8fd0\u884c\u53c2\u6570\uff08\u5305\u62ec slurm \u547d\u4ee4\u4e0e\u53c2\u6570\uff09\u3001 \\(Ops\\) \u503c\u4ee5\u53ca\u5b9e\u9a8c\u62a5\u544a\u6253\u5305\u63d0\u4ea4\u5230\u5b66\u5728\u6d59\u5927\u3002 \u622a\u6b62\u540e\uff0c\u6211\u4eec\u5c06\u68c0\u67e5\u6e90\u4ee3\u7801\u7684\u5408\u6cd5\u6027\uff08\u662f\u5426\u6284\u88ad\u3001\u4f7f\u7528\u4e86\u8fdd\u7981\u5e93\u7b49\uff09\u5e76\u91cd\u65b0\u7f16\u8bd1\u6d4b\u8bd5\u3002","title":"5.6 \u4f5c\u4e1a\u63d0\u4ea4\u65b9\u5f0f"},{"location":"Lab4-Gemm/#6","text":"\u72ec\u7acb\u5b8c\u6210\u672c\u6b21\u5b9e\u9a8c\uff0c\u4e25\u7981\u6284\u88ad\uff0c\u6211\u4eec\u5c06\u4f1a\u8fdb\u884c\u67e5\u91cd\uff0c\u4e00\u65e6\u53d1\u73b0\u672c\u6b21\u5b9e\u9a8c\u8ba1 0 \u5206\u3002 \u653b\u51fb\u5e73\u53f0\u3001\u6076\u610f\u6d6a\u8d39\u8282\u70b9\u8d44\u6e90\u7b49\u5e72\u6270\u4ed6\u4eba\u7684\u884c\u4e3a\uff0c\u4ee5\u4f5c\u5f0a\u8bba\u5904\u3002 \u53ea\u5141\u8bb8\u4f7f\u7528 OpenMP / Intel MPI / Intel C Compiler / GNU Compiler Colletion \u7b49\uff0c \u4e0d\u5141\u8bb8\u4f7f\u7528 Intel MKL / BLAS / LAPACK \u7b49\u7b2c\u4e09\u65b9\u5de5\u5177\u5e93\u3002\u82e5\u6700\u7ec8\u63d0\u4ea4\u7684\u4ee3\u7801\u4f7f\u7528\u7981\u6b62\u7684\u5e93\uff0c\u4ee5\u4f5c\u5f0a\u8bba\u5904\u3002 \u4efb\u4f55\u95ee\u9898\u8bf7\u8054\u7cfb\u7fa4\u5185\u52a9\u6559\u3002","title":"6 \u6ce8\u610f\u4e8b\u9879"},{"location":"Lab4-Gemm/#7-bonus","text":"\u672c\u90e8\u5206\u9009\u505a\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u5c1d\u8bd5\u7740\u5b8c\u6210\u3002 Bonus \u90e8\u5206\u5b8c\u6210\u5373\u6709\u52a0\u5206\uff08\u5b8c\u6210 Bonus \u90e8\u5206\u5b9e\u9a8c\u8981\u6c42\uff0c\u4e14\u80fd\u591f\u901a\u8fc7\u7f16\u8bd1\u4e0e\u6d4b\u8bd5\uff09\uff0c\u6211\u4eec\u5c06\u6839\u636e\u5b8c\u6210\u8d28\u91cf\u63d0\u4f9b 5-10 \u5206\u7684\u52a0\u5206\uff08\u4e0e Lab 4 \u6743\u91cd\u76f8\u540c\uff09\u3002","title":"7 Bonus"},{"location":"Lab4-Gemm/#71","text":"Fortran \u662f\u4e16\u754c\u4e0a\u7b2c\u4e00\u4e2a\u88ab\u6b63\u5f0f\u91c7\u7528\u5e76\u6d41\u4f20\u81f3\u4eca\u7684\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83\u56e0\u8f83\u4e3a\u5bb9\u6613\u5b66\u4e60\u800c\u88ab\u5927\u91cf\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97\u9886\u57df\u7684\u4ee3\u7801\u7f16\u5199\u3002\u5176\u7f16\u8bd1\u5668\u5f80\u5f80\u4f1a\u968f C/C++ \u7684\u7f16\u8bd1\u5668\u4e00\u540c\u5b89\u88c5\uff0c\u4e14\u5176\u7f16\u8bd1\u6d41\u7a0b\u548c C/C++ \u7c7b\u4f3c\uff0c\u6545\u5176\u80fd\u548c C/C++ \u7a0b\u5e8f\u8fdb\u884c\u6df7\u5408\u7f16\u8bd1\u3002 \u4f60\u9700\u8981\u5b8c\u6210\u7684\u4efb\u52a1\u662f\uff0c\u5c06\u4e0a\u8ff0\u5b9e\u9a8c\u5185\u5bb9\u4f7f\u7528 Fortran \u91cd\u65b0\u5b9e\u73b0\uff0c\u5e76\u80fd\u591f\u548c C/C++ \u4ee3\u7801\u5b9e\u73b0\u6df7\u5408\u7f16\u8bd1\uff08\u5373\u5728 Fortran \u4ee3\u7801\u4e2d\u8c03\u7528 hw.h \u4e2d\u7684 input/output \u51fd\u6570\uff0c\u7f16\u8bd1\u751f\u6210\u4e00\u4e2a\u7531\u4e24\u79cd\u8bed\u8a00\u7f16\u5199\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\uff09\uff0c\u901a\u8fc7 output \u51fd\u6570\u7684\u6d4b\u8bd5\u3002","title":"7.1 \u5b9e\u9a8c\u4efb\u52a1"},{"location":"Lab4-Gemm/#72","text":"\u4f7f\u7528 Fortran \u91cd\u65b0\u7f16\u5199\u672c\u5b9e\u9a8c\uff0c\u5e76\u5b9e\u73b0\u6df7\u5408\u7f16\u8bd1 \u6d4b\u8bd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027\u548c \\(Ops\\) \u63d0\u4ea4\u4ee3\u7801\u548c\u7b80\u8981\u7684\u62a5\u544a\uff08\u53ef\u4ee5\u9644\u5728 Lab 4 \u62a5\u544a\u4e2d\uff09 \u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 Fortran \u8fdb\u884c Lab 4 \u7684\u7f16\u5199\u5e76\u53c2\u4e0e\u6392\u540d\uff0c\u4e00\u8d77\u83b7\u5f97 Lab 4 \u53ca Bonus \u7684\u5206\u6570\u3002 \u4f60\u4e5f\u53ef\u4ee5\u540c\u65f6\u63d0\u4ea4\u4f7f\u7528 C/C++ \u7684\u5b9e\u73b0\u548c\u4f7f\u7528 Fortran \u7684\u5b9e\u73b0\uff0c\u5bf9\u6bd4\u4e24\u79cd\u5b9e\u73b0\u7684\u7ed3\u679c\uff0c\u5e76\u6ce8\u660e\u4f7f\u7528\u54ea\u4e2a\u5b9e\u73b0\u53c2\u4e0e\u6700\u7ec8 Lab 4 \u7684\u6392\u540d\u8ba1\u7b97 Lab 4 \u7684\u5206\u6570\u3002\u6b64\u65f6\u5efa\u8bae\u5c06 Fortran \u6e90\u7801\u548c C/C++ \u6e90\u7801\u4e00\u5e76\u4e0a\u4ea4\uff0c\u5e76\u901a\u8fc7 Makefile/CMakeLists.txt \u6ce8\u660e\u4e24\u79cd\u5b9e\u73b0\u5206\u522b\u7684\u6784\u5efa\u4e0e\u8fd0\u884c\u65b9\u5f0f\u3002","title":"7.2 \u5b9e\u9a8c\u8981\u6c42"},{"location":"Lab4-Gemm/#_1","text":"https://en.wikipedia.org/wiki/Basic_Linear_Algebra_Subprograms https://en.wikipedia.org/wiki/General_matrix_multiply https://github.com/flame/how-to-optimize-gemm/wiki https://tvm.apache.org/docs/tutorials/optimize/opt_gemm.html Huang J, van. BLISlab: A Sandbox for Optimizing GEMM. arXiv.org. Published 2016. Accessed July 10, 2021. https://arxiv.org/abs/1609.00076 \u8ba1\u7b97\u673a\u6559\u80b2\u4e2d\u7f3a\u5931\u7684\u4e00\u8bfe \u00b7 the missing semester of your cs education (missing-semester-cn.github.io) Introduction to Fortran (ourcodingclub.github.io) Quickstart tutorial - Fortran Programming Language (fortran-lang.org)","title":"\u53c2\u8003\u8d44\u6599"},{"location":"Lab4-Gemm/code/","text":"Build $ make Run $ make run","title":"Build"},{"location":"Lab4-Gemm/code/#build","text":"$ make","title":"Build"},{"location":"Lab4-Gemm/code/#run","text":"$ make run","title":"Run"},{"location":"Lab5-DL/","text":"\u5b9e\u9a8c\u4e94\uff1a\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u4e0e\u52a0\u901f 1 \u5b9e\u9a8c\u7b80\u4ecb \u6df1\u5ea6\u5b66\u4e60 \uff08Deep Learning\uff09\u662f \u673a\u5668\u5b66\u4e60 \u7684\u5206\u652f\uff0c\u662f\u4e00\u79cd\u4ee5 \u4eba\u5de5\u795e\u7ecf\u7f51\u7edc \u4e3a\u67b6\u6784\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u8868\u5f81\u5b66\u4e60\u7684 \u7b97\u6cd5 \u3002\u6df1\u5ea6\u5b66\u4e60\u80fd\u591f\u53d6\u5f97\u5982\u6b64\u5353\u8d8a\u7684\u6210\u5c31\uff0c\u9664\u4e86\u4f18\u8d8a\u7684\u7b97\u6cd5\u3001\u5145\u8db3\u7684\u6570\u636e\uff0c\u66f4\u79bb\u4e0d\u5f00\u5f3a\u52b2\u7684\u7b97\u529b\u3002\u8fd1\u5e74\u6765\uff0c\u6df1\u5ea6\u5b66\u4e60\u76f8\u5173\u7684\u57fa\u7840\u8bbe\u65bd\u9010\u6e10\u6210\u719f\uff0c\u4ece\u7f51\u7edc\u8bbe\u8ba1\u65f6\u7684\u8bad\u7ec3\u3001\u4f18\u5316\uff0c\u5230\u843d\u5730\u7684\u63a8\u7406\u52a0\u901f\uff0c\u90fd\u6709\u975e\u5e38\u4f18\u79c0\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5176\u4e2d\uff0c\u5bf9\u4e8e\u7b97\u529b\u7684\u9700\u6c42\u6700\u5927\u7684\u90e8\u5206\u4e4b\u4e00\u662f\u7f51\u7edc\u7684\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u5b83\u4e5f\u56e0\u6b64\u6210\u4e3a HPC \u9886\u57df\u7ecf\u5e38\u7814\u7a76\u7684\u8bdd\u9898\u3002 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc \uff08Convolutional Neural Network, CNN \uff09\u662f\u4e00\u79cd \u524d\u9988\u795e\u7ecf\u7f51\u7edc \uff0c\u5bf9\u4e8e\u5927\u578b\u56fe\u50cf\u5904\u7406\u6709\u51fa\u8272\u8868\u73b0\u3002 GPT \uff08Generative Pre-trained Transformer\uff09\u662f\u4e00\u7cfb\u5217\u81ea\u56de\u5f52\u8bed\u8a00\u6a21\u578b\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u5206\u7c7b\u6216\u4ea7\u751f\u4eba\u7c7b\u53ef\u4ee5\u7406\u89e3\u7684\u81ea\u7136\u8bed\u8a00\u3002GPT \u7cfb\u5217\u7531\u5728\u65e7\u91d1\u5c71\u7684\u4eba\u5de5\u667a\u80fd\u516c\u53f8 OpenAI \u8bad\u7ec3\u4e0e\u5f00\u53d1\uff0c\u6a21\u578b\u8bbe\u8ba1\u57fa\u4e8e\u8c37\u6b4c\u5f00\u53d1\u7684 transformer\u3002 \u672c\u6b21\u5b9e\u9a8c\u6211\u4eec\u5c06\u5b8c\u6210 LeNet-5 \u548c GPT \u6a21\u578b\u7684\u8bad\u7ec3\uff0c\u5e76\u5c1d\u8bd5\u4f7f\u7528\u5404\u79cd\u4f18\u5316\u6280\u672f\u52a0\u901f\u8bad\u7ec3\u8fc7\u7a0b\u3002 \u8003\u8651\u5230\u90e8\u5206\u540c\u5b66\u6b64\u524d\u5bf9\u4e8e\u6df1\u5ea6\u5b66\u4e60\u5e76\u6ca1\u6709\u5f88\u591a\u4e86\u89e3\uff0c\u672c\u6b21\u5b9e\u9a8c\u7684 LeNet-5 \u90e8\u5206\u4e3b\u8981\u76ee\u7684\u4e3a\u5f15\u5bfc\u5927\u5bb6\u719f\u6089\u6df1\u5ea6\u5b66\u4e60\u7684\u6d41\u7a0b\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u5b8c\u6210\u5373\u53ef\u5f97\u5230\u5206\u6570\uff0c\u800c GPT \u90e8\u5206\u4e3b\u8981\u76ee\u7684\u662f\u5f15\u5bfc\u5927\u5bb6\u5c1d\u8bd5\u5bf9\u4e8e\u5927\u578b\u7f51\u7edc\u7684\u8bad\u7ec3\u8fdb\u884c\u4f18\u5316\uff0c\u56e0\u6b64\u6211\u4eec\u4f1a\u6839\u636e\u6a21\u578b\u7684\u52a0\u901f\u60c5\u51b5\u8fdb\u884c\u7ed9\u5206\u3002 2 \u5b9e\u9a8c\u73af\u5883 ssh 10 .15.82.243 -p 12222 \u7528\u6237\u540d\u4e0e Lab 4 \u76f8\u540c\u3002\u8be5\u96c6\u7fa4\u4e5f\u7531 slurm \u7ba1\u7406\uff0c\u53ef\u4ee5\u4f7f\u7528 salloc \u8fdb\u884c\u5b9e\u9a8c\u3002\u96c6\u7fa4\u81ea\u5e26 conda\u3001pytorch\u3001nvcc \u7b49\u3002\u96c6\u7fa4\u5404\u4e2a\u8282\u70b9\u7684 home \u76ee\u5f55\u662f\u5171\u4eab\u7684\uff0c\u56e0\u6b64\u73af\u5883\u914d\u7f6e\u7b49\u53ef\u4ee5\u5728\u767b\u5f55\u8282\u70b9\u8fdb\u884c\u3002 \u96c6\u7fa4\u5177\u6709\u4e24\u4e2a\u961f\u5217\uff0c\u6bcf\u4e2a\u961f\u5217\u6709\u4e24\u4e2a\u5355 GPU \u8282\u70b9\u3002debug \u961f\u5217\u7528\u4e8e\u8c03\u8bd5\uff0c\u4efb\u52a1\u65f6\u957f\u4e0a\u9650\u4e3a 5 \u5206\u949f\u3002normal \u961f\u5217\u7528\u4e8e\u6536\u655b\u6027\u9a8c\u8bc1\u53ca\u65f6\u95f4\u7684\u8bc4\u6d4b\uff0c\u4efb\u52a1\u65f6\u957f\u4e0a\u9650\u4e3a 20 \u5206\u949f\u3002\u961f\u5217\u9009\u62e9\u53ef\u5728 salloc \u65f6\u52a0\u5165 -p \u53c2\u6570\uff0c\u5982\u5e0c\u671b\u5728 debug \u961f\u5217\u4e0a\u9762\u8fdb\u884c\u5355\u5361\u8bad\u7ec3\uff1a srun -p debug -N 1 --pty bash \u4efb\u52a1\u65f6\u957f\u4e0a\u9650\u5230\u8fbe\u65f6\uff0c\u8bf7\u53ca\u65f6\u5173\u95ed\u4efb\u52a1\u5e76\u91cd\u65b0\u6392\u961f\u3002\u5982\u679c\u53d1\u73b0\u8282\u70b9 GPU \u5360\u7528\u7387\u5f02\u5e38\uff0c\u53ef\u4ee5\u901a\u8fc7 htop \u7b49\u547d\u4ee4\u89c2\u5bdf\u60c5\u51b5\uff0c\u5e76\u901a\u77e5\u52a9\u6559\u6740\u6b7b\u76f8\u5e94\u8fdb\u7a0b\u3002 3 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd 3.1 \u7f51\u7edc\u6a21\u578b 3.1.1 CNN \u5377\u79ef\u795e\u7ecf\u7f51\u7edc \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5377\u79ef\u5c42\u548c\u9876\u7aef\u7684\u5168\u8fde\u901a\u5c42\uff08\u5bf9\u5e94\u7ecf\u5178\u7684\u795e\u7ecf\u7f51\u7edc\uff09\u7ec4\u6210\uff0c\u540c\u65f6\u4e5f\u5305\u62ec\u5173\u8054\u6743\u91cd\u548c\u6c60\u5316\u5c42\uff08pooling layer\uff09\u3002\u8fd9\u4e00\u7ed3\u6784\u4f7f\u5f97\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u80fd\u591f\u5229\u7528\u8f93\u5165\u6570\u636e\u7684\u4e8c\u7ef4\u7ed3\u6784\u3002\u4e0e\u5176\u4ed6\u6df1\u5ea6\u5b66\u4e60\u7ed3\u6784\u76f8\u6bd4\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5728\u56fe\u50cf\u548c \u8bed\u97f3\u8bc6\u522b \u65b9\u9762\u80fd\u591f\u7ed9\u51fa\u66f4\u597d\u7684\u7ed3\u679c\u3002\u8fd9\u4e00\u6a21\u578b\u4e5f\u53ef\u4ee5\u4f7f\u7528 \u53cd\u5411\u4f20\u64ad\u7b97\u6cd5 \u8fdb\u884c\u8bad\u7ec3\u3002\u76f8\u6bd4\u8f83\u5176\u4ed6\u6df1\u5ea6\u3001\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u9700\u8981\u8003\u91cf\u7684\u53c2\u6570\u66f4\u5c11\uff0c\u4f7f\u4e4b\u6210\u4e3a\u4e00\u79cd\u9887\u5177\u5438\u5f15\u529b\u7684\u6df1\u5ea6\u5b66\u4e60\u7ed3\u6784\u3002 3.1.2 LeNet-5 LeNet-5\u662f\u4e00\u4e2a\u8f83\u7b80\u5355\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u5176\u7ed3\u6784\uff1a\u8f93\u5165\u7684\u4e8c\u7ef4\u56fe\u50cf\uff0c\u5148\u7ecf\u8fc7\u4e24\u6b21\u5377\u79ef\u5c42\u5230\u6c60\u5316\u5c42\uff0c\u518d\u7ecf\u8fc7\u5168\u8fde\u63a5\u5c42\uff0c\u6700\u540e\u8f93\u51fa\u6bcf\u79cd\u5206\u7c7b\u9884\u6d4b\u5f97\u5230\u7684\u6982\u7387\u3002 \u6709\u5173\u4e8e\u5176\u66f4\u8be6\u7ec6\u7684\u7ed3\u6784\u53ef\u4ee5\u5728 \u539f\u8bba\u6587 \u4e2d\u627e\u5230\u3002 3.1.3 GPT \u5728\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08Natural language processing, NLP\uff09\u4e2d\uff0c\u65e9\u671f\u4f7f\u7528\u7684\u662f\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff08Recurrent Neural Network, RNN \uff09\u3002RNN \u4e0e CNN \u8fd9\u6837\u7684\u524d\u9988\u7f51\u7edc\u4e0d\u540c\uff0cRNN \u4e2d\u5b58\u5728\u53cd\u9988\u548c\u9690\u85cf\u5355\u5143\uff0c\u4f7f\u5b83\u53ef\u4ee5\u300c\u8bb0\u4f4f\u300d\u4e4b\u524d\u8bfb\u5230\u7684\u5185\u5bb9\u3002\u4e3a\u4e86\u89e3\u51b3\u6df1\u5c42\u7f51\u7edc\u4e2d\u68af\u5ea6\u6d88\u5931\u6216\u7206\u70b8\u7684\u95ee\u9898\uff0c\u5f15\u5165\u4e86\u957f\u77ed\u671f\u8bb0\u5fc6\uff08Long short-term memory, LSTM \uff09\u3002\u800c\u4e3a\u4e86\u89e3\u51b3\u4f20\u7edf RNN \u53ea\u80fd\u8bb0\u4f4f\u524d\u9762\u7684\u95ee\u9898\uff0c\u63d0\u51fa\u4e86\u53cc\u5411\u7684 LSTM\u3002\u5728\u6b64\u57fa\u7840\u4e0a\u5f15\u5165\u7684\u6ce8\u610f\u529b\u673a\u5236\uff08attention\uff09\uff0c\u4f7f\u5f97\u7f51\u7edc\u80fd\u6ce8\u610f\u53e5\u5b50\u4e2d\u91cd\u8981\u4f4d\u7f6e\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u5141\u8bb8\u5728\u7ffb\u8bd1\u4e2d\u53ef\u4ee5\u6539\u53d8\u8bcd\u8bed\u7684\u987a\u5e8f\u3002 \u4e0d\u4e45\u540e\uff0c\u7814\u7a76\u8005\u53d1\u73b0\u53ea\u9760\u6ce8\u610f\u529b\u673a\u5236\u800c\u65e0\u9700 RNN \u6216 CNN\uff0c\u5c31\u80fd\u8fbe\u5230\u8f83\u597d\u7684\u6548\u679c\uff0c\u8fd9\u5c31\u662f Transformer \u6a21\u578b\u3002\u4e0e RNN \u4e0d\u540c\u7684\u662f\uff0cTransformer \u6a21\u578b\u80fd\u591f\u4e00\u6b21\u6027\u5904\u7406\u6240\u6709\u8f93\u5165\u6570\u636e\u3002\u6ce8\u610f\u529b\u673a\u5236\u53ef\u4ee5\u4e3a\u8f93\u5165\u5e8f\u5217\u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e\u63d0\u4f9b\u4e0a\u4e0b\u6587\u3002\u8fd9\u79cd\u67b6\u6784\u5141\u8bb8\u66f4\u9ad8\u7684\u5e76\u884c\u5ea6\uff0c\u5e76\u4ee5\u6b64\u51cf\u5c11\u8bad\u7ec3\u65f6\u95f4\u3002 \u4ee5\u4e0b\u4e3a Transformer \u7684\u7ed3\u6784\uff1a\u5305\u542b\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\uff0c\u90fd\u7531\u591a\u4e2a\u591a\u5934\u81ea\u6ce8\u610f\u529b\u673a\u5236\u548c\u5168\u8fde\u63a5\u5c42\u5806\u53e0\u800c\u6210\uff0c\u5c42\u95f4\u548c\u5c42\u5185\u5b58\u5728\u5f52\u4e00\u5316\u64cd\u4f5c\uff1b\u8f93\u5165\u7531\u8bcd\u5d4c\u5165\u5411\u91cf\u52a0\u4e0a\u4f4d\u7f6e\u4fe1\u606f\u5f97\u51fa\u3002 Transformer \u7684\u8be6\u7ec6\u7ed3\u6784\u53ef\u53c2\u8003 \u539f\u8bba\u6587 \u3002 2018 \u5e74\uff0cOpenAI \u63d0\u51fa\u4e86\u751f\u6210\u9884\u8bad\u7ec3 Transformer \u6a21\u578b\uff08Generative Pre-trained Transformer, GPT \uff09\u3002\u4e0e\u5148\u524d\u57fa\u4e8e\u76d1\u7763\u5f0f\u5b66\u4e60\u7684 NLP \u6a21\u578b\u4e0d\u540c\uff0cGPT \u5728\u9884\u8bad\u7ec3\u751f\u6210\u9636\u6bb5\u662f\u65e0\u76d1\u7763\u7684\uff08\u4e0d\u9700\u8981\u6807\u6ce8\uff09\uff0c\u53ea\u5728\u9700\u8981\u9002\u5e94\u7279\u5b9a\u4efb\u52a1\u7684 \u5fae\u8c03 \uff08fine-tuning\uff09\u65f6\u9700\u8981\u76d1\u7763\uff0c\u964d\u4f4e\u4e86\u5927\u89c4\u6a21 NLP \u6a21\u578b\u7684\u95e8\u69db\u3002GPT \u7684\u7ed3\u6784\u662f 12 \u5c42\u4ec5\u5305\u542b\u89e3\u7801\u5668\u7684 Transformer\u3002\u4e00\u5e74\u540e\u7684 GPT-2 \u662f\u5bf9 GPT \u7684\u76f4\u63a5\u653e\u5927\uff0c\u53c2\u6570\u91cf\u548c\u6570\u636e\u96c6\u90fd\u589e\u52a0\u4e86\u4e00\u4e2a\u91cf\u7ea7\uff0c\u53c2\u6570\u91cf\u8fbe\u5230\u4e86 15 \u4ebf\uff0c\u53d6\u5f97\u4e86\u66f4\u597d\u7684\u6548\u679c\u548c\u8fc1\u79fb\u5b66\u4e60\u80fd\u529b\u3002\u4e0b\u4e00\u4ee3\u7684 GPT-3 \u8fbe\u5230\u4e86 1750 \u4ebf\u53c2\u6570\uff0c\u751f\u6210\u7684\u6587\u7ae0\u5df2\u7ecf\u5f88\u96be\u4e0e\u4eba\u7c7b\u5199\u7684\u533a\u5206\u51fa\u6765\u3002\u5728\u4e00\u4e9b\u9886\u57df\uff0cGPT-3 \u4e5f \u4e0d\u518d\u9700\u8981 \u4e13\u95e8\u7684\u5fae\u8c03\uff0c\u800c\u53ea\u9700\u8981\u63d0\u4f9b\u4f8b\u5b50\u7b49\u6587\u672c\u4ea4\u4e92\u5373\u53ef\u5b8c\u6210\u4efb\u52a1\u3002\u5927\u5bb6\u53ef\u80fd\u719f\u6089\u7684 GitHub Copilot \u4e5f\u662f GPT \u7684\u4e00\u4e2a\u4e3b\u8981\u5e94\u7528\u3002GPT \u7cfb\u5217\u6a21\u578b\u7684\u7ed3\u6784\u4e3b\u8981\u6e90\u4e8e Transformer \u7684 Encoder \u90e8\u5206\u3002 \u672c\u6b21\u5b9e\u9a8c\u8981\u6c42\u8bad\u7ec3\u4e00\u4e2a GPT-2/3 \u7ed3\u6784\u7684\u6a21\u578b\uff0c\u5177\u4f53\u6a21\u578b\u7ed3\u6784\u8bf7\u53c2\u9605 GPT-2 \u548c GPT-3 \u7684\u539f\u8bba\u6587\u3002 3.2 \u6570\u636e\u96c6 3.2.1 MNIST \u624b\u5199\u6570\u5b57\u6570\u636e\u96c6 MNIST \u6570\u636e\u96c6 (Mixed National Institute of Standards and Technology database) \u662f\u7f8e\u56fd\u56fd\u5bb6\u6807\u51c6\u4e0e\u6280\u672f\u7814\u7a76\u9662\u6536\u96c6\u6574\u7406\u7684\u5927\u578b\u624b\u5199\u6570\u5b57\u6570\u636e\u5e93\uff0c\u5305\u542b 60,000 \u4e2a\u793a\u4f8b\u7684\u8bad\u7ec3\u96c6\u4ee5\u53ca 10,000 \u4e2a\u793a\u4f8b\u7684\u6d4b\u8bd5\u96c6\u3002 MNIST \u6570\u636e\u96c6\u4e0b\u8f7d\uff1ahttp://yann.lecun.com/exdb/mnist/index.html 3.2.2 Web of Science \u6570\u636e\u96c6 Web of Science \u662f\u4e00\u4e2a\u4ed8\u8d39\u7684\u6587\u732e\u5143\u6570\u636e\u5e93\uff0c\u901a\u8fc7\u6821\u7f51\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\u3002\u8be5\u6570\u636e\u96c6\u539f\u5148\u7528\u4e8e\u6587\u672c\u5c42\u6b21\u5316\u5206\u7c7b\uff0c\u7531\u4e8e\u6211\u4eec\u91c7\u7528\u7684\u662f\u65e0\u76d1\u7763\u5b66\u4e60\u7684\u9884\u8bad\u7ec3\uff0c\u56e0\u6b64\u4e0d\u5173\u5fc3\u5b83\u7ed9\u51fa\u7684\u6807\u7b7e\uff0c\u53ea\u8981\u7528\u76ee\u5f55\u4e0b\u7684 X \u6587\u672c\u8bad\u7ec3\u3002\u5143\u6570\u636e\u76ee\u5f55\uff08\u5305\u542b\u6458\u8981\u548c\u5173\u952e\u8bcd\uff09\u4e5f\u53ef\u4ee5\u5ffd\u7565\u3002 \u6570\u636e\u96c6\u4e0b\u8f7d\uff1ahttps://data.mendeley.com/datasets/9rw3vkcfy4/6 4 \u5b9e\u9a8c\u6b65\u9aa4 4.1 LeNet-5 \u8bad\u7ec3 4.1.1 \u6570\u636e\u51c6\u5907 \u6211\u4eec\u5efa\u8bae\u5229\u7528 torchvision \u63d0\u4f9b\u7684 torchvision.datasets \u65b9\u6cd5\u5bfc\u5165\u6570\u636e\uff0c torchvision.datasets \u6240\u63d0\u4f9b\u7684\u63a5\u53e3\u5341\u5206\u65b9\u4fbf\uff0c\u4e4b\u540e\u4f60\u53ef\u4ee5\u7528 torch.utils.data.DataLoader \u7ed9\u4f60\u7684\u6a21\u578b\u52a0\u8f7d\u6570\u636e\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u4e5f\u6b22\u8fce\u4f60\u81ea\u5b9a\u4e49\u4f60\u7684 Dataset \u7c7b\uff0c\u8fd9\u6837\u505a\u4f1a\u7ed9\u4f60\u5e26\u6765\u989d\u5916\u7684\u5206\u6570\u3002\u4e3a\u6b64\uff0c\u4f60\u9700\u8981\u7ee7\u627f torch.utils.data.Dataset \u5e76\u81f3\u5c11\u9700\u8981\u91cd\u5199\u5176\u4e2d\u7684 __len__() \u548c __getitem__() \u51fd\u6570\uff0c \u8fd9\u91cc \u6709\u5b98\u65b9\u5bf9 torch.utils.data \u7c7b\u7684\u4ecb\u7ecd\uff0c\u5b83\u6216\u8bb8\u53ef\u4ee5\u5e2e\u5230\u4f60\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u7528\u5230\u7684 MNIST \u6570\u636e\u96c6\u53ef\u7528 torchvision.datasets \u5bfc\u5165\uff0c\u4e0b\u9762\u5bf9\u4e00\u4e9b\u4f60\u53ef\u80fd\u4f1a\u7528\u5230\u7684\u53c2\u6570\u7b80\u5355\u52a0\u4ee5\u8bf4\u660e \u6ce8\u610f\uff1a\u8bf7\u5728\u6e05\u695a\u53c2\u6570\u542b\u4e49\u540e\u8c03\u7528\u5b83\u4eec # MNIST torchvision . datasets . MNIST ( root , train = True , transform = None , target_transform = None , download = False ) \u4e00\u4e9b\u91cd\u8981\u7684\u53c2\u6570\u8bf4\u660e\uff1a root: \u5728 MNIST \u4e2d\u662f processed/training.pt \u548c processed/test.pt \u7684\u4e3b\u76ee\u5f55 train: True \u4ee3\u8868\u8bad\u7ec3\u96c6\uff0c False \u4ee3\u8868\u6d4b\u8bd5\u96c6 transform \u548c target_transform: \u5206\u522b\u662f\u5bf9\u56fe\u50cf\u548c label \u7684\u8f6c\u6362\u64cd\u4f5c download: \u82e5\u4e3a True \u5219\u4e0b\u8f7d\u6570\u636e\u96c6\u5e76\u653e\u5230 root \u6240\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\uff0c\u5426\u5219\u76f4\u63a5\u5c1d\u8bd5\u4ece root \u76ee\u5f55\u4e2d\u8bfb\u53d6 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u83b7\u53d6\u66f4\u52a0\u8be6\u7ec6\u7684\u8bf4\u660e 4.1.2 \u6a21\u578b\u7f16\u5199 4.1.2.1 \u7f51\u7edc\u7ed3\u6784 PyTorch \u63d0\u4f9b\u4e86\u8bb8\u591a\u79cd\u5b9a\u4e49\u6a21\u578b\u7684\u65b9\u5f0f\uff0c\u6700\u5e38\u7528\u7684\u4e00\u79cd\u662f\u5c06\u7f51\u7edc\u7ed3\u6784\u4ee5\u7c7b\u4fdd\u5b58\uff0c\u4f60\u5e94\u5f53\u9996\u5148\u7ee7\u627f torch.nn.Module \uff0c\u5e76\u5b9e\u73b0\u6b63\u5411\u4f20\u64ad\u7684 forward \u51fd\u6570\uff0c(\u4e3a\u4ec0\u4e48\u4e0d\u7528\u5b9a\u4e49\u53cd\u5411\u4f20\u64ad\u51fd\u6570\u5462\uff1f\u56e0\u4e3a\u4f60\u7ee7\u627f\u7684 nn.Module \u5c31\u662f\u5e72\u8fd9\u4e2a\u4e8b\u60c5\u7684)\u3002 \u4e0b\u9762\u4e3a\u7f51\u7edc\u7ed3\u6784\u7684\u4e00\u4e2a sample\uff08\u4f46\u663e\u7136\u8fd9\u6837\u7684\u7f51\u7edc\u5e76\u4e0d\u80fd\u7528\u4e8e\u672c\u6b21 Lab\uff09\uff0c\u672c\u6b21\u5b9e\u9a8c\u4e2d\u4f60\u9700\u8981\u81ea\u5b9a\u4e49\u4f60\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u4ee5\u5b8c\u6210\u6211\u4eec\u7684\u5206\u7c7b\u4efb\u52a1\uff1a import torch.nn as nn import torch.nn.functional as F class Model ( nn . Module ): def __init__ ( self ): super ( Model , self ) . __init__ () # \u5229\u7528\u53c2\u6570\u521d\u59cb\u5316\u7236\u7c7b self . conv1 = nn . Conv2d ( 1 , 20 , 5 ) self . conv2 = nn . Conv2d ( 20 , 20 , 5 ) def forward ( self , x ): x = F . relu ( self . conv1 ( x )) return F . relu ( self . conv2 ( x )) \u5f53\u7136\uff0c\u4f60\u9700\u8981\u5b9e\u4f8b\u5316\u4f60\u7684\u6a21\u578b\uff0c\u53ef\u4ee5\u76f4\u63a5\u5bf9\u6a21\u578b\u6253\u5370\u4ee5\u67e5\u770b\u7ed3\u6784 model = Model () print ( model ) \u7f51\u7edc\u7ed3\u6784\u7f16\u5199\u4e2d\u4e00\u4e2a\u5f88\u5927\u7684\u96be\u70b9\u5728\u4e8e\u6bcf\u4e00\u6b65\u7684 tensor shape \u9700\u8981\u5339\u914d\uff0c\u8bf7\u4ed4\u7ec6\u68c0\u67e5\u4f60\u7684\u4ee3\u7801\u6765\u786e\u4fdd\u6b64\u90e8\u5206\u7684\u6b63\u786e\u6027\u3002 4.1.2.2 \u635f\u5931\u51fd\u6570 \u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\u90fd\u88ab\u5b9a\u4e49\u5728\u4e86 torch.nn \u4e2d\uff0c\u4f60\u53ef\u4ee5\u5728\u8bad\u7ec3\u8fc7\u7a0b\u5f00\u59cb\u524d\u5c06\u5176\u5b9e\u4f8b\u5316\uff0c\u5e76\u5728\u8bad\u7ec3\u65f6\u8c03\u7528\uff0c\u4f8b\u5982\uff1a criterion = torch . nn . CrossEntropyLoss () 4.1.2.3 \u6b63\u5411\u4f20\u64ad \u6b63\u5411\u4f20\u64ad\u662f\u6307\u5bf9\u795e\u7ecf\u7f51\u7edc\u6cbf\u7740\u4ece\u8f93\u5165\u5c42\u5230\u8f93\u51fa\u5c42\u7684\u987a\u5e8f\uff0c\u4f9d\u6b21\u8ba1\u7b97\u5e76\u5b58\u50a8\u6a21\u578b\u7684\u4e2d\u95f4\u53d8\u91cf\uff08\u5305\u62ec\u8f93\u51fa\uff09\u3002 \u6b63\u5411\u4f20\u64ad\u7684\u8fc7\u7a0b\u5728 forward \u4e2d\u5b9a\u4e49\uff0c\u5bf9\u4e8e\u6a21\u578b\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u8f93\u5165\u8f93\u51fa\u5f97\u5230\u6a21\u578b\u9884\u6d4b\u7684\u7ed3\u679c\u3002 y_pred = model ( x ) 4.1.2.4 \u53cd\u5411\u4f20\u64ad \u53cd\u5411\u4f20\u64ad\uff08Backpropagation\uff0cBP\uff09\u662f\u201c\u8bef\u5dee\u53cd\u5411\u4f20\u64ad\u201d\u7684\u7b80\u79f0\uff0c\u662f\u4e00\u79cd\u4e0e\u6700\u4f18\u5316\u65b9\u6cd5\uff08\u5982\u68af\u5ea6\u4e0b\u964d\u6cd5\uff09\u7ed3\u5408\u4f7f\u7528\u7684\uff0c\u7528\u6765\u8bad\u7ec3\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7684\u5e38\u89c1\u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u5bf9\u7f51\u7edc\u4e2d\u6240\u6709\u6743\u91cd\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u3002\u8fd9\u4e2a\u68af\u5ea6\u4f1a\u53cd\u9988\u7ed9\u6700\u4f18\u5316\u65b9\u6cd5\uff0c\u7528\u6765\u66f4\u65b0\u6743\u503c\u4ee5\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u3002 \u5728\u8ba1\u7b97\u8fc7\u6a21\u578b\u7684loss\u4e4b\u540e\uff0c\u53ef\u4ee5\u5229\u7528 loss.backward() \u8ba1\u7b97\u53cd\u5411\u4f20\u64ad\u7684\u68af\u5ea6\uff0c\u68af\u5ea6\u4f1a\u88ab\u76f4\u63a5\u50a8\u5b58\u5728 requires_grad=True \u7684\u8282\u70b9\u4e2d\uff0c\u4e0d\u8fc7\u6b64\u65f6\u8282\u70b9\u7684\u6743\u91cd\u6682\u65f6\u4e0d\u4f1a\u66f4\u65b0\uff0c\u56e0\u6b64\u53ef\u4ee5\u505a\u5230\u68af\u5ea6\u7684\u7d2f\u52a0\u3002 4.1.2.5 \u4f18\u5316\u5668 \u5e38\u7528\u7684\u4f18\u5316\u5668\u90fd\u88ab\u5b9a\u4e49\u5728\u4e86 torch.optim \u4e2d\uff0c\u4e3a\u4e86\u4f7f\u7528\u4f18\u5316\u5668\uff0c\u4f60\u9700\u8981\u6784\u5efa\u4e00\u4e2a optimizer \u5bf9\u8c61\u3002\u8fd9\u4e2a\u5bf9\u8c61\u80fd\u591f\u4fdd\u6301\u5f53\u524d\u53c2\u6570\u72b6\u6001\u5e76\u57fa\u4e8e\u8ba1\u7b97\u5f97\u5230\u7684\u68af\u5ea6\u8fdb\u884c\u53c2\u6570\u66f4\u65b0\u3002\u4f60\u9700\u8981\u7ed9\u5b83\u4e00\u4e2a\u5305\u542b\u4e86\u9700\u8981\u4f18\u5316\u7684\u53c2\u6570\uff08\u5fc5\u987b\u90fd\u662f Variable \u5bf9\u8c61\uff09\u7684iterable\u3002\u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u8bbe\u7f6eoptimizer\u7684\u53c2\u6570\u9009\u9879\uff0c\u6bd4\u5982\u5b66\u4e60\u7387\uff0c\u6743\u91cd\u8870\u51cf\uff0c\u4f8b\u5982\uff1a optimizer = optim . SGD ( model . parameters (), lr = 0.01 , momentum = 0.9 ) optimizer = optim . Adam ([ var1 , var2 ], lr = 0.0001 ) \u6240\u6709\u7684optimizer\u90fd\u5b9e\u73b0\u4e86step()\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u66f4\u65b0\u6240\u6709\u7684\u53c2\u6570\u3002\u6216\u8bb8\u4f60\u4f1a\u5728\u53cd\u5411\u4f20\u64ad\u540e\u7528\u5230\u5b83\u3002 optimizer . step () \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u53cd\u5411\u4f20\u64ad\u524d\uff0c\u5982\u679c\u4f60\u4e0d\u5e0c\u671b\u68af\u5ea6\u7d2f\u52a0\uff0c\u8bf7\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u68af\u5ea6\u6e05\u96f6\u3002 optimizer . zero_grad () 4.1.3 \u8bad\u7ec3\u8fc7\u7a0b \u524d\u6587\u4e2d\u5df2\u7ecf\u5b9a\u4e49\u4e86\u7f51\u7edc\u7ed3\u6784\u3001\u635f\u5931\u51fd\u6570\u3001\u4f18\u5316\u5668\uff0c\u81f3\u6b64\uff0c\u4e00\u4e2a\u8f83\u4e3a\u5b8c\u6574\u7684\u8bad\u7ec3\u8fc7\u7a0b\u5982\u4e0b\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f60\u7684\u8bad\u7ec3\u8fc7\u7a0b\u8981\u4e0d\u65ad\u4ece DataLoader \u4e2d\u53d6\u51fa\u6570\u636e\u3002 criterion = torch . nn . MSELoss ( reduction = 'sum' ) optimizer = torch . optim . SGD ( model . parameters (), lr = 1e-8 , momentum = 0.9 ) for t in range ( 30000 ): # Forward pass: Compute predicted y by passing x to the model y_pred = model ( x ) # Compute and print loss loss = criterion ( y_pred , y ) # Zero gradients, perform a backward pass, and update the weights. optimizer . zero_grad () loss . backward () optimizer . step () 4.1.4 TensorBoard TensorBoard \u662f\u5e38\u7528\u7684\u8bad\u7ec3\u8fc7\u7a0b\u53ef\u89c6\u5316\u5de5\u5177\u3002\u8bf7\u53c2\u8003 PyTorch \u7684\u5b98\u65b9\u6559\u7a0b\u5b8c\u6210\u914d\u7f6e\u3002 4.1.5 Tips nn.functional.ReLU \uff08\u7b80\u8bb0\u4e3a F.ReLU \uff09\u548c nn.ReLU \u7565\u6709\u4e0d\u540c\uff0c\u533a\u522b\u5728\u4e8e\u524d\u8005\u4f5c\u4e3a\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u5982 4.3.1 \u4e2d\u6240\u793a\uff0c\u800c\u540e\u8005\u4f5c\u4e3a\u4e00\u4e2a\u5c42\u7ed3\u6784\uff0c\u5fc5\u987b\u6dfb\u52a0\u5230 nn.Module \u5bb9\u5668\u4e2d\u624d\u80fd\u4f7f\u7528\uff0c\u4e24\u8005\u5b9e\u73b0\u7684\u529f\u80fd\u4e00\u6837\uff0c\u5728 PyTorch \u4e2d\uff0c nn.X \u90fd\u6709\u5bf9\u5e94\u7684\u51fd\u6570\u7248\u672c F.X \u3002 \u9664\u4e86\u5229\u7528\u7ee7\u627f nn.Module \u6765\u5efa\u7acb\u7f51\u7edc\uff0c\u4e0d\u63a8\u8350\u4f46\u53ef\u4ee5\u4f7f\u7528 nn.ModuleList , nn.ModuleDict \uff0c\u63a8\u8350\u4f7f\u7528 nn.Sequential \u76f4\u63a5\u5b9a\u4e49\u6a21\u578b \u4f60\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u7684 device \u53d8\u91cf\uff0c\u4ee5\u4fbf\u4f60\u7684\u6a21\u578b\u5728\u6ca1\u6709 GPU \u73af\u5883\u4e0b\u4e5f\u53ef\u4ee5\u6d4b\u8bd5\uff1a device = torch . device ( \"cuda\" if torch . cuda . is_available () else \"cpu\" ) model = Model () . to ( device ) some_data = some_data . to ( device ) \u76f8\u6bd4\u4e8e\u539f\u751f\u7684 PyTorch \uff0c PyTorch Lightning \u6846\u67b6\u5bf9\u5176\u8fdb\u884c\u4e86\u66f4\u9ad8\u5c42\u6b21\u7684\u5c01\u88c5\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7b80\u5316\u4e86\u6a21\u578b\u5b9a\u4e49\u3001\u8bad\u7ec3\u4ee5\u53ca\u6d4b\u8bd5\u7684\u6b65\u9aa4\uff0c\u4f7f\u7528 PyTorch Lightning \u4f5c\u4e3a\u672c\u6b21\u5b9e\u9a8c\u7684\u52a0\u5206\u9879\uff0c\u5b98\u7f51\u94fe\u63a5\u5df2\u9644\u5728\u53c2\u8003\u8d44\u6599\u4e2d\u3002\u5982\u679c\u4f60\u80fd\u591f\u5728 TensorBoard \u4e2d\u5c06\u4e2d\u95f4\u5c42\u53ef\u89c6\u5316\uff0c\u4f60\u80fd\u5f97\u5230\u66f4\u591a\u7684\u52a0\u5206\u3002 4.2 GPT \u8bad\u7ec3\u4e0e\u52a0\u901f 4.2.1 \u6587\u672c\u6570\u636e\u9884\u5904\u7406 \u9884\u5904\u7406\u6700\u4e3b\u8981\u7684\u5de5\u4f5c\u662f\u5206\u8bcd\uff08tokenize\uff09\u3002\u5206\u8bcd\u5668\u5c06\u6587\u672c\u62c6\u5206\u6210\u8bcd\uff0c\u518d\u8f6c\u6362\u6210\u6570\u5b57\u4ee5\u4f9b\u6a21\u578b\u8bad\u7ec3\u3002\u7531\u4e8e\u53e5\u5b50\u957f\u77ed\u4e0d\u4e00\uff0c\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u586b\u5145\u6216\u622a\u65ad\uff0c\u6700\u540e\u751f\u6210\u8f93\u5165\u7684\u5f20\u91cf\u3002 \u5206\u8bcd\u7684\u7c92\u5ea6\uff0c\u6700\u81ea\u7136\u7684\u662f\u6309 \u5355\u8bcd\u5212\u5206 \uff0c\u4f8b\u5982\u82f1\u8bed\u4e2d\u6839\u636e\u7a7a\u683c\u548c\u6807\u70b9\u7b26\u53f7\u5212\u5206\uff0c\u4f46\u751f\u6210\u7684\u8bcd\u8868\u4f1a\u5f88\u5927\uff0c\u589e\u52a0\u5b58\u50a8\u548c\u8ba1\u7b97\u590d\u6742\u5ea6\uff1b\u53e6\u4e00\u4e2a\u6781\u7aef\u662f\u6309 \u5b57\u6bcd\u5212\u5206 \uff0c\u867d\u7136\u8bcd\u8868\u4f1a\u5f88\u5c0f\uff0c\u4f46\u6a21\u578b\u5f88\u96be\u5b66\u5230\u6709\u610f\u4e49\u7684\u5185\u5bb9\uff1b\u56e0\u6b64\u73b0\u5728\u4e00\u822c\u4f7f\u7528 \u5b50\u8bcd\uff08subword\uff09\u5212\u5206 \uff0c\u5728\u8bcd\u8868\u4e2d\u4fdd\u7559\u8f83\u77ed\u7684\u5e38\u7528\u8bcd\uff0c\u751f\u50fb\u8bcd\u5219\u7528\u5e38\u7528\u8bcd\u62fc\u63a5\u800c\u6210\u3002 \u5e38\u7528\u7684\u5206\u8bcd\u7b97\u6cd5\u6709\u5b57\u8282\u5bf9\u7f16\u7801\uff08Byte-Pair Encoding, BPE \uff09\u3001WordPiece\u3001Unigram\u3001SentencePiece \u7b49\uff0c\u5176\u4e2d GPT \u7528\u7684\u662f BPE\u3002BPE \u4ece\u5355\u4e2a\u5b57\u6bcd\u7684\u8bcd\u8868\u5f00\u59cb\uff0c\u901a\u8fc7\u4e0d\u65ad\u5408\u5e76\u9ad8\u9891\u5b57\u6bcd\u5bf9\uff0c\u76f4\u5230\u8fbe\u5230\u9884\u5b9a\u7684\u8bcd\u8868\u5927\u5c0f\u3002WordPiece \u4e0e BPE \u57fa\u672c\u76f8\u540c\uff0c\u5408\u5e76\u7b56\u7565\u6709\u6240\u533a\u522b\u3002 \u5177\u4f53\u539f\u7406\u4ecb\u7ecd\u53ef\u53c2\u8003 https://huggingface.co/docs/transformers/tokenizer_summary \uff0c\u4ee5\u53ca NLP BERT GPT\u7b49\u6a21\u578b\u4e2d tokenizer \u7c7b\u522b\u8bf4\u660e\u8be6\u89e3 \u3002 \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 huggingface \u7684\u9884\u8bad\u7ec3\u5206\u8bcd\u5668 \u4e2d\u63d0\u4f9b\u7684 GPT-2 tokenizer\uff0c\u5982\u9009\u62e9\u81ea\u5df1\u8bad\u7ec3 vocab \u53ef\u4ee5\u83b7\u5f97 bonus\u3002 4.2.2 \u57fa\u51c6\u4ee3\u7801\u6784\u5efa\u4e0e\u52a0\u901f \u8bf7\u53c2\u8003 3.1.3 \u4e2d\u7684\u6a21\u578b\u7ed3\u6784\u63cf\u8ff0\u5b8c\u6210\u57fa\u51c6\u4ee3\u7801\u7684\u6784\u5efa\uff0c\u5e76\u57fa\u4e8e\u6b64\u8fdb\u884c\u8bad\u7ec3\u52a0\u901f\u3002\u4e3a\u4e86\u51cf\u8f7b\u5de5\u4f5c\u91cf\uff0c\u6b64\u90e8\u5206\u5141\u8bb8\u4f7f\u7528 huggingface transformer \u7b49\u6a21\u578b\u5e93\uff0c\u4ee5\u53ca\u5176\u4ed6\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u52a0\u901f\u6846\u67b6\u3002\u4f46\u9700\u8981\u5728\u62a5\u544a\u91cc\u9648\u8ff0\u4f60\u6240\u91c7\u7528\u7684\u5404\u9879\u4f18\u5316\u7684\u539f\u7406\u3001\u51fa\u53d1\u70b9\u548c\u6548\u679c\u3002\u6ce8\u610f\u672c\u6b21\u5b9e\u9a8c\u4e2d\u7684 GPT \u9700\u8981\u4f7f\u7528\u7684\u662f GPT-2 \u7684\u6a21\u578b\u7ed3\u6784\u3002 4.2.3 \u591a\u5361\u8bad\u7ec3 \u5355\u5f20GPU\u7684\u663e\u5b58\u548c\u7b97\u529b\u662f\u6709\u9650\u7684\uff0c\u968f\u7740\u6a21\u578b\u5927\u5c0f\u7684\u589e\u957f\uff0c\u6211\u4eec\u9700\u8981\u591a\u5f20GPU\u4e00\u8d77\u53c2\u4e0e\u8bad\u7ec3\u4ee5\u83b7\u5f97\u66f4\u5927\u7684\u663e\u5b58\u548c\u66f4\u9ad8\u7684\u7b97\u529b\u3002\u591a\u5361\u8bad\u7ec3Transformer\u6a21\u578b\u65f6\u5e38\u89c1\u7684\u5e76\u884c\u7b56\u7565\u6709 \u5f20\u91cf\u5e76\u884c\uff08Tensor Parallelism\uff09 \u3001 \u6d41\u6c34\u7ebf\u5e76\u884c\uff08Pipeline Parallelism\uff09 \u548c \u6570\u636e\u5e76\u884c\uff08Data Parallelism\uff09 \u3002 \u5f20\u91cf\u5e76\u884c\u5c06\u6a21\u578b\u5c42\u5185\u7684\u53c2\u6570\u5207\u5206\u5230\u4e0d\u540c\u8bbe\u5907\u8fdb\u884c\u8ba1\u7b97,\u5728Transformer\u4e2d\uff0c\u6ce8\u610f\u548c\u591a\u5c42\u611f\u77e5\u5668(MLP)\u7684\u5f20\u91cf\u5728\u5411\u524d\u548c\u5411\u540e\u8ba1\u7b97\u65f6\u6309\u884c\u6216\u5217\u5206\u5272\u3002 \u6d41\u6c34\u7ebf\u5e76\u884c\u5c06\u6a21\u578b\u4e0d\u540c\u7684\u5c42\u5207\u5206\u5230\u4e0d\u540c\u8bbe\u5907\u8fdb\u884c\u8ba1\u7b97\uff0c\u6d41\u6c34\u7ebf\u4e2d\u7684\u6bcf\u4e00\u8bbe\u5907\u63a5\u53d7\u4e0a\u4e00\u8282\u70b9\u7684\u7ed3\u679c\uff0c\u5e76\u628a\u81ea\u5df1\u7684\u7ed3\u679c\u4f20\u9012\u7ed9\u4e0b\u4e00\u8bbe\u5907\u3002 \u6570\u636e\u5e76\u884c\u5219\u5c06\u5168\u5c40\u6279\u6b21\u5927\u5c0f\uff08global batch size\uff09\u6309\u7167\u6d41\u6c34\u7ebf\u5206\u7ec4\u8fdb\u884c\u5206\u5272\uff0c\u6bcf\u4e2a\u6d41\u6c34\u7ebf\u7ec4\u90fd\u5305\u542b\u6a21\u578b\u7684\u4e00\u4e2a\u526f\u672c\uff0c\u6570\u636e\u5728\u7ec4\u5185\u6309\u7167\u5c40\u90e8\u6279\u6b21\u89c4\u6a21\u9001\u5165\u6a21\u578b\u526f\u672c\uff0c\u6700\u540e\u5c06\u5404\u7ec4\u5f97\u5230\u7684\u68af\u5ea6\u8fdb\u884c\u52a0\u6743\u5e73\u5747\u5f97\u5230\u603b\u7684\u68af\u5ea6\u3002 \u5728pytorch\u3001tensorflow\u7b49\u6846\u67b6\u4e2d\u90fd\u5b58\u5728\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684\u6a21\u5757\uff0c\u4e3a\u4e86\u51cf\u8f7b\u5de5\u4f5c\u91cf\uff0c\u6b64\u90e8\u5206\u4e5f\u5141\u8bb8\u4f7f\u7528 huggingface accelerate \u7b49\u6a21\u578b\u5e93\uff0c\u4ee5\u53ca\u5176\u4ed6\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u52a0\u901f\u6846\u67b6\u3002 4.2.4 \u6a21\u578b\u8bc4\u5206\u89c4\u6a21 \u4f60\u9700\u8981\u6309\u7167\u4e0b\u5217\u8868\u683c\u4e2d\u7ed9\u5b9a\u7684\u6a21\u578b\u7ed3\u6784\u53c2\u6570\u5b9e\u73b0\u6a21\u578b\uff0c\u5e76\u6309\u7167\u8981\u6c42\u7684 token \u6570\u91cf\u5bf9\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3\u3002\u89c4\u5b9a token \u6570\u91cf\u8bad\u7ec3\u7ed3\u675f\u540e\uff0c\u82e5\u6a21\u578b\u635f\u5931\u4f4e\u4e8e 7\uff0c\u8ba4\u4e3a\u6a21\u578b\u8bad\u7ec3\u6210\u529f\uff0c\u6b64\u65f6\u8bad\u7ec3\u901f\u5ea6\u8d8a\u5feb\u8be5\u6d4b\u8bd5\u70b9\u5f97\u5206\u8d8a\u9ad8\uff1b\u5426\u5219\u8ba4\u4e3a\u6a21\u578b\u8bad\u7ec3\u5931\u8d25\uff0c\u8bb0\u96f6\u5206\u3002 Model size Hidden size Attention-heads Layers Sequence length Tokens 117M 768 12 12 1024 12M PS. Model size \u4f1a\u56e0 vocab size \u53d8\u5316\u800c\u6ce2\u52a8\uff0c\u56e0\u6b64\u4e0d\u4f1a\u4f5c\u4e3a\u5b9e\u73b0\u6b63\u786e\u6027\u7684\u4e3b\u8981\u5224\u65ad\u4f9d\u636e\uff0c\u6211\u4eec\u4f1a\u76f4\u63a5\u6839\u636e\u4ee3\u7801\u5224\u65ad\u6a21\u578b\u5b9e\u73b0\u7684\u6b63\u786e\u6027 5 \u5b9e\u9a8c\u4efb\u52a1\u4e0e\u8981\u6c42 \u4f7f\u7528 PyTorch \u5b9e\u73b0\u6700\u57fa\u672c\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc LeNet-5\uff0c\u5e76\u5728 MNIST \u6570\u636e\u96c6\u4e0a\u4f7f\u7528 GPU \u8fdb\u884c\u8bad\u7ec3\uff0c\u5e76\u5bf9\u6d4b\u8bd5\u96c6\u8fdb\u884c\u6d4b\u8bd5\u3002 \u4f7f\u7528 PyTorch \u53ca\u76f8\u5173\u6a21\u578b\u5e93\u5b9e\u73b0\u7c7b GPT \u7f51\u7edc\uff0c\u5728 Web of Science \u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u5e76\u5c1d\u8bd5\u5bf9\u6a21\u578b\u8bad\u7ec3\u8fdb\u884c\u52a0\u901f\u3002 \u4f60\u9700\u8981\u63d0\u4ea4\uff1a \u5168\u90e8\u4ee3\u7801 \u5b9e\u9a8c\u62a5\u544a\uff0c\u5176\u4e2d\u9700\u8981\u5305\u542b\uff1a \u7b80\u8981\u5b9e\u9a8c\u8fc7\u7a0b \u8d34\u4e0a\u4e24\u4e2a\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u7684 GPU \u5360\u7528\u7387\u622a\u56fe \uff08\u4f7f\u7528 nvidia-smi \u67e5\u770b\uff09 Tensorboard \u4e24\u4e2a\u6a21\u578b\u7684\u635f\u5931\u66f2\u7ebf\u3001LeNet-5 \u7684\u51c6\u786e\u7387\u66f2\u7ebf\u7b49\u622a\u56fe \u5bf9\u4e8e LeNet-5\uff0c\u4f60\u9700\u8981\u5199\u660e\u6d4b\u8bd5\u96c6\u4e0a\u7684 \u8bc6\u522b\u6b63\u786e\u7387 \u5bf9\u4e8e GPT\uff0c\u4f60\u9700\u8981\u5199\u660e\u8bad\u7ec3\u5b8c\u6210\u7684\u65f6\u95f4\uff0c\u6700\u540e\u7684\u6536\u655b\u60c5\u51b5\uff0c\u4ee5\u53ca\u4f7f\u7528\u7684\u52a0\u901f\u7b56\u7565 LeNet-5 \u90e8\u5206\u4e0d\u5141\u8bb8\u76f4\u63a5\u4f7f\u7528\u5404\u79cd\u6df1\u5ea6\u5b66\u4e60\u5f00\u53d1\u5de5\u5177\u5df2\u8bad\u7ec3\u597d\u7684 CNN \u7f51\u7edc\u7ed3\u6784\u4e0e\u53c2\u6570\uff1bGPT-2 \u90e8\u5206\u4e0d\u5141\u8bb8\u4f7f\u7528\u4efb\u4f55\u5df2\u7ecf\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u53c2\u6570 \u672c\u6b21\u5b9e\u9a8c\u4f9d\u7136\u4f1a\u8fdb\u884c\u67e5\u91cd\uff0c\u5982\u679c\u4f60\u53c2\u8003\u4e86\u7f51\u7edc\u4e0a\u7684\u4ee3\u7801\u8bf7\u5728\u62a5\u544a\u4e2d\u5217\u51fa\uff0c\u5e76\u4f53\u73b0\u51fa\u4f60\u7684\u7406\u89e3\uff0c\u5426\u5219\u4e00\u7ecf\u67e5\u51fa\u89c6\u4e3a\u6284\u88ad \u53c2\u8003\u8d44\u6599 PyTorch \u6846\u67b6 https://pytorch.org/ PyTorch Lightning \u6846\u67b6 https://www.pytorchlightning.ai/ MNIST \u6570\u636e\u96c6 http://yann.lecun.com/exdb/mnist/index.html LeNet-5 \u7f51\u7edc\u7ed3\u6784 http://yann.lecun.com/exdb/lenet/ GPT \u7f51\u7edc\u4ecb\u7ecd https://en.wikipedia.org/wiki/GPT-2","title":"Lab5-\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u4e0e\u52a0\u901f"},{"location":"Lab5-DL/#_1","text":"","title":"\u5b9e\u9a8c\u4e94\uff1a\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u4e0e\u52a0\u901f"},{"location":"Lab5-DL/#1","text":"\u6df1\u5ea6\u5b66\u4e60 \uff08Deep Learning\uff09\u662f \u673a\u5668\u5b66\u4e60 \u7684\u5206\u652f\uff0c\u662f\u4e00\u79cd\u4ee5 \u4eba\u5de5\u795e\u7ecf\u7f51\u7edc \u4e3a\u67b6\u6784\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u8868\u5f81\u5b66\u4e60\u7684 \u7b97\u6cd5 \u3002\u6df1\u5ea6\u5b66\u4e60\u80fd\u591f\u53d6\u5f97\u5982\u6b64\u5353\u8d8a\u7684\u6210\u5c31\uff0c\u9664\u4e86\u4f18\u8d8a\u7684\u7b97\u6cd5\u3001\u5145\u8db3\u7684\u6570\u636e\uff0c\u66f4\u79bb\u4e0d\u5f00\u5f3a\u52b2\u7684\u7b97\u529b\u3002\u8fd1\u5e74\u6765\uff0c\u6df1\u5ea6\u5b66\u4e60\u76f8\u5173\u7684\u57fa\u7840\u8bbe\u65bd\u9010\u6e10\u6210\u719f\uff0c\u4ece\u7f51\u7edc\u8bbe\u8ba1\u65f6\u7684\u8bad\u7ec3\u3001\u4f18\u5316\uff0c\u5230\u843d\u5730\u7684\u63a8\u7406\u52a0\u901f\uff0c\u90fd\u6709\u975e\u5e38\u4f18\u79c0\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5176\u4e2d\uff0c\u5bf9\u4e8e\u7b97\u529b\u7684\u9700\u6c42\u6700\u5927\u7684\u90e8\u5206\u4e4b\u4e00\u662f\u7f51\u7edc\u7684\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u5b83\u4e5f\u56e0\u6b64\u6210\u4e3a HPC \u9886\u57df\u7ecf\u5e38\u7814\u7a76\u7684\u8bdd\u9898\u3002 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc \uff08Convolutional Neural Network, CNN \uff09\u662f\u4e00\u79cd \u524d\u9988\u795e\u7ecf\u7f51\u7edc \uff0c\u5bf9\u4e8e\u5927\u578b\u56fe\u50cf\u5904\u7406\u6709\u51fa\u8272\u8868\u73b0\u3002 GPT \uff08Generative Pre-trained Transformer\uff09\u662f\u4e00\u7cfb\u5217\u81ea\u56de\u5f52\u8bed\u8a00\u6a21\u578b\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u5206\u7c7b\u6216\u4ea7\u751f\u4eba\u7c7b\u53ef\u4ee5\u7406\u89e3\u7684\u81ea\u7136\u8bed\u8a00\u3002GPT \u7cfb\u5217\u7531\u5728\u65e7\u91d1\u5c71\u7684\u4eba\u5de5\u667a\u80fd\u516c\u53f8 OpenAI \u8bad\u7ec3\u4e0e\u5f00\u53d1\uff0c\u6a21\u578b\u8bbe\u8ba1\u57fa\u4e8e\u8c37\u6b4c\u5f00\u53d1\u7684 transformer\u3002 \u672c\u6b21\u5b9e\u9a8c\u6211\u4eec\u5c06\u5b8c\u6210 LeNet-5 \u548c GPT \u6a21\u578b\u7684\u8bad\u7ec3\uff0c\u5e76\u5c1d\u8bd5\u4f7f\u7528\u5404\u79cd\u4f18\u5316\u6280\u672f\u52a0\u901f\u8bad\u7ec3\u8fc7\u7a0b\u3002 \u8003\u8651\u5230\u90e8\u5206\u540c\u5b66\u6b64\u524d\u5bf9\u4e8e\u6df1\u5ea6\u5b66\u4e60\u5e76\u6ca1\u6709\u5f88\u591a\u4e86\u89e3\uff0c\u672c\u6b21\u5b9e\u9a8c\u7684 LeNet-5 \u90e8\u5206\u4e3b\u8981\u76ee\u7684\u4e3a\u5f15\u5bfc\u5927\u5bb6\u719f\u6089\u6df1\u5ea6\u5b66\u4e60\u7684\u6d41\u7a0b\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u5b8c\u6210\u5373\u53ef\u5f97\u5230\u5206\u6570\uff0c\u800c GPT \u90e8\u5206\u4e3b\u8981\u76ee\u7684\u662f\u5f15\u5bfc\u5927\u5bb6\u5c1d\u8bd5\u5bf9\u4e8e\u5927\u578b\u7f51\u7edc\u7684\u8bad\u7ec3\u8fdb\u884c\u4f18\u5316\uff0c\u56e0\u6b64\u6211\u4eec\u4f1a\u6839\u636e\u6a21\u578b\u7684\u52a0\u901f\u60c5\u51b5\u8fdb\u884c\u7ed9\u5206\u3002","title":"1 \u5b9e\u9a8c\u7b80\u4ecb"},{"location":"Lab5-DL/#2","text":"ssh 10 .15.82.243 -p 12222 \u7528\u6237\u540d\u4e0e Lab 4 \u76f8\u540c\u3002\u8be5\u96c6\u7fa4\u4e5f\u7531 slurm \u7ba1\u7406\uff0c\u53ef\u4ee5\u4f7f\u7528 salloc \u8fdb\u884c\u5b9e\u9a8c\u3002\u96c6\u7fa4\u81ea\u5e26 conda\u3001pytorch\u3001nvcc \u7b49\u3002\u96c6\u7fa4\u5404\u4e2a\u8282\u70b9\u7684 home \u76ee\u5f55\u662f\u5171\u4eab\u7684\uff0c\u56e0\u6b64\u73af\u5883\u914d\u7f6e\u7b49\u53ef\u4ee5\u5728\u767b\u5f55\u8282\u70b9\u8fdb\u884c\u3002 \u96c6\u7fa4\u5177\u6709\u4e24\u4e2a\u961f\u5217\uff0c\u6bcf\u4e2a\u961f\u5217\u6709\u4e24\u4e2a\u5355 GPU \u8282\u70b9\u3002debug \u961f\u5217\u7528\u4e8e\u8c03\u8bd5\uff0c\u4efb\u52a1\u65f6\u957f\u4e0a\u9650\u4e3a 5 \u5206\u949f\u3002normal \u961f\u5217\u7528\u4e8e\u6536\u655b\u6027\u9a8c\u8bc1\u53ca\u65f6\u95f4\u7684\u8bc4\u6d4b\uff0c\u4efb\u52a1\u65f6\u957f\u4e0a\u9650\u4e3a 20 \u5206\u949f\u3002\u961f\u5217\u9009\u62e9\u53ef\u5728 salloc \u65f6\u52a0\u5165 -p \u53c2\u6570\uff0c\u5982\u5e0c\u671b\u5728 debug \u961f\u5217\u4e0a\u9762\u8fdb\u884c\u5355\u5361\u8bad\u7ec3\uff1a srun -p debug -N 1 --pty bash \u4efb\u52a1\u65f6\u957f\u4e0a\u9650\u5230\u8fbe\u65f6\uff0c\u8bf7\u53ca\u65f6\u5173\u95ed\u4efb\u52a1\u5e76\u91cd\u65b0\u6392\u961f\u3002\u5982\u679c\u53d1\u73b0\u8282\u70b9 GPU \u5360\u7528\u7387\u5f02\u5e38\uff0c\u53ef\u4ee5\u901a\u8fc7 htop \u7b49\u547d\u4ee4\u89c2\u5bdf\u60c5\u51b5\uff0c\u5e76\u901a\u77e5\u52a9\u6559\u6740\u6b7b\u76f8\u5e94\u8fdb\u7a0b\u3002","title":"2 \u5b9e\u9a8c\u73af\u5883"},{"location":"Lab5-DL/#3","text":"","title":"3 \u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd"},{"location":"Lab5-DL/#31","text":"","title":"3.1 \u7f51\u7edc\u6a21\u578b"},{"location":"Lab5-DL/#311-cnn","text":"\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5377\u79ef\u5c42\u548c\u9876\u7aef\u7684\u5168\u8fde\u901a\u5c42\uff08\u5bf9\u5e94\u7ecf\u5178\u7684\u795e\u7ecf\u7f51\u7edc\uff09\u7ec4\u6210\uff0c\u540c\u65f6\u4e5f\u5305\u62ec\u5173\u8054\u6743\u91cd\u548c\u6c60\u5316\u5c42\uff08pooling layer\uff09\u3002\u8fd9\u4e00\u7ed3\u6784\u4f7f\u5f97\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u80fd\u591f\u5229\u7528\u8f93\u5165\u6570\u636e\u7684\u4e8c\u7ef4\u7ed3\u6784\u3002\u4e0e\u5176\u4ed6\u6df1\u5ea6\u5b66\u4e60\u7ed3\u6784\u76f8\u6bd4\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5728\u56fe\u50cf\u548c \u8bed\u97f3\u8bc6\u522b \u65b9\u9762\u80fd\u591f\u7ed9\u51fa\u66f4\u597d\u7684\u7ed3\u679c\u3002\u8fd9\u4e00\u6a21\u578b\u4e5f\u53ef\u4ee5\u4f7f\u7528 \u53cd\u5411\u4f20\u64ad\u7b97\u6cd5 \u8fdb\u884c\u8bad\u7ec3\u3002\u76f8\u6bd4\u8f83\u5176\u4ed6\u6df1\u5ea6\u3001\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u9700\u8981\u8003\u91cf\u7684\u53c2\u6570\u66f4\u5c11\uff0c\u4f7f\u4e4b\u6210\u4e3a\u4e00\u79cd\u9887\u5177\u5438\u5f15\u529b\u7684\u6df1\u5ea6\u5b66\u4e60\u7ed3\u6784\u3002","title":"3.1.1 CNN \u5377\u79ef\u795e\u7ecf\u7f51\u7edc"},{"location":"Lab5-DL/#312-lenet-5","text":"LeNet-5\u662f\u4e00\u4e2a\u8f83\u7b80\u5355\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u5176\u7ed3\u6784\uff1a\u8f93\u5165\u7684\u4e8c\u7ef4\u56fe\u50cf\uff0c\u5148\u7ecf\u8fc7\u4e24\u6b21\u5377\u79ef\u5c42\u5230\u6c60\u5316\u5c42\uff0c\u518d\u7ecf\u8fc7\u5168\u8fde\u63a5\u5c42\uff0c\u6700\u540e\u8f93\u51fa\u6bcf\u79cd\u5206\u7c7b\u9884\u6d4b\u5f97\u5230\u7684\u6982\u7387\u3002 \u6709\u5173\u4e8e\u5176\u66f4\u8be6\u7ec6\u7684\u7ed3\u6784\u53ef\u4ee5\u5728 \u539f\u8bba\u6587 \u4e2d\u627e\u5230\u3002","title":"3.1.2 LeNet-5"},{"location":"Lab5-DL/#313-gpt","text":"\u5728\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08Natural language processing, NLP\uff09\u4e2d\uff0c\u65e9\u671f\u4f7f\u7528\u7684\u662f\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff08Recurrent Neural Network, RNN \uff09\u3002RNN \u4e0e CNN \u8fd9\u6837\u7684\u524d\u9988\u7f51\u7edc\u4e0d\u540c\uff0cRNN \u4e2d\u5b58\u5728\u53cd\u9988\u548c\u9690\u85cf\u5355\u5143\uff0c\u4f7f\u5b83\u53ef\u4ee5\u300c\u8bb0\u4f4f\u300d\u4e4b\u524d\u8bfb\u5230\u7684\u5185\u5bb9\u3002\u4e3a\u4e86\u89e3\u51b3\u6df1\u5c42\u7f51\u7edc\u4e2d\u68af\u5ea6\u6d88\u5931\u6216\u7206\u70b8\u7684\u95ee\u9898\uff0c\u5f15\u5165\u4e86\u957f\u77ed\u671f\u8bb0\u5fc6\uff08Long short-term memory, LSTM \uff09\u3002\u800c\u4e3a\u4e86\u89e3\u51b3\u4f20\u7edf RNN \u53ea\u80fd\u8bb0\u4f4f\u524d\u9762\u7684\u95ee\u9898\uff0c\u63d0\u51fa\u4e86\u53cc\u5411\u7684 LSTM\u3002\u5728\u6b64\u57fa\u7840\u4e0a\u5f15\u5165\u7684\u6ce8\u610f\u529b\u673a\u5236\uff08attention\uff09\uff0c\u4f7f\u5f97\u7f51\u7edc\u80fd\u6ce8\u610f\u53e5\u5b50\u4e2d\u91cd\u8981\u4f4d\u7f6e\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u5141\u8bb8\u5728\u7ffb\u8bd1\u4e2d\u53ef\u4ee5\u6539\u53d8\u8bcd\u8bed\u7684\u987a\u5e8f\u3002 \u4e0d\u4e45\u540e\uff0c\u7814\u7a76\u8005\u53d1\u73b0\u53ea\u9760\u6ce8\u610f\u529b\u673a\u5236\u800c\u65e0\u9700 RNN \u6216 CNN\uff0c\u5c31\u80fd\u8fbe\u5230\u8f83\u597d\u7684\u6548\u679c\uff0c\u8fd9\u5c31\u662f Transformer \u6a21\u578b\u3002\u4e0e RNN \u4e0d\u540c\u7684\u662f\uff0cTransformer \u6a21\u578b\u80fd\u591f\u4e00\u6b21\u6027\u5904\u7406\u6240\u6709\u8f93\u5165\u6570\u636e\u3002\u6ce8\u610f\u529b\u673a\u5236\u53ef\u4ee5\u4e3a\u8f93\u5165\u5e8f\u5217\u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e\u63d0\u4f9b\u4e0a\u4e0b\u6587\u3002\u8fd9\u79cd\u67b6\u6784\u5141\u8bb8\u66f4\u9ad8\u7684\u5e76\u884c\u5ea6\uff0c\u5e76\u4ee5\u6b64\u51cf\u5c11\u8bad\u7ec3\u65f6\u95f4\u3002 \u4ee5\u4e0b\u4e3a Transformer \u7684\u7ed3\u6784\uff1a\u5305\u542b\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\uff0c\u90fd\u7531\u591a\u4e2a\u591a\u5934\u81ea\u6ce8\u610f\u529b\u673a\u5236\u548c\u5168\u8fde\u63a5\u5c42\u5806\u53e0\u800c\u6210\uff0c\u5c42\u95f4\u548c\u5c42\u5185\u5b58\u5728\u5f52\u4e00\u5316\u64cd\u4f5c\uff1b\u8f93\u5165\u7531\u8bcd\u5d4c\u5165\u5411\u91cf\u52a0\u4e0a\u4f4d\u7f6e\u4fe1\u606f\u5f97\u51fa\u3002 Transformer \u7684\u8be6\u7ec6\u7ed3\u6784\u53ef\u53c2\u8003 \u539f\u8bba\u6587 \u3002 2018 \u5e74\uff0cOpenAI \u63d0\u51fa\u4e86\u751f\u6210\u9884\u8bad\u7ec3 Transformer \u6a21\u578b\uff08Generative Pre-trained Transformer, GPT \uff09\u3002\u4e0e\u5148\u524d\u57fa\u4e8e\u76d1\u7763\u5f0f\u5b66\u4e60\u7684 NLP \u6a21\u578b\u4e0d\u540c\uff0cGPT \u5728\u9884\u8bad\u7ec3\u751f\u6210\u9636\u6bb5\u662f\u65e0\u76d1\u7763\u7684\uff08\u4e0d\u9700\u8981\u6807\u6ce8\uff09\uff0c\u53ea\u5728\u9700\u8981\u9002\u5e94\u7279\u5b9a\u4efb\u52a1\u7684 \u5fae\u8c03 \uff08fine-tuning\uff09\u65f6\u9700\u8981\u76d1\u7763\uff0c\u964d\u4f4e\u4e86\u5927\u89c4\u6a21 NLP \u6a21\u578b\u7684\u95e8\u69db\u3002GPT \u7684\u7ed3\u6784\u662f 12 \u5c42\u4ec5\u5305\u542b\u89e3\u7801\u5668\u7684 Transformer\u3002\u4e00\u5e74\u540e\u7684 GPT-2 \u662f\u5bf9 GPT \u7684\u76f4\u63a5\u653e\u5927\uff0c\u53c2\u6570\u91cf\u548c\u6570\u636e\u96c6\u90fd\u589e\u52a0\u4e86\u4e00\u4e2a\u91cf\u7ea7\uff0c\u53c2\u6570\u91cf\u8fbe\u5230\u4e86 15 \u4ebf\uff0c\u53d6\u5f97\u4e86\u66f4\u597d\u7684\u6548\u679c\u548c\u8fc1\u79fb\u5b66\u4e60\u80fd\u529b\u3002\u4e0b\u4e00\u4ee3\u7684 GPT-3 \u8fbe\u5230\u4e86 1750 \u4ebf\u53c2\u6570\uff0c\u751f\u6210\u7684\u6587\u7ae0\u5df2\u7ecf\u5f88\u96be\u4e0e\u4eba\u7c7b\u5199\u7684\u533a\u5206\u51fa\u6765\u3002\u5728\u4e00\u4e9b\u9886\u57df\uff0cGPT-3 \u4e5f \u4e0d\u518d\u9700\u8981 \u4e13\u95e8\u7684\u5fae\u8c03\uff0c\u800c\u53ea\u9700\u8981\u63d0\u4f9b\u4f8b\u5b50\u7b49\u6587\u672c\u4ea4\u4e92\u5373\u53ef\u5b8c\u6210\u4efb\u52a1\u3002\u5927\u5bb6\u53ef\u80fd\u719f\u6089\u7684 GitHub Copilot \u4e5f\u662f GPT \u7684\u4e00\u4e2a\u4e3b\u8981\u5e94\u7528\u3002GPT \u7cfb\u5217\u6a21\u578b\u7684\u7ed3\u6784\u4e3b\u8981\u6e90\u4e8e Transformer \u7684 Encoder \u90e8\u5206\u3002 \u672c\u6b21\u5b9e\u9a8c\u8981\u6c42\u8bad\u7ec3\u4e00\u4e2a GPT-2/3 \u7ed3\u6784\u7684\u6a21\u578b\uff0c\u5177\u4f53\u6a21\u578b\u7ed3\u6784\u8bf7\u53c2\u9605 GPT-2 \u548c GPT-3 \u7684\u539f\u8bba\u6587\u3002","title":"3.1.3 GPT"},{"location":"Lab5-DL/#32","text":"","title":"3.2 \u6570\u636e\u96c6"},{"location":"Lab5-DL/#321-mnist","text":"MNIST \u6570\u636e\u96c6 (Mixed National Institute of Standards and Technology database) \u662f\u7f8e\u56fd\u56fd\u5bb6\u6807\u51c6\u4e0e\u6280\u672f\u7814\u7a76\u9662\u6536\u96c6\u6574\u7406\u7684\u5927\u578b\u624b\u5199\u6570\u5b57\u6570\u636e\u5e93\uff0c\u5305\u542b 60,000 \u4e2a\u793a\u4f8b\u7684\u8bad\u7ec3\u96c6\u4ee5\u53ca 10,000 \u4e2a\u793a\u4f8b\u7684\u6d4b\u8bd5\u96c6\u3002 MNIST \u6570\u636e\u96c6\u4e0b\u8f7d\uff1ahttp://yann.lecun.com/exdb/mnist/index.html","title":"3.2.1 MNIST \u624b\u5199\u6570\u5b57\u6570\u636e\u96c6"},{"location":"Lab5-DL/#322-web-of-science","text":"Web of Science \u662f\u4e00\u4e2a\u4ed8\u8d39\u7684\u6587\u732e\u5143\u6570\u636e\u5e93\uff0c\u901a\u8fc7\u6821\u7f51\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\u3002\u8be5\u6570\u636e\u96c6\u539f\u5148\u7528\u4e8e\u6587\u672c\u5c42\u6b21\u5316\u5206\u7c7b\uff0c\u7531\u4e8e\u6211\u4eec\u91c7\u7528\u7684\u662f\u65e0\u76d1\u7763\u5b66\u4e60\u7684\u9884\u8bad\u7ec3\uff0c\u56e0\u6b64\u4e0d\u5173\u5fc3\u5b83\u7ed9\u51fa\u7684\u6807\u7b7e\uff0c\u53ea\u8981\u7528\u76ee\u5f55\u4e0b\u7684 X \u6587\u672c\u8bad\u7ec3\u3002\u5143\u6570\u636e\u76ee\u5f55\uff08\u5305\u542b\u6458\u8981\u548c\u5173\u952e\u8bcd\uff09\u4e5f\u53ef\u4ee5\u5ffd\u7565\u3002 \u6570\u636e\u96c6\u4e0b\u8f7d\uff1ahttps://data.mendeley.com/datasets/9rw3vkcfy4/6","title":"3.2.2 Web of Science \u6570\u636e\u96c6"},{"location":"Lab5-DL/#4","text":"","title":"4 \u5b9e\u9a8c\u6b65\u9aa4"},{"location":"Lab5-DL/#41-lenet-5","text":"","title":"4.1 LeNet-5 \u8bad\u7ec3"},{"location":"Lab5-DL/#411","text":"\u6211\u4eec\u5efa\u8bae\u5229\u7528 torchvision \u63d0\u4f9b\u7684 torchvision.datasets \u65b9\u6cd5\u5bfc\u5165\u6570\u636e\uff0c torchvision.datasets \u6240\u63d0\u4f9b\u7684\u63a5\u53e3\u5341\u5206\u65b9\u4fbf\uff0c\u4e4b\u540e\u4f60\u53ef\u4ee5\u7528 torch.utils.data.DataLoader \u7ed9\u4f60\u7684\u6a21\u578b\u52a0\u8f7d\u6570\u636e\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u4e5f\u6b22\u8fce\u4f60\u81ea\u5b9a\u4e49\u4f60\u7684 Dataset \u7c7b\uff0c\u8fd9\u6837\u505a\u4f1a\u7ed9\u4f60\u5e26\u6765\u989d\u5916\u7684\u5206\u6570\u3002\u4e3a\u6b64\uff0c\u4f60\u9700\u8981\u7ee7\u627f torch.utils.data.Dataset \u5e76\u81f3\u5c11\u9700\u8981\u91cd\u5199\u5176\u4e2d\u7684 __len__() \u548c __getitem__() \u51fd\u6570\uff0c \u8fd9\u91cc \u6709\u5b98\u65b9\u5bf9 torch.utils.data \u7c7b\u7684\u4ecb\u7ecd\uff0c\u5b83\u6216\u8bb8\u53ef\u4ee5\u5e2e\u5230\u4f60\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u7528\u5230\u7684 MNIST \u6570\u636e\u96c6\u53ef\u7528 torchvision.datasets \u5bfc\u5165\uff0c\u4e0b\u9762\u5bf9\u4e00\u4e9b\u4f60\u53ef\u80fd\u4f1a\u7528\u5230\u7684\u53c2\u6570\u7b80\u5355\u52a0\u4ee5\u8bf4\u660e \u6ce8\u610f\uff1a\u8bf7\u5728\u6e05\u695a\u53c2\u6570\u542b\u4e49\u540e\u8c03\u7528\u5b83\u4eec # MNIST torchvision . datasets . MNIST ( root , train = True , transform = None , target_transform = None , download = False ) \u4e00\u4e9b\u91cd\u8981\u7684\u53c2\u6570\u8bf4\u660e\uff1a root: \u5728 MNIST \u4e2d\u662f processed/training.pt \u548c processed/test.pt \u7684\u4e3b\u76ee\u5f55 train: True \u4ee3\u8868\u8bad\u7ec3\u96c6\uff0c False \u4ee3\u8868\u6d4b\u8bd5\u96c6 transform \u548c target_transform: \u5206\u522b\u662f\u5bf9\u56fe\u50cf\u548c label \u7684\u8f6c\u6362\u64cd\u4f5c download: \u82e5\u4e3a True \u5219\u4e0b\u8f7d\u6570\u636e\u96c6\u5e76\u653e\u5230 root \u6240\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\uff0c\u5426\u5219\u76f4\u63a5\u5c1d\u8bd5\u4ece root \u76ee\u5f55\u4e2d\u8bfb\u53d6 \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u83b7\u53d6\u66f4\u52a0\u8be6\u7ec6\u7684\u8bf4\u660e","title":"4.1.1 \u6570\u636e\u51c6\u5907"},{"location":"Lab5-DL/#412","text":"","title":"4.1.2 \u6a21\u578b\u7f16\u5199"},{"location":"Lab5-DL/#4121","text":"PyTorch \u63d0\u4f9b\u4e86\u8bb8\u591a\u79cd\u5b9a\u4e49\u6a21\u578b\u7684\u65b9\u5f0f\uff0c\u6700\u5e38\u7528\u7684\u4e00\u79cd\u662f\u5c06\u7f51\u7edc\u7ed3\u6784\u4ee5\u7c7b\u4fdd\u5b58\uff0c\u4f60\u5e94\u5f53\u9996\u5148\u7ee7\u627f torch.nn.Module \uff0c\u5e76\u5b9e\u73b0\u6b63\u5411\u4f20\u64ad\u7684 forward \u51fd\u6570\uff0c(\u4e3a\u4ec0\u4e48\u4e0d\u7528\u5b9a\u4e49\u53cd\u5411\u4f20\u64ad\u51fd\u6570\u5462\uff1f\u56e0\u4e3a\u4f60\u7ee7\u627f\u7684 nn.Module \u5c31\u662f\u5e72\u8fd9\u4e2a\u4e8b\u60c5\u7684)\u3002 \u4e0b\u9762\u4e3a\u7f51\u7edc\u7ed3\u6784\u7684\u4e00\u4e2a sample\uff08\u4f46\u663e\u7136\u8fd9\u6837\u7684\u7f51\u7edc\u5e76\u4e0d\u80fd\u7528\u4e8e\u672c\u6b21 Lab\uff09\uff0c\u672c\u6b21\u5b9e\u9a8c\u4e2d\u4f60\u9700\u8981\u81ea\u5b9a\u4e49\u4f60\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u4ee5\u5b8c\u6210\u6211\u4eec\u7684\u5206\u7c7b\u4efb\u52a1\uff1a import torch.nn as nn import torch.nn.functional as F class Model ( nn . Module ): def __init__ ( self ): super ( Model , self ) . __init__ () # \u5229\u7528\u53c2\u6570\u521d\u59cb\u5316\u7236\u7c7b self . conv1 = nn . Conv2d ( 1 , 20 , 5 ) self . conv2 = nn . Conv2d ( 20 , 20 , 5 ) def forward ( self , x ): x = F . relu ( self . conv1 ( x )) return F . relu ( self . conv2 ( x )) \u5f53\u7136\uff0c\u4f60\u9700\u8981\u5b9e\u4f8b\u5316\u4f60\u7684\u6a21\u578b\uff0c\u53ef\u4ee5\u76f4\u63a5\u5bf9\u6a21\u578b\u6253\u5370\u4ee5\u67e5\u770b\u7ed3\u6784 model = Model () print ( model ) \u7f51\u7edc\u7ed3\u6784\u7f16\u5199\u4e2d\u4e00\u4e2a\u5f88\u5927\u7684\u96be\u70b9\u5728\u4e8e\u6bcf\u4e00\u6b65\u7684 tensor shape \u9700\u8981\u5339\u914d\uff0c\u8bf7\u4ed4\u7ec6\u68c0\u67e5\u4f60\u7684\u4ee3\u7801\u6765\u786e\u4fdd\u6b64\u90e8\u5206\u7684\u6b63\u786e\u6027\u3002","title":"4.1.2.1 \u7f51\u7edc\u7ed3\u6784"},{"location":"Lab5-DL/#4122","text":"\u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\u90fd\u88ab\u5b9a\u4e49\u5728\u4e86 torch.nn \u4e2d\uff0c\u4f60\u53ef\u4ee5\u5728\u8bad\u7ec3\u8fc7\u7a0b\u5f00\u59cb\u524d\u5c06\u5176\u5b9e\u4f8b\u5316\uff0c\u5e76\u5728\u8bad\u7ec3\u65f6\u8c03\u7528\uff0c\u4f8b\u5982\uff1a criterion = torch . nn . CrossEntropyLoss ()","title":"4.1.2.2 \u635f\u5931\u51fd\u6570"},{"location":"Lab5-DL/#4123","text":"\u6b63\u5411\u4f20\u64ad\u662f\u6307\u5bf9\u795e\u7ecf\u7f51\u7edc\u6cbf\u7740\u4ece\u8f93\u5165\u5c42\u5230\u8f93\u51fa\u5c42\u7684\u987a\u5e8f\uff0c\u4f9d\u6b21\u8ba1\u7b97\u5e76\u5b58\u50a8\u6a21\u578b\u7684\u4e2d\u95f4\u53d8\u91cf\uff08\u5305\u62ec\u8f93\u51fa\uff09\u3002 \u6b63\u5411\u4f20\u64ad\u7684\u8fc7\u7a0b\u5728 forward \u4e2d\u5b9a\u4e49\uff0c\u5bf9\u4e8e\u6a21\u578b\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u8f93\u5165\u8f93\u51fa\u5f97\u5230\u6a21\u578b\u9884\u6d4b\u7684\u7ed3\u679c\u3002 y_pred = model ( x )","title":"4.1.2.3 \u6b63\u5411\u4f20\u64ad"},{"location":"Lab5-DL/#4124","text":"\u53cd\u5411\u4f20\u64ad\uff08Backpropagation\uff0cBP\uff09\u662f\u201c\u8bef\u5dee\u53cd\u5411\u4f20\u64ad\u201d\u7684\u7b80\u79f0\uff0c\u662f\u4e00\u79cd\u4e0e\u6700\u4f18\u5316\u65b9\u6cd5\uff08\u5982\u68af\u5ea6\u4e0b\u964d\u6cd5\uff09\u7ed3\u5408\u4f7f\u7528\u7684\uff0c\u7528\u6765\u8bad\u7ec3\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7684\u5e38\u89c1\u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u5bf9\u7f51\u7edc\u4e2d\u6240\u6709\u6743\u91cd\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u3002\u8fd9\u4e2a\u68af\u5ea6\u4f1a\u53cd\u9988\u7ed9\u6700\u4f18\u5316\u65b9\u6cd5\uff0c\u7528\u6765\u66f4\u65b0\u6743\u503c\u4ee5\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u3002 \u5728\u8ba1\u7b97\u8fc7\u6a21\u578b\u7684loss\u4e4b\u540e\uff0c\u53ef\u4ee5\u5229\u7528 loss.backward() \u8ba1\u7b97\u53cd\u5411\u4f20\u64ad\u7684\u68af\u5ea6\uff0c\u68af\u5ea6\u4f1a\u88ab\u76f4\u63a5\u50a8\u5b58\u5728 requires_grad=True \u7684\u8282\u70b9\u4e2d\uff0c\u4e0d\u8fc7\u6b64\u65f6\u8282\u70b9\u7684\u6743\u91cd\u6682\u65f6\u4e0d\u4f1a\u66f4\u65b0\uff0c\u56e0\u6b64\u53ef\u4ee5\u505a\u5230\u68af\u5ea6\u7684\u7d2f\u52a0\u3002","title":"4.1.2.4 \u53cd\u5411\u4f20\u64ad"},{"location":"Lab5-DL/#4125","text":"\u5e38\u7528\u7684\u4f18\u5316\u5668\u90fd\u88ab\u5b9a\u4e49\u5728\u4e86 torch.optim \u4e2d\uff0c\u4e3a\u4e86\u4f7f\u7528\u4f18\u5316\u5668\uff0c\u4f60\u9700\u8981\u6784\u5efa\u4e00\u4e2a optimizer \u5bf9\u8c61\u3002\u8fd9\u4e2a\u5bf9\u8c61\u80fd\u591f\u4fdd\u6301\u5f53\u524d\u53c2\u6570\u72b6\u6001\u5e76\u57fa\u4e8e\u8ba1\u7b97\u5f97\u5230\u7684\u68af\u5ea6\u8fdb\u884c\u53c2\u6570\u66f4\u65b0\u3002\u4f60\u9700\u8981\u7ed9\u5b83\u4e00\u4e2a\u5305\u542b\u4e86\u9700\u8981\u4f18\u5316\u7684\u53c2\u6570\uff08\u5fc5\u987b\u90fd\u662f Variable \u5bf9\u8c61\uff09\u7684iterable\u3002\u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u8bbe\u7f6eoptimizer\u7684\u53c2\u6570\u9009\u9879\uff0c\u6bd4\u5982\u5b66\u4e60\u7387\uff0c\u6743\u91cd\u8870\u51cf\uff0c\u4f8b\u5982\uff1a optimizer = optim . SGD ( model . parameters (), lr = 0.01 , momentum = 0.9 ) optimizer = optim . Adam ([ var1 , var2 ], lr = 0.0001 ) \u6240\u6709\u7684optimizer\u90fd\u5b9e\u73b0\u4e86step()\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u66f4\u65b0\u6240\u6709\u7684\u53c2\u6570\u3002\u6216\u8bb8\u4f60\u4f1a\u5728\u53cd\u5411\u4f20\u64ad\u540e\u7528\u5230\u5b83\u3002 optimizer . step () \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u53cd\u5411\u4f20\u64ad\u524d\uff0c\u5982\u679c\u4f60\u4e0d\u5e0c\u671b\u68af\u5ea6\u7d2f\u52a0\uff0c\u8bf7\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u68af\u5ea6\u6e05\u96f6\u3002 optimizer . zero_grad ()","title":"4.1.2.5 \u4f18\u5316\u5668"},{"location":"Lab5-DL/#413","text":"\u524d\u6587\u4e2d\u5df2\u7ecf\u5b9a\u4e49\u4e86\u7f51\u7edc\u7ed3\u6784\u3001\u635f\u5931\u51fd\u6570\u3001\u4f18\u5316\u5668\uff0c\u81f3\u6b64\uff0c\u4e00\u4e2a\u8f83\u4e3a\u5b8c\u6574\u7684\u8bad\u7ec3\u8fc7\u7a0b\u5982\u4e0b\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f60\u7684\u8bad\u7ec3\u8fc7\u7a0b\u8981\u4e0d\u65ad\u4ece DataLoader \u4e2d\u53d6\u51fa\u6570\u636e\u3002 criterion = torch . nn . MSELoss ( reduction = 'sum' ) optimizer = torch . optim . SGD ( model . parameters (), lr = 1e-8 , momentum = 0.9 ) for t in range ( 30000 ): # Forward pass: Compute predicted y by passing x to the model y_pred = model ( x ) # Compute and print loss loss = criterion ( y_pred , y ) # Zero gradients, perform a backward pass, and update the weights. optimizer . zero_grad () loss . backward () optimizer . step ()","title":"4.1.3 \u8bad\u7ec3\u8fc7\u7a0b"},{"location":"Lab5-DL/#414-tensorboard","text":"TensorBoard \u662f\u5e38\u7528\u7684\u8bad\u7ec3\u8fc7\u7a0b\u53ef\u89c6\u5316\u5de5\u5177\u3002\u8bf7\u53c2\u8003 PyTorch \u7684\u5b98\u65b9\u6559\u7a0b\u5b8c\u6210\u914d\u7f6e\u3002","title":"4.1.4 TensorBoard"},{"location":"Lab5-DL/#415-tips","text":"nn.functional.ReLU \uff08\u7b80\u8bb0\u4e3a F.ReLU \uff09\u548c nn.ReLU \u7565\u6709\u4e0d\u540c\uff0c\u533a\u522b\u5728\u4e8e\u524d\u8005\u4f5c\u4e3a\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u5982 4.3.1 \u4e2d\u6240\u793a\uff0c\u800c\u540e\u8005\u4f5c\u4e3a\u4e00\u4e2a\u5c42\u7ed3\u6784\uff0c\u5fc5\u987b\u6dfb\u52a0\u5230 nn.Module \u5bb9\u5668\u4e2d\u624d\u80fd\u4f7f\u7528\uff0c\u4e24\u8005\u5b9e\u73b0\u7684\u529f\u80fd\u4e00\u6837\uff0c\u5728 PyTorch \u4e2d\uff0c nn.X \u90fd\u6709\u5bf9\u5e94\u7684\u51fd\u6570\u7248\u672c F.X \u3002 \u9664\u4e86\u5229\u7528\u7ee7\u627f nn.Module \u6765\u5efa\u7acb\u7f51\u7edc\uff0c\u4e0d\u63a8\u8350\u4f46\u53ef\u4ee5\u4f7f\u7528 nn.ModuleList , nn.ModuleDict \uff0c\u63a8\u8350\u4f7f\u7528 nn.Sequential \u76f4\u63a5\u5b9a\u4e49\u6a21\u578b \u4f60\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u7684 device \u53d8\u91cf\uff0c\u4ee5\u4fbf\u4f60\u7684\u6a21\u578b\u5728\u6ca1\u6709 GPU \u73af\u5883\u4e0b\u4e5f\u53ef\u4ee5\u6d4b\u8bd5\uff1a device = torch . device ( \"cuda\" if torch . cuda . is_available () else \"cpu\" ) model = Model () . to ( device ) some_data = some_data . to ( device ) \u76f8\u6bd4\u4e8e\u539f\u751f\u7684 PyTorch \uff0c PyTorch Lightning \u6846\u67b6\u5bf9\u5176\u8fdb\u884c\u4e86\u66f4\u9ad8\u5c42\u6b21\u7684\u5c01\u88c5\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7b80\u5316\u4e86\u6a21\u578b\u5b9a\u4e49\u3001\u8bad\u7ec3\u4ee5\u53ca\u6d4b\u8bd5\u7684\u6b65\u9aa4\uff0c\u4f7f\u7528 PyTorch Lightning \u4f5c\u4e3a\u672c\u6b21\u5b9e\u9a8c\u7684\u52a0\u5206\u9879\uff0c\u5b98\u7f51\u94fe\u63a5\u5df2\u9644\u5728\u53c2\u8003\u8d44\u6599\u4e2d\u3002\u5982\u679c\u4f60\u80fd\u591f\u5728 TensorBoard \u4e2d\u5c06\u4e2d\u95f4\u5c42\u53ef\u89c6\u5316\uff0c\u4f60\u80fd\u5f97\u5230\u66f4\u591a\u7684\u52a0\u5206\u3002","title":"4.1.5 Tips"},{"location":"Lab5-DL/#42-gpt","text":"","title":"4.2 GPT \u8bad\u7ec3\u4e0e\u52a0\u901f"},{"location":"Lab5-DL/#421","text":"\u9884\u5904\u7406\u6700\u4e3b\u8981\u7684\u5de5\u4f5c\u662f\u5206\u8bcd\uff08tokenize\uff09\u3002\u5206\u8bcd\u5668\u5c06\u6587\u672c\u62c6\u5206\u6210\u8bcd\uff0c\u518d\u8f6c\u6362\u6210\u6570\u5b57\u4ee5\u4f9b\u6a21\u578b\u8bad\u7ec3\u3002\u7531\u4e8e\u53e5\u5b50\u957f\u77ed\u4e0d\u4e00\uff0c\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u586b\u5145\u6216\u622a\u65ad\uff0c\u6700\u540e\u751f\u6210\u8f93\u5165\u7684\u5f20\u91cf\u3002 \u5206\u8bcd\u7684\u7c92\u5ea6\uff0c\u6700\u81ea\u7136\u7684\u662f\u6309 \u5355\u8bcd\u5212\u5206 \uff0c\u4f8b\u5982\u82f1\u8bed\u4e2d\u6839\u636e\u7a7a\u683c\u548c\u6807\u70b9\u7b26\u53f7\u5212\u5206\uff0c\u4f46\u751f\u6210\u7684\u8bcd\u8868\u4f1a\u5f88\u5927\uff0c\u589e\u52a0\u5b58\u50a8\u548c\u8ba1\u7b97\u590d\u6742\u5ea6\uff1b\u53e6\u4e00\u4e2a\u6781\u7aef\u662f\u6309 \u5b57\u6bcd\u5212\u5206 \uff0c\u867d\u7136\u8bcd\u8868\u4f1a\u5f88\u5c0f\uff0c\u4f46\u6a21\u578b\u5f88\u96be\u5b66\u5230\u6709\u610f\u4e49\u7684\u5185\u5bb9\uff1b\u56e0\u6b64\u73b0\u5728\u4e00\u822c\u4f7f\u7528 \u5b50\u8bcd\uff08subword\uff09\u5212\u5206 \uff0c\u5728\u8bcd\u8868\u4e2d\u4fdd\u7559\u8f83\u77ed\u7684\u5e38\u7528\u8bcd\uff0c\u751f\u50fb\u8bcd\u5219\u7528\u5e38\u7528\u8bcd\u62fc\u63a5\u800c\u6210\u3002 \u5e38\u7528\u7684\u5206\u8bcd\u7b97\u6cd5\u6709\u5b57\u8282\u5bf9\u7f16\u7801\uff08Byte-Pair Encoding, BPE \uff09\u3001WordPiece\u3001Unigram\u3001SentencePiece \u7b49\uff0c\u5176\u4e2d GPT \u7528\u7684\u662f BPE\u3002BPE \u4ece\u5355\u4e2a\u5b57\u6bcd\u7684\u8bcd\u8868\u5f00\u59cb\uff0c\u901a\u8fc7\u4e0d\u65ad\u5408\u5e76\u9ad8\u9891\u5b57\u6bcd\u5bf9\uff0c\u76f4\u5230\u8fbe\u5230\u9884\u5b9a\u7684\u8bcd\u8868\u5927\u5c0f\u3002WordPiece \u4e0e BPE \u57fa\u672c\u76f8\u540c\uff0c\u5408\u5e76\u7b56\u7565\u6709\u6240\u533a\u522b\u3002 \u5177\u4f53\u539f\u7406\u4ecb\u7ecd\u53ef\u53c2\u8003 https://huggingface.co/docs/transformers/tokenizer_summary \uff0c\u4ee5\u53ca NLP BERT GPT\u7b49\u6a21\u578b\u4e2d tokenizer \u7c7b\u522b\u8bf4\u660e\u8be6\u89e3 \u3002 \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 huggingface \u7684\u9884\u8bad\u7ec3\u5206\u8bcd\u5668 \u4e2d\u63d0\u4f9b\u7684 GPT-2 tokenizer\uff0c\u5982\u9009\u62e9\u81ea\u5df1\u8bad\u7ec3 vocab \u53ef\u4ee5\u83b7\u5f97 bonus\u3002","title":"4.2.1 \u6587\u672c\u6570\u636e\u9884\u5904\u7406"},{"location":"Lab5-DL/#422","text":"\u8bf7\u53c2\u8003 3.1.3 \u4e2d\u7684\u6a21\u578b\u7ed3\u6784\u63cf\u8ff0\u5b8c\u6210\u57fa\u51c6\u4ee3\u7801\u7684\u6784\u5efa\uff0c\u5e76\u57fa\u4e8e\u6b64\u8fdb\u884c\u8bad\u7ec3\u52a0\u901f\u3002\u4e3a\u4e86\u51cf\u8f7b\u5de5\u4f5c\u91cf\uff0c\u6b64\u90e8\u5206\u5141\u8bb8\u4f7f\u7528 huggingface transformer \u7b49\u6a21\u578b\u5e93\uff0c\u4ee5\u53ca\u5176\u4ed6\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u52a0\u901f\u6846\u67b6\u3002\u4f46\u9700\u8981\u5728\u62a5\u544a\u91cc\u9648\u8ff0\u4f60\u6240\u91c7\u7528\u7684\u5404\u9879\u4f18\u5316\u7684\u539f\u7406\u3001\u51fa\u53d1\u70b9\u548c\u6548\u679c\u3002\u6ce8\u610f\u672c\u6b21\u5b9e\u9a8c\u4e2d\u7684 GPT \u9700\u8981\u4f7f\u7528\u7684\u662f GPT-2 \u7684\u6a21\u578b\u7ed3\u6784\u3002","title":"4.2.2 \u57fa\u51c6\u4ee3\u7801\u6784\u5efa\u4e0e\u52a0\u901f"},{"location":"Lab5-DL/#423","text":"\u5355\u5f20GPU\u7684\u663e\u5b58\u548c\u7b97\u529b\u662f\u6709\u9650\u7684\uff0c\u968f\u7740\u6a21\u578b\u5927\u5c0f\u7684\u589e\u957f\uff0c\u6211\u4eec\u9700\u8981\u591a\u5f20GPU\u4e00\u8d77\u53c2\u4e0e\u8bad\u7ec3\u4ee5\u83b7\u5f97\u66f4\u5927\u7684\u663e\u5b58\u548c\u66f4\u9ad8\u7684\u7b97\u529b\u3002\u591a\u5361\u8bad\u7ec3Transformer\u6a21\u578b\u65f6\u5e38\u89c1\u7684\u5e76\u884c\u7b56\u7565\u6709 \u5f20\u91cf\u5e76\u884c\uff08Tensor Parallelism\uff09 \u3001 \u6d41\u6c34\u7ebf\u5e76\u884c\uff08Pipeline Parallelism\uff09 \u548c \u6570\u636e\u5e76\u884c\uff08Data Parallelism\uff09 \u3002 \u5f20\u91cf\u5e76\u884c\u5c06\u6a21\u578b\u5c42\u5185\u7684\u53c2\u6570\u5207\u5206\u5230\u4e0d\u540c\u8bbe\u5907\u8fdb\u884c\u8ba1\u7b97,\u5728Transformer\u4e2d\uff0c\u6ce8\u610f\u548c\u591a\u5c42\u611f\u77e5\u5668(MLP)\u7684\u5f20\u91cf\u5728\u5411\u524d\u548c\u5411\u540e\u8ba1\u7b97\u65f6\u6309\u884c\u6216\u5217\u5206\u5272\u3002 \u6d41\u6c34\u7ebf\u5e76\u884c\u5c06\u6a21\u578b\u4e0d\u540c\u7684\u5c42\u5207\u5206\u5230\u4e0d\u540c\u8bbe\u5907\u8fdb\u884c\u8ba1\u7b97\uff0c\u6d41\u6c34\u7ebf\u4e2d\u7684\u6bcf\u4e00\u8bbe\u5907\u63a5\u53d7\u4e0a\u4e00\u8282\u70b9\u7684\u7ed3\u679c\uff0c\u5e76\u628a\u81ea\u5df1\u7684\u7ed3\u679c\u4f20\u9012\u7ed9\u4e0b\u4e00\u8bbe\u5907\u3002 \u6570\u636e\u5e76\u884c\u5219\u5c06\u5168\u5c40\u6279\u6b21\u5927\u5c0f\uff08global batch size\uff09\u6309\u7167\u6d41\u6c34\u7ebf\u5206\u7ec4\u8fdb\u884c\u5206\u5272\uff0c\u6bcf\u4e2a\u6d41\u6c34\u7ebf\u7ec4\u90fd\u5305\u542b\u6a21\u578b\u7684\u4e00\u4e2a\u526f\u672c\uff0c\u6570\u636e\u5728\u7ec4\u5185\u6309\u7167\u5c40\u90e8\u6279\u6b21\u89c4\u6a21\u9001\u5165\u6a21\u578b\u526f\u672c\uff0c\u6700\u540e\u5c06\u5404\u7ec4\u5f97\u5230\u7684\u68af\u5ea6\u8fdb\u884c\u52a0\u6743\u5e73\u5747\u5f97\u5230\u603b\u7684\u68af\u5ea6\u3002 \u5728pytorch\u3001tensorflow\u7b49\u6846\u67b6\u4e2d\u90fd\u5b58\u5728\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684\u6a21\u5757\uff0c\u4e3a\u4e86\u51cf\u8f7b\u5de5\u4f5c\u91cf\uff0c\u6b64\u90e8\u5206\u4e5f\u5141\u8bb8\u4f7f\u7528 huggingface accelerate \u7b49\u6a21\u578b\u5e93\uff0c\u4ee5\u53ca\u5176\u4ed6\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u52a0\u901f\u6846\u67b6\u3002","title":"4.2.3 \u591a\u5361\u8bad\u7ec3"},{"location":"Lab5-DL/#424","text":"\u4f60\u9700\u8981\u6309\u7167\u4e0b\u5217\u8868\u683c\u4e2d\u7ed9\u5b9a\u7684\u6a21\u578b\u7ed3\u6784\u53c2\u6570\u5b9e\u73b0\u6a21\u578b\uff0c\u5e76\u6309\u7167\u8981\u6c42\u7684 token \u6570\u91cf\u5bf9\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3\u3002\u89c4\u5b9a token \u6570\u91cf\u8bad\u7ec3\u7ed3\u675f\u540e\uff0c\u82e5\u6a21\u578b\u635f\u5931\u4f4e\u4e8e 7\uff0c\u8ba4\u4e3a\u6a21\u578b\u8bad\u7ec3\u6210\u529f\uff0c\u6b64\u65f6\u8bad\u7ec3\u901f\u5ea6\u8d8a\u5feb\u8be5\u6d4b\u8bd5\u70b9\u5f97\u5206\u8d8a\u9ad8\uff1b\u5426\u5219\u8ba4\u4e3a\u6a21\u578b\u8bad\u7ec3\u5931\u8d25\uff0c\u8bb0\u96f6\u5206\u3002 Model size Hidden size Attention-heads Layers Sequence length Tokens 117M 768 12 12 1024 12M PS. Model size \u4f1a\u56e0 vocab size \u53d8\u5316\u800c\u6ce2\u52a8\uff0c\u56e0\u6b64\u4e0d\u4f1a\u4f5c\u4e3a\u5b9e\u73b0\u6b63\u786e\u6027\u7684\u4e3b\u8981\u5224\u65ad\u4f9d\u636e\uff0c\u6211\u4eec\u4f1a\u76f4\u63a5\u6839\u636e\u4ee3\u7801\u5224\u65ad\u6a21\u578b\u5b9e\u73b0\u7684\u6b63\u786e\u6027","title":"4.2.4 \u6a21\u578b\u8bc4\u5206\u89c4\u6a21"},{"location":"Lab5-DL/#5","text":"\u4f7f\u7528 PyTorch \u5b9e\u73b0\u6700\u57fa\u672c\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc LeNet-5\uff0c\u5e76\u5728 MNIST \u6570\u636e\u96c6\u4e0a\u4f7f\u7528 GPU \u8fdb\u884c\u8bad\u7ec3\uff0c\u5e76\u5bf9\u6d4b\u8bd5\u96c6\u8fdb\u884c\u6d4b\u8bd5\u3002 \u4f7f\u7528 PyTorch \u53ca\u76f8\u5173\u6a21\u578b\u5e93\u5b9e\u73b0\u7c7b GPT \u7f51\u7edc\uff0c\u5728 Web of Science \u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u5e76\u5c1d\u8bd5\u5bf9\u6a21\u578b\u8bad\u7ec3\u8fdb\u884c\u52a0\u901f\u3002 \u4f60\u9700\u8981\u63d0\u4ea4\uff1a \u5168\u90e8\u4ee3\u7801 \u5b9e\u9a8c\u62a5\u544a\uff0c\u5176\u4e2d\u9700\u8981\u5305\u542b\uff1a \u7b80\u8981\u5b9e\u9a8c\u8fc7\u7a0b \u8d34\u4e0a\u4e24\u4e2a\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u7684 GPU \u5360\u7528\u7387\u622a\u56fe \uff08\u4f7f\u7528 nvidia-smi \u67e5\u770b\uff09 Tensorboard \u4e24\u4e2a\u6a21\u578b\u7684\u635f\u5931\u66f2\u7ebf\u3001LeNet-5 \u7684\u51c6\u786e\u7387\u66f2\u7ebf\u7b49\u622a\u56fe \u5bf9\u4e8e LeNet-5\uff0c\u4f60\u9700\u8981\u5199\u660e\u6d4b\u8bd5\u96c6\u4e0a\u7684 \u8bc6\u522b\u6b63\u786e\u7387 \u5bf9\u4e8e GPT\uff0c\u4f60\u9700\u8981\u5199\u660e\u8bad\u7ec3\u5b8c\u6210\u7684\u65f6\u95f4\uff0c\u6700\u540e\u7684\u6536\u655b\u60c5\u51b5\uff0c\u4ee5\u53ca\u4f7f\u7528\u7684\u52a0\u901f\u7b56\u7565 LeNet-5 \u90e8\u5206\u4e0d\u5141\u8bb8\u76f4\u63a5\u4f7f\u7528\u5404\u79cd\u6df1\u5ea6\u5b66\u4e60\u5f00\u53d1\u5de5\u5177\u5df2\u8bad\u7ec3\u597d\u7684 CNN \u7f51\u7edc\u7ed3\u6784\u4e0e\u53c2\u6570\uff1bGPT-2 \u90e8\u5206\u4e0d\u5141\u8bb8\u4f7f\u7528\u4efb\u4f55\u5df2\u7ecf\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u53c2\u6570 \u672c\u6b21\u5b9e\u9a8c\u4f9d\u7136\u4f1a\u8fdb\u884c\u67e5\u91cd\uff0c\u5982\u679c\u4f60\u53c2\u8003\u4e86\u7f51\u7edc\u4e0a\u7684\u4ee3\u7801\u8bf7\u5728\u62a5\u544a\u4e2d\u5217\u51fa\uff0c\u5e76\u4f53\u73b0\u51fa\u4f60\u7684\u7406\u89e3\uff0c\u5426\u5219\u4e00\u7ecf\u67e5\u51fa\u89c6\u4e3a\u6284\u88ad","title":"5 \u5b9e\u9a8c\u4efb\u52a1\u4e0e\u8981\u6c42"},{"location":"Lab5-DL/#_2","text":"PyTorch \u6846\u67b6 https://pytorch.org/ PyTorch Lightning \u6846\u67b6 https://www.pytorchlightning.ai/ MNIST \u6570\u636e\u96c6 http://yann.lecun.com/exdb/mnist/index.html LeNet-5 \u7f51\u7edc\u7ed3\u6784 http://yann.lecun.com/exdb/lenet/ GPT \u7f51\u7edc\u4ecb\u7ecd https://en.wikipedia.org/wiki/GPT-2","title":"\u53c2\u8003\u8d44\u6599"}]}